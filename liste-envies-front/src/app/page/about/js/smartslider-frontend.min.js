(function() {
  var t = this;
  (t.N2_ = t.N2_ || { r: [], d: [] }),
    (t.N2R =
      t.N2R ||
      function() {
        t.N2_.r.push(arguments);
      }),
    (t.N2D =
      t.N2D ||
      function() {
        t.N2_.d.push(arguments);
      });
}.call(window),
  N2D("SmartSliderBackgrounds", function(t, e) {
    function i(e) {
      (this.device = null),
        (this.slider = e),
        (this.lazyLoad = e.parameters.lazyLoad),
        (this.lazyLoadNeighbor = e.parameters.lazyLoadNeighbor),
        (this.deviceDeferred = t.Deferred()),
        this.slider.sliderElement.one(
          "SliderDevice",
          t.proxy(this.onSlideDeviceChangedFirst, this)
        ),
        this.slider.sliderElement.on(
          "visibleSlidesChanged",
          t.proxy(this.onVisibleSlidesChanged, this)
        ),
        this.slider.sliderElement.on(
          "slideCountChanged",
          t.proxy(this.onVisibleSlidesChanged, this)
        );
    }
    return (
      (i.prototype.whenWithProgress = function(e) {
        for (var i = 0, s = t.Deferred(), n = 0; n < e.length; n++)
          t.when(e[n]).done(function() {
            s.notify(++i, e.length);
          });
        return (
          t.when.apply(t, e).done(function() {
            s.resolveWith(null, arguments);
          }),
          s
        );
      }),
      (i.prototype.getBackgroundImages = function() {
        for (var t = [], e = 0; e < this.slider.realSlides.length; e++)
          t.push(this.slider.realSlides[e].background);
        return t;
      }),
      (i.prototype.onVisibleSlidesChanged = function() {
        1 == this.lazyLoad
          ? (this.load = t.when.apply(
              t,
              this.preLoadSlides(
                this.slider.getVisibleSlides(this.slider.currentSlide)
              )
            ))
          : 2 == this.lazyLoad &&
            (this.load = t.when.apply(
              t,
              this.preLoadSlides(
                this.slider.getVisibleSlides(this.slider.currentSlide)
              )
            ));
      }),
      (i.prototype.onSlideDeviceChangedFirst = function(e, i) {
        this.onSlideDeviceChanged(e, i),
          this.deviceDeferred.resolve(),
          this.slider.sliderElement.on(
            "SliderDevice",
            t.proxy(this.onSlideDeviceChanged, this)
          ),
          1 == this.lazyLoad
            ? ((this.preLoadSlides = this.preloadSlidesLazyNeighbor),
              (this.load = this.whenWithProgress(
                t,
                this.preLoadSlides(
                  this.slider.getVisibleSlides(this.slider.currentSlide)
                )
              )))
            : 2 == this.lazyLoad
            ? ((this.preLoadSlides = this._preLoadSlides),
              t(window).on("load", t.proxy(this.preLoadAll, this)),
              (this.load = this.whenWithProgress(
                t,
                this.preLoadSlides(
                  this.slider.getVisibleSlides(this.slider.currentSlide)
                )
              )))
            : ((this.preLoadSlides = this._preLoadSlides),
              (this.load = this.whenWithProgress(this.preLoadAll())));
      }),
      (i.prototype.onSlideDeviceChanged = function(t, e) {
        this.device = e;
        for (var i = 0; i < this.slider.realSlides.length; i++)
          this.slider.realSlides[i].background &&
            this.slider.realSlides[i].background.updateBackgroundToDevice(e);
      }),
      (i.prototype.preLoadAll = function() {
        for (var t = [], e = 0; e < this.slider.realSlides.length; e++)
          t.push(this.slider.realSlides[e].preLoad());
        return t;
      }),
      (i.prototype._preLoadSlides = function(t) {
        var e = [];
        "[object Array]" !== Object.prototype.toString.call(t) && (t = [t]);
        for (var i = 0; i < t.length; i++) e.push(t[i].preLoad());
        return e;
      }),
      (i.prototype.preloadSlidesLazyNeighbor = function(e) {
        var i = this._preLoadSlides(e);
        if (this.lazyLoadNeighbor)
          for (
            var s = 0, n = e[0].previousSlide, r = e[e.length - 1].nextSlide;
            s < this.lazyLoadNeighbor;

          )
            i.push(n.preLoad()),
              (n = n.previousSlide),
              i.push(r.preLoad()),
              (r = r.nextSlide),
              s++;
        var o = t.Deferred();
        if ("resolved" != i[0].state()) {
          var a = setTimeout(
            t.proxy(function() {
              this.slider.load.showSpinner("backgroundImage" + e[0].index),
                (a = null);
            }, this),
            50
          );
          t.when.apply(t, i).done(
            t.proxy(function() {
              a
                ? (clearTimeout(a), (a = null))
                : this.slider.load.removeSpinner(
                    "backgroundImage" + e[0].index
                  ),
                setTimeout(function() {
                  o.resolve();
                }, 100);
            }, this)
          );
        } else
          setTimeout(function() {
            o.resolve();
          }, 100);
        return i.push(o), i;
      }),
      (i.prototype.hack = function() {
        for (var t = 0; t < this.slider.realSlides.length; t++)
          this.slider.realSlides[t].background &&
            this.slider.realSlides[t].background.hack();
      }),
      i
    );
  }),
  N2D("SmartSliderLoad", function(t, e) {
    function i(e, i) {
      (this.parameters = t.extend({ fade: 1, scroll: 0 }, i)),
        (this.deferred = t.Deferred()),
        (this.smartSlider = e),
        (this.spinnerCouner = 0),
        (this.id = e.sliderElement.attr("id")),
        (this.$window = t(window)),
        (this.spinner = t("#" + this.id + "-spinner"));
    }
    return (
      (i.prototype.start = function() {
        if (this.parameters.scroll) {
          var e = t(window);
          e.on("scroll." + this.id, t.proxy(this.onScroll, this)),
            this.onScroll();
        } else if (this.parameters.fade) {
          (this.loadingArea = t("#" + this.id + "-placeholder").eq(0)),
            this.showSpinner("fadePlaceholder");
          var i = this.spinner.find(".n2-ss-spinner-counter");
          i.length &&
            (i.html("0%"),
            this.smartSlider.backgrounds.load.progress(
              t.proxy(function(t, e) {
                i.html(Math.round((t / (e + 1)) * 100) + "%");
              }, this)
            )),
            this.showSlider();
        } else this.showSlider();
      }),
      (i.prototype.onScroll = function() {
        this.$window.scrollTop() + this.$window.height() >
          this.smartSlider.sliderElement.offset().top + 100 &&
          (this.$window.off("scroll." + this.id), this.showSlider());
      }),
      (i.prototype.loadLayerImages = function() {
        var e = t.Deferred();
        return (
          this.smartSlider.sliderElement
            .find(".n2-ss-layers-container")
            .n2imagesLoaded()
            .always(function() {
              e.resolve();
            }),
          e
        );
      }),
      (i.prototype.showSlider = function() {
        t.when(
          this.smartSlider.responsive.ready,
          this.smartSlider.backgrounds.load,
          this.loadLayerImages()
        ).always(
          t.proxy(function() {
            this._showSlider();
          }, this)
        );
      }),
      (i.prototype._showSlider = function(e) {
        (this.smartSlider.responsive.isReadyToResize = !0),
          t.when.apply(t, this.smartSlider.widgetDeferreds).done(
            t.proxy(function() {
              (this.smartSlider.responsive.invalidateResponsiveState = !0),
                this.smartSlider.responsive.doResize(),
                this.smartSlider.mainAnimation &&
                  this.smartSlider.mainAnimation.setToStarterSlide(
                    this.smartSlider.starterSlide
                  ),
                this.smartSlider.starterSlide.setStarterSlide(),
                this.smartSlider.sliderElement.trigger("BeforeVisible"),
                this.smartSlider.responsive.alignElement.addClass(
                  "n2-ss-align-visible"
                ),
                this.smartSlider.sliderElement
                  .addClass("n2-ss-loaded")
                  .removeClass("n2notransition"),
                this.spinner.find(".n2-ss-spinner-counter").html(""),
                this.removeSpinner("fadePlaceholder"),
                t("#" + this.id + "-placeholder").remove(),
                (this.loadingArea = this.smartSlider.sliderElement),
                "function" == typeof e
                  ? e(this.deferred)
                  : this.deferred.resolve();
            }, this)
          );
      }),
      (i.prototype.loaded = function(t) {
        this.deferred.done(t);
      }),
      (i.prototype.showSpinner = function(t) {
        0 === this.spinnerCouner &&
          this.spinner.appendTo(this.loadingArea).css("display", ""),
          this.spinnerCouner++;
      }),
      (i.prototype.removeSpinner = function(t) {
        this.spinnerCouner--,
          this.spinnerCouner <= 0 &&
            (this.spinner.detach(), (this.spinnerCouner = 0));
      }),
      i
    );
  }),
  N2D("ScrollTracker", function(t, e, i) {
    function s() {
      (this.started = !1), (this.items = []);
    }
    return (
      (s.prototype.add = function(t, e, i, s) {
        var n = { $el: t, mode: e, onVisible: i, onHide: s, state: "unknown" };
        this.items.push(n),
          this._onScroll(
            n,
            Math.max(document.documentElement.clientHeight, window.innerHeight)
          ),
          this.started || this.start();
      }),
      (s.prototype.start = function() {
        this.started ||
          (t(window).on("scroll.scrollTracker", t.proxy(this.onScroll, this)),
          (this.started = !0));
      }),
      (s.prototype.onScroll = function(t) {
        for (
          var e = Math.max(
              document.documentElement.clientHeight,
              window.innerHeight
            ),
            i = 0;
          i < this.items.length;
          i++
        )
          this._onScroll(this.items[i], e);
      }),
      (s.prototype._onScroll = function(t, e) {
        var i = t.$el[0].getBoundingClientRect(),
          s = i.height > 0.7 * e,
          n = !0;
        "partly-visible" === t.mode
          ? s && (i.bottom < 0 || i.top >= i.height)
            ? (n = !1)
            : !s &&
              (i.bottom - i.height < 0 || i.top - e + i.height >= 0) &&
              (n = !1)
          : "not-visible" === t.mode &&
            (n = i.top - e < 0 && i.top + i.height > 0),
          n === !1
            ? "hidden" !== t.state &&
              ("function" == typeof t.onHide && t.onHide(),
              (t.state = "hidden"))
            : "visible" !== t.state &&
              ("function" == typeof t.onVisible && t.onVisible(),
              (t.state = "visible"));
      }),
      new s()
    );
  }),
  N2D("SmartSliderApi", function(t, e) {
    function i() {
      (this.sliders = {}), (this.readys = {}), (this._resetCounters = []);
    }
    return (
      (i.prototype.makeReady = function(t, e) {
        if (((this.sliders[t] = e), "undefined" != typeof this.readys[t]))
          for (var i = 0; i < this.readys[t].length; i++)
            this.readys[t][i].call(e, e, e.sliderElement);
      }),
      (i.prototype.ready = function(t, e) {
        "undefined" != typeof this.sliders[t]
          ? e.call(
              this.sliders[t],
              this.sliders[t],
              this.sliders[t].sliderElement
            )
          : ("undefined" == typeof this.readys[t] && (this.readys[t] = []),
            this.readys[t].push(e));
      }),
      (i.prototype.trigger = function(e, i) {
        var s = t(e),
          n = i.split(","),
          r = s.closest(".n2-ss-slide,.n2-ss-static-slide");
        if (n.length > 1) {
          -1 == t.inArray(e, this._resetCounters) &&
            (this._resetCounters.push(e),
            r.on("layerAnimationSetStart.resetCounter", function() {
              s.data("eventCounter", 0);
            }));
          var o = s.data("eventCounter") || 0;
          (i = n[o]),
            o++,
            o > n.length - 1 && (o = 0),
            s.data("eventCounter", o);
        }
        r.triggerHandler("ss" + i);
      }),
      (i.prototype.applyAction = function(e, i) {
        var s = t(e)
          .closest(".n2-ss-slider")
          .data("ss");
        s[i].apply(s, Array.prototype.slice.call(arguments, 2));
      }),
      (i.prototype.applyActionWithClick = function() {
        nextend.shouldPreventClick || this.applyAction.apply(this, arguments);
      }),
      (window.n2ss = new i()),
      i
    );
  }),
  N2D("SmartSliderAbstract", function($, undefined) {
    function SmartSliderAbstract(t, e) {
      (this.editor = null),
        (this.startedDeferred = $.Deferred()),
        (this.visibleDeferred = $.Deferred()),
        t instanceof $ && (t = "#" + t.attr("id"));
      var i = t.substr(1);
      if (
        ((this.elementID = i),
        window[i] && window[i] instanceof SmartSliderAbstract)
      ) {
        if (window[i].sliderElement === undefined)
          return void console.error(
            "Slider [#" + i + "] inited multiple times"
          );
        if ($.contains(document.body, window[i].sliderElement.get(0)))
          return void console.error(
            "Slider [#" + i + "] embedded multiple times"
          );
      }
      (this.readyDeferred = $.Deferred()),
        N2D(
          t,
          $.proxy(function() {
            return this;
          }, this)
        ),
        (this.isAdmin = !!e.admin),
        (this.id = parseInt(i.replace("n2-ss-", ""))),
        (window[i] = this),
        e.isDelayed !== undefined && e.isDelayed
          ? $(window).ready(
              $.proxy(function() {
                this.waitForExists(i, e);
              }, this)
            )
          : this.waitForExists(i, e);
    }
    return (
      (SmartSliderAbstract.prototype.kill = function() {
        this.killed = !0;
        var t = this.sliderElement.attr("id"),
          e = $("#" + t + "-placeholder");
        e.length
          ? e.remove()
          : N2R("documentReady", function(e) {
              e("#" + t + "-placeholder").remove();
            });
        var i = this.sliderElement.closest(".n2-ss-margin");
        i.length
          ? i.remove()
          : N2R(
              "documentReady",
              $.proxy(function(t) {
                this.sliderElement.closest(".n2-ss-margin").remove();
              }, this)
            );
        var s = this.sliderElement.closest(".n2-ss-align");
        s.length
          ? s.remove()
          : N2R(
              "documentReady",
              $.proxy(function(t) {
                this.sliderElement.closest(".n2-ss-align").remove();
              }, this)
            ),
          n2ss.makeReady(this.id, this),
          this.readyDeferred.resolve();
      }),
      (SmartSliderAbstract.prototype.waitForExists = function(t, e) {
        var i = $.Deferred(),
          s = function() {
            var e = $("#" + t);
            e.length ? i.resolve(e) : setTimeout(s, 500);
          };
        i.done($.proxy(this.onSliderExists, this, t, e)), s();
      }),
      (SmartSliderAbstract.prototype.onSliderExists = function(t, e, i) {
        if ("SCRIPT" === i.prop("tagName")) {
          var s = i.data("dependency"),
            n = i.data("delay"),
            r = $.proxy(function() {
              var s = $(
                i
                  .html()
                  .replace(/^\/\*<!\[CDATA\[\*\/(.*)\/\*\]\]>\*\/$/, function(
                    t,
                    e
                  ) {
                    return e;
                  })
                  .replace(/<_s_c_r_i_p_t/g, "<script")
                  .replace(/<_\/_s_c_r_i_p_t/g, "</script")
              );
              i.replaceWith(s),
                this.waitForDimension($("#" + t), e),
                $(window).triggerHandler("n2Rocket", [this.sliderElement]);
            }, this);
          s && $("#n2-ss-" + s).length
            ? n2ss.ready(
                s,
                $.proxy(function(t) {
                  t.ready(r);
                }, this)
              )
            : n
            ? setTimeout(r, n)
            : r();
        } else this.waitForDimension(i, e);
      }),
      (SmartSliderAbstract.prototype.waitForDimension = function(t, e) {
        var i = $.Deferred(),
          s = function() {
            var e = t.is(":visible");
            e ? i.resolve() : setTimeout(s, 200);
          };
        s(), i.done($.proxy(this.onSliderHasDimension, this, t, e));
      }),
      (SmartSliderAbstract.prototype.initCSS = function() {
        this.parameters.css &&
          $(
            '<style type="text/css">' + this.parameters.css + "</style>"
          ).appendTo("head");
      }),
      (SmartSliderAbstract.prototype.onSliderHasDimension = function(
        $sliderElement,
        parameters
      ) {
        if (
          ((this.killed = !1),
          n2const.isIE && $sliderElement.attr("data-ie", n2const.isIE),
          (this.responsive = !1),
          (this.mainAnimationLastChangeTime = 0),
          (this.currentSlide = null),
          (this.currentRealSlide = null),
          (this.staticSlide = !1),
          (this.isShuffled = !1),
          (this.slides = []),
          (this.visibleSlides = 1),
          (this.sliderElement = $sliderElement.data("ss", this)),
          (this.needBackgroundWrap = !1),
          (this.parameters = $.extend(
            {
              admin: !1,
              playWhenVisible: 1,
              playWhenVisibleAt: 0.5,
              perspective: 1e3,
              callbacks: "",
              autoplay: {},
              blockrightclick: !1,
              maintainSession: 0,
              align: "normal",
              controls: {
                drag: !1,
                touch: "horizontal",
                keyboard: !1,
                scroll: !1,
                tilt: !1
              },
              hardwareAcceleration: !0,
              layerMode: {
                playOnce: 0,
                playFirstLayer: 1,
                mode: "skippable",
                inAnimation: "mainInEnd"
              },
              foreverLayerAnimation: !1,
              parallax: {
                enabled: 0,
                mobile: 0,
                horizontal: "mouse",
                vertical: "mouse",
                origin: "enter"
              },
              load: {},
              mainanimation: {},
              randomize: { randomize: 0, randomizeFirst: 0 },
              responsive: {},
              lazyload: { enabled: 0 },
              postBackgroundAnimations: !1,
              initCallbacks: [],
              dynamicHeight: 0,
              lightbox: [],
              lightboxDeviceImages: [],
              titles: [],
              descriptions: [],
              allowBGImageAttachmentFixed: 1,
              backgroundParallax: { strength: 0, tablet: 0, mobile: 0 },
              particlejs: 0
            },
            parameters
          )),
          (this.disableLayerAnimations = !1),
          !(
            this.isAdmin ||
            (parameters.responsive.desktop &&
              parameters.responsive.tablet &&
              parameters.responsive.mobile)
          ))
        ) {
          var md = new MobileDetect(window.navigator.userAgent, 801),
            isTablet = !!md.tablet(),
            isMobile = !!md.phone();
          if (
            (!parameters.responsive.mobile && isMobile) ||
            (!parameters.responsive.tablet && isTablet) ||
            (!parameters.responsive.desktop && !isTablet && !isMobile)
          )
            return void this.kill();
        }
        this.initCSS(), (this.firstSlideReady = $.Deferred());
        try {
          eval(this.parameters.callbacks);
        } catch (e) {
          console.error(e);
        }
        this.startVisibilityCheck(),
          n2ss.makeReady(this.id, this),
          (this.widgetDeferreds = []),
          this.sliderElement.on("addWidget", $.proxy(this.addWidget, this)),
          this.isAdmin && (this.changeTo = function() {}),
          (this.load = new N2Classes.SmartSliderLoad(
            this,
            this.parameters.load
          )),
          (this.backgrounds = new N2Classes.SmartSliderBackgrounds(this)),
          this.__initSlides(),
          $.when(this.overrideFirstSlide()).done(
            $.proxy(this.onFirstSlideInitialized, this)
          ),
          navigator.userAgent.match("UCBrowser") &&
            $("html").addClass("n2-ucbrowser");
      }),
      (SmartSliderAbstract.prototype.overrideFirstSlide = function() {
        if ("undefined" != typeof window["ss" + this.id]) {
          if ("object" == typeof window["ss" + this.id])
            return window["ss" + this.id].done(
              $.proxy(function(t) {
                null !== t && this.changeActiveBeforeLoad(t);
              }, this)
            );
          var t =
            "undefined" != typeof window["ss" + this.id]
              ? parseInt(window["ss" + this.id])
              : null;
          null !== t && this.changeActiveBeforeLoad(t);
        } else if (
          !this.isAdmin &&
          this.parameters.maintainSession &&
          "undefined" != typeof sessionStorage
        ) {
          var e = sessionStorage.getItem("ss-" + this.id);
          null !== e && this.changeActiveBeforeLoad(parseInt(e)),
            this.sliderElement.on(
              "mainAnimationComplete",
              $.proxy(function(t, e, i, s) {
                sessionStorage.setItem("ss-" + this.id, s);
              }, this)
            );
        }
        return !0;
      }),
      (SmartSliderAbstract.prototype.changeActiveBeforeLoad = function(t) {
        t >= 0 &&
          t < this.realSlides.length &&
          this.starterSlide !== this.realSlides[t] &&
          (this.unsetActiveSlide(this.starterSlide),
          (this.starterSlide = this.realSlides[t]),
          this.setActiveSlide(this.realSlides[t]));
      }),
      (SmartSliderAbstract.prototype.startCurrentSlideIndex = function() {
        (this.currentRealSlide = this.currentSlide = this.starterSlide),
          this.setActiveSlide(this.currentSlide),
          parseInt(this.parameters.carousel)
            ? this.initCarousel()
            : this.initNotCarousel();
      }),
      (SmartSliderAbstract.prototype.onFirstSlideInitialized = function() {
        for (var i = 0; i < this.realSlides.length; i++)
          this.realSlides[i].setNext(
            this.realSlides[i + 1 > this.realSlides.length - 1 ? 0 : i + 1]
          );
        this.startCurrentSlideIndex(),
          this.firstSlideReady.resolve(this.currentSlide);
        for (var j = 0; j < this.parameters.initCallbacks.length; j++)
          new Function("$", this.parameters.initCallbacks[j]).call(this, $);
        if (
          ((this.widgets = new N2Classes.SmartSliderWidgets(this)),
          this.sliderElement.on({
            universalenter: $.proxy(function(t) {
              $(t.target).closest(".n2-full-screen-widget").length ||
                (this.sliderElement.addClass("n2-hover"),
                this.widgets.setState("hover", !0));
            }, this),
            universalleave: $.proxy(function(t) {
              t.stopPropagation(),
                this.sliderElement.removeClass("n2-hover"),
                this.widgets.setState("hover", !1);
            }, this)
          }),
          (this.controls = {}),
          this.initMainAnimationWithLayerAnimation(),
          this.isAdmin ||
            !this.parameters.parallax.enabled ||
            (!this.parameters.parallax.mobile &&
              (this.parameters.parallax.mobile || n2const.isMobile)) ||
            ((this.parallax = new N2Classes.LayerParallax(
              this,
              this.parameters.parallax
            )),
            this.ready(
              $.proxy(function() {
                this.parallax.start(this.currentSlide),
                  this.sliderElement.on(
                    "sliderSwitchTo",
                    $.proxy(function(t, e) {
                      this.parallax.start(this.slides[e]);
                    }, this)
                  );
              }, this)
            )),
          this.parameters.blockrightclick &&
            this.sliderElement.bind("contextmenu", function(t) {
              t.preventDefault();
            }),
          this.initMainAnimation(),
          this.initResponsiveMode(),
          !this.killed)
        ) {
          try {
            var removeHoverClassCB = $.proxy(function() {
              this.sliderElement.removeClass("n2-has-hover"),
                this.sliderElement[0].removeEventListener(
                  "touchstart",
                  removeHoverClassCB,
                  window.n2const.passiveEvents ? { passive: !0 } : !1
                );
            }, this);
            this.sliderElement[0].addEventListener(
              "touchstart",
              removeHoverClassCB,
              window.n2const.passiveEvents ? { passive: !0 } : !1
            );
          } catch (e) {}
          if (
            (this.initControls(),
            this.startedDeferred.resolve(this),
            !this.isAdmin)
          ) {
            var event = "click";
            this.hasTouch() && (event = "n2click"),
              this.sliderElement.find("[data-n2click]").each(function(i, el) {
                var el = $(el);
                el.on(event, function() {
                  eval(el.data("n2click"));
                });
              }),
              this.sliderElement.find("[data-click]").each(function(i, el) {
                var el = $(el)
                  .on("click", function() {
                    eval(el.data("click"));
                  })
                  .css("cursor", "pointer");
              }),
              this.sliderElement
                .find("[data-n2middleclick]")
                .on("mousedown", function(e) {
                  var el = $(this);
                  (2 != e.which && 4 != e.which) ||
                    (e.preventDefault(), eval(el.data("n2middleclick")));
                }),
              this.sliderElement
                .find("[data-mouseenter]")
                .each(function(i, el) {
                  var el = $(el).on("mouseenter", function() {
                    eval(el.data("mouseenter"));
                  });
                }),
              this.sliderElement
                .find("[data-mouseleave]")
                .each(function(i, el) {
                  var el = $(el).on("mouseleave", function() {
                    eval(el.data("mouseleave"));
                  });
                }),
              this.sliderElement.find("[data-play]").each(function(i, el) {
                var el = $(el).on("n2play", function() {
                  eval(el.data("play"));
                });
              }),
              this.sliderElement.find("[data-pause]").each(function(i, el) {
                var el = $(el).on("n2pause", function() {
                  eval(el.data("pause"));
                });
              }),
              this.sliderElement.find("[data-stop]").each(function(i, el) {
                var el = $(el).on("n2stop", function() {
                  eval(el.data("stop"));
                });
              }),
              window.n2FocusAllowed === undefined &&
                ((window.n2FocusAllowed = !1),
                $(window).on({
                  keydown: function() {
                    window.n2FocusAllowed = !0;
                  },
                  keyup: function() {
                    window.n2FocusAllowed = !1;
                  }
                })),
              this.sliderElement.find("a").on({
                focus: $.proxy(function(t) {
                  if (n2FocusAllowed) {
                    var e = this.findSlideByElement(t.currentTarget);
                    e &&
                      e !== this.currentRealSlide &&
                      this.directionalChangeToReal(e.index);
                  }
                }, this)
              });
          }
          this.preReadyResolve(),
            this.isAdmin || this.startLightbox(),
            this.sliderElement
              .find('[role="button"],[tabindex]')
              .not("input,select,textarea")
              .keypress(function(t) {
                (32 !== t.charCode && 13 !== t.charCode) ||
                  (t.preventDefault(), $(t.target).click());
              })
              .on("mouseleave", function(t) {
                $(t.currentTarget).blur();
              });
        }
      }),
      (SmartSliderAbstract.prototype.__initSlides = function() {
        for (
          var t = this.sliderElement.find(".n2-ss-slide"), e = 0;
          e < t.length;
          e++
        )
          this.slides.push(new N2Classes.FrontendSliderSlide(this, t.eq(e), e));
        this.starterSlide = this.slides[0];
        for (var e = 0; e < this.slides.length; e++)
          this.slides[e].init(),
            1 == this.slides[e].$element.data("first") &&
              (this.starterSlide = this.slides[e]);
        (this.realSlides = this.slides),
          this.afterRawSlidesReady(),
          this.randomize(this.slides);
        var i = this.sliderElement.find(".n2-ss-static-slide");
        i.length &&
          (this.staticSlide = new N2Classes.FrontendSliderStaticSlide(this, i));
      }),
      (SmartSliderAbstract.prototype.afterRawSlidesReady = function() {}),
      (SmartSliderAbstract.prototype.setVisibleSlides = function(t) {
        t !== this.visibleSlides &&
          ((this.visibleSlides = t),
          this.sliderElement.triggerHandler("visibleSlidesChanged"));
      }),
      (SmartSliderAbstract.prototype.getVisibleSlides = function(t) {
        return 0 === arguments.length && (t = this.currentSlide), [t];
      }),
      (SmartSliderAbstract.prototype.findSlideBackground = function(t) {
        return t.$element.find(".n2-ss-slide-background");
      }),
      (SmartSliderAbstract.prototype.getRealIndex = function(t) {
        return t;
      }),
      (SmartSliderAbstract.prototype.randomize = function(t) {
        this.randomizeFirst(),
          this.parameters.randomize.randomize && this.shuffleSlides(t);
      }),
      (SmartSliderAbstract.prototype.randomizeFirst = function() {
        this.parameters.randomize.randomizeFirst &&
          (this.unsetActiveSlide(this.starterSlide),
          (this.starterSlide = this.realSlides[
            Math.floor(Math.random() * this.realSlides.length)
          ]),
          this.setActiveSlide(this.starterSlide));
      }),
      (SmartSliderAbstract.prototype.shuffleSlides = function(t) {
        t.sort(function() {
          return 0.5 - Math.random();
        });
        for (var e = t[0].$element.parent(), i = 0; i < t.length; i++)
          t[i].$element.appendTo(e), t[i].setIndex(i);
        this.isShuffled = !0;
      }),
      (SmartSliderAbstract.prototype.addWidget = function(t, e) {
        this.widgetDeferreds.push(e);
      }),
      (SmartSliderAbstract.prototype.started = function(t) {
        this.startedDeferred.done($.proxy(t, this));
      }),
      (SmartSliderAbstract.prototype.preReadyResolve = function() {
        setTimeout($.proxy(this._preReadyResolve, this), 1);
      }),
      (SmartSliderAbstract.prototype._preReadyResolve = function() {
        this.load.start(), this.load.loaded($.proxy(this.readyResolve, this));
      }),
      (SmartSliderAbstract.prototype.readyResolve = function() {
        $(window).scroll(), this.readyDeferred.resolve();
      }),
      (SmartSliderAbstract.prototype.ready = function(t) {
        this.readyDeferred.done($.proxy(t, this));
      }),
      (SmartSliderAbstract.prototype.startVisibilityCheck = function() {
        !this.isAdmin && this.parameters.playWhenVisible
          ? this.ready(
              $.proxy(function() {
                $(window).on(
                  "scroll.n2-ss-visible" +
                    this.id +
                    " resize.n2-ss-visible" +
                    this.id,
                  $.proxy(this.checkIfVisible, this)
                ),
                  this.checkIfVisible();
              }, this)
            )
          : this.ready(
              $.proxy(function() {
                this.visibleDeferred.resolve();
              }, this)
            );
      }),
      (SmartSliderAbstract.prototype.checkIfVisible = function() {
        var t = this.parameters.playWhenVisibleAt,
          e = $(window).scrollTop(),
          i = $(window).height(),
          s = $(document).height(),
          n = this.sliderElement[0].getBoundingClientRect(),
          r = (i * t) / 2,
          o = e + r,
          a = e + i - r;
        r > e && (o *= e / r), e + i > s - r && (a += e + i - s + r);
        var l = e + n.top,
          h = e + n.bottom;
        (this.isAdmin ||
          (a >= l && l >= o) ||
          (h >= o && a >= h) ||
          (o >= l && h >= a)) &&
          ($(window).off(".n2-ss-visible" + this.id),
          this.visibleDeferred.resolve());
      }),
      (SmartSliderAbstract.prototype.visible = function(t) {
        this.visibleDeferred.done($.proxy(t, this));
      }),
      (SmartSliderAbstract.prototype.isPlaying = function() {
        return "ended" !== this.mainAnimation.getState();
      }),
      (SmartSliderAbstract.prototype.focus = function(t) {
        var e = $.Deferred();
        if (
          (t === undefined && (t = 0),
          (this.responsive.parameters.focusUser && !t) ||
            (this.responsive.parameters.focusAutoplay && t))
        ) {
          var i =
            this.sliderElement.offset().top -
            (this.responsive.verticalOffsetSelectors.height() || 0);
          $(window).scrollTop() !== i
            ? ((window.nextendScrollFocus = !0),
              $("html, body").animate(
                { scrollTop: i },
                400,
                $.proxy(function() {
                  e.resolve(),
                    setTimeout(function() {
                      window.nextendScrollFocus = !1;
                    }, 300);
                }, this)
              ))
            : e.resolve();
        } else e.resolve();
        return e;
      }),
      (SmartSliderAbstract.prototype.initNotCarousel = function() {
        (this.next = function(t, e) {
          var i = this.currentSlide.index + 1;
          return i < this.slides.length ? this.changeTo(i, !1, t, e) : !1;
        }),
          (this.previous = function(t, e) {
            var i = this.currentSlide.index - 1;
            return i >= 0 ? this.changeTo(i, !0, t, e) : !1;
          }),
          (this.isChangePossible = function(t) {
            var e = !1;
            return (
              "next" === t
                ? ((e = this.currentSlide.index + 1),
                  e >= this.slides.length && (e = !1))
                : "previous" === t &&
                  ((e = this.currentSlide.index - 1), 0 > e && (e = !1)),
              e !== !1 && e !== this.currentSlide.index
            );
          });
        var t = $.proxy(function(t) {
          0 === t
            ? this.widgets.setState("nonCarouselFirst", !0)
            : this.widgets.setState("nonCarouselFirst", !1),
            t === this.slides.length - 1
              ? this.widgets.setState("nonCarouselLast", !0)
              : this.widgets.setState("nonCarouselLast", !1);
        }, this);
        this.startedDeferred.done(
          $.proxy(function() {
            t(this.currentSlide.index);
          }, this)
        ),
          this.sliderElement.on("sliderSwitchTo", function(e, i) {
            t(i);
          });
      }),
      (SmartSliderAbstract.prototype.isChangePossibleCarousel = function(t) {
        var e = !1;
        return (
          "next" === t
            ? ((e = this.currentSlide.index + 1),
              e >= this.slides.length && (e = 0))
            : "previous" === t &&
              ((e = this.currentSlide.index - 1),
              0 > e && (e = this.slides.length - 1)),
          e !== !1 && e !== this.currentSlide.index
        );
      }),
      (SmartSliderAbstract.prototype.initCarousel = function() {
        (this.next = this.nextCarousel),
          (this.previous = this.previousCarousel),
          (this.isChangePossible = this.isChangePossibleCarousel);
      }),
      (SmartSliderAbstract.prototype.nextCarousel = function(t, e) {
        var i = this.currentSlide.index + 1;
        return i >= this.slides.length && (i = 0), this.changeTo(i, !1, t, e);
      }),
      (SmartSliderAbstract.prototype.previousCarousel = function(t, e) {
        var i = this.currentSlide.index - 1;
        return (
          0 > i && (i = this.slides.length - 1), this.changeTo(i, !0, t, e)
        );
      }),
      (SmartSliderAbstract.prototype.directionalChangeToReal = function(t) {
        this.directionalChangeTo(t);
      }),
      (SmartSliderAbstract.prototype.directionalChangeTo = function(t) {
        t > this.currentSlide.index
          ? this.changeTo(t, !1)
          : this.changeTo(t, !0);
      }),
      (SmartSliderAbstract.prototype.changeTo = function(t, e, i, s) {
        if (((t = parseInt(t)), t !== this.currentSlide.index)) {
          this.sliderElement.trigger("sliderSwitchTo", [
            t,
            this.getRealIndex(t)
          ]);
          var n = $.now();
          return (
            $.when(
              $.when.apply(
                $,
                this.backgrounds.preLoadSlides(
                  this.getVisibleSlides(this.slides[t])
                )
              ),
              this.focus(i)
            ).done(
              $.proxy(function() {
                if (this.mainAnimationLastChangeTime <= n) {
                  this.mainAnimationLastChangeTime = n;
                  var r = this.mainAnimation.getState();
                  if ("ended" === r) {
                    "undefined" == typeof i && (i = !1);
                    var o = this.mainAnimation;
                    "undefined" != typeof s && (o = s),
                      this._changeTo(t, e, i, s),
                      o.changeTo(this.currentSlide, this.slides[t], e, i),
                      this._changeCurrentSlide(t);
                  } else
                    "playing" === r &&
                      (this.sliderElement.off(".fastChange").one(
                        "mainAnimationComplete.fastChange",
                        $.proxy(function() {
                          this.changeTo.call(this, t, e, i, s);
                        }, this)
                      ),
                      this.mainAnimation.timeScale(
                        2 * this.mainAnimation.timeScale()
                      ));
                }
              }, this)
            ),
            !0
          );
        }
        return !1;
      }),
      (SmartSliderAbstract.prototype._changeCurrentSlide = function(t) {
        this.currentRealSlide = this.currentSlide = this.slides[t];
      }),
      (SmartSliderAbstract.prototype._changeTo = function(t, e, i, s) {}),
      (SmartSliderAbstract.prototype.revertTo = function(t, e) {
        this.unsetActiveSlide(this.slides[e]),
          this.setActiveSlide(this.slides[t]),
          this._changeCurrentSlide(t),
          this.sliderElement.trigger("sliderSwitchTo", [
            t,
            this.getRealIndex(t)
          ]);
      }),
      (SmartSliderAbstract.prototype.setActiveSlide = function(t) {
        t.$element.addClass("n2-ss-slide-active");
      }),
      (SmartSliderAbstract.prototype.unsetActiveSlide = function(t) {
        t.$element.removeClass("n2-ss-slide-active");
      }),
      (SmartSliderAbstract.prototype.initMainAnimationWithLayerAnimation = function() {
        "forced" === this.parameters.layerMode.mode &&
          this.sliderElement.on(
            "preChangeToPlay",
            $.proxy(function(t, e, i, s, n) {
              (i.handled = !0),
                s.$element.on("layerAnimationCompleteOut.layers", function() {
                  s.$element.off("layerAnimationCompleteOut.layers"),
                    e.resolve();
                }),
                s.playOut();
            }, this)
          ),
          this.sliderElement
            .on(
              "mainAnimationStart",
              $.proxy(
                this.onMainAnimationStartSyncLayers,
                this,
                this.parameters.layerMode
              )
            )
            .on(
              "reverseModeEnabled",
              $.proxy(
                this.onMainAnimationStartSyncLayersReverse,
                this,
                this.parameters.layerMode
              )
            );
      }),
      (SmartSliderAbstract.prototype.onMainAnimationStartSyncLayers = function(
        t,
        e,
        i,
        s,
        n
      ) {
        var r = this.slides[n].$element,
          o = this.slides[s].$element;
        "mainInStart" === t.inAnimation
          ? r.one(
              "mainAnimationStartIn.layers",
              $.proxy(function() {
                r.off("mainAnimationStartInCancel.layers"),
                  r.data("slide").playIn();
              }, this)
            )
          : "mainInEnd" === t.inAnimation &&
            r.one(
              "mainAnimationCompleteIn.layers",
              $.proxy(function() {
                r.off("mainAnimationStartInCancel.layers"),
                  r.data("slide").playIn();
              }, this)
            ),
          "skippable" === t.mode &&
            o.on(
              "mainAnimationCompleteOut.layers",
              $.proxy(function() {
                o.off("mainAnimationCompleteOut.layers"),
                  t.playOnce
                    ? this.parameters.foreverLayerAnimation ||
                      o.data("slide").pause()
                    : o.data("slide").reset();
              }, this)
            ),
          r.one("mainAnimationStartInCancel.layers", function() {
            r.off("mainAnimationStartIn.layers"),
              r.off("mainAnimationCompleteIn.layers");
          });
      }),
      (SmartSliderAbstract.prototype.onMainAnimationStartSyncLayersReverse = function(
        t,
        e,
        i
      ) {
        var s = this.slides[i].$element;
        "mainInStart" === t.inAnimation
          ? s.one(
              "mainAnimationStartIn.layers",
              $.proxy(function() {
                s.data("slide").playIn();
              }, this)
            )
          : "mainInEnd" === t.inAnimation &&
            s.one(
              "mainAnimationCompleteIn.layers",
              $.proxy(function() {
                this.sliderElement.off("mainAnimationComplete.layers"),
                  s.data("slide").playIn();
              }, this)
            ),
          this.sliderElement.one("mainAnimationComplete.layers", function() {
            s.off("mainAnimationStartIn.layers"),
              s.off("mainAnimationCompleteIn.layers");
          });
      }),
      (SmartSliderAbstract.prototype.findSlideByElement = function(t) {
        t = $(t);
        for (var e = 0; e < this.realSlides.length; e++)
          if (1 === this.realSlides[e].$element.has(t).length)
            return this.realSlides[e];
        return !1;
      }),
      (SmartSliderAbstract.prototype.findSlideIndexByElement = function(t) {
        var e = this.findSlideByElement(t);
        return e ? e : -1;
      }),
      (SmartSliderAbstract.prototype.initMainAnimation = function() {
        this.mainAnimation = !1;
      }),
      (SmartSliderAbstract.prototype.initResponsiveMode = function() {
        this.dimensions = this.responsive.responsiveDimensions;
      }),
      (SmartSliderAbstract.prototype.hasTouch = function() {
        return "0" != this.parameters.controls.touch && this.slides.length > 1;
      }),
      (SmartSliderAbstract.prototype.initControls = function() {
        this.parameters.admin ||
          (this.hasTouch() &&
            new N2Classes.SmartSliderControlTouch(
              this,
              this.parameters.controls.touch,
              { fallbackToMouseEvents: this.parameters.controls.drag }
            ),
          this.parameters.controls.keyboard &&
            ("undefined" != typeof this.controls.touch
              ? new N2Classes.SmartSliderControlKeyboard(
                  this,
                  this.controls.touch._direction.axis
                )
              : new N2Classes.SmartSliderControlKeyboard(this, "horizontal")),
          this.parameters.controls.scroll &&
            new N2Classes.SmartSliderControlScroll(this),
          this.parameters.controls.tilt &&
            new N2Classes.SmartSliderControlTilt(this),
          (this.controlAutoplay = new N2Classes.SmartSliderControlAutoplay(
            this,
            this.parameters.autoplay
          )),
          (this.controlFullscreen = new N2Classes.SmartSliderControlFullscreen(
            this
          )));
      }),
      (SmartSliderAbstract.prototype.getSlideIndex = function(t) {
        return t;
      }),
      (SmartSliderAbstract.prototype.slideToID = function(t, e) {
        for (var i = 0; i < this.realSlides.length; i++)
          if (this.realSlides[i].id === t)
            return this.slide(this.getSlideIndex(i), e);
        var s = $('[data-id="' + t + '"]').closest(".n2-ss-slider");
        if (s.length && this.id === s.data("ss").id) return !0;
        if (s.length) {
          var n = 0;
          return (
            "undefined" != typeof n2ScrollOffsetSelector &&
              (n = $(n2ScrollOffsetSelector).outerHeight()),
            $("html, body").animate({ scrollTop: s.offset().top - n }, 400),
            s.data("ss").slideToID(t, e)
          );
        }
      }),
      (SmartSliderAbstract.prototype.slide = function(t, e) {
        return t >= 0 && t < this.slides.length
          ? e === undefined
            ? parseInt(this.parameters.carousel) &&
              this.currentSlide.index === this.slides.length - 1 &&
              0 === t
              ? this.next()
              : this.currentSlide.index > t
              ? this.changeTo(t, !0)
              : this.changeTo(t)
            : this.changeTo(t, !e)
          : !1;
      }),
      (SmartSliderAbstract.prototype.startAutoplay = function(t) {
        return "undefined" != typeof this.controlAutoplay
          ? (this.controlAutoplay.pauseAutoplayExtraPlayingEnded(
              t,
              "autoplayButton"
            ),
            !0)
          : !1;
      }),
      (SmartSliderAbstract.prototype.startLightbox = function() {
        if (this.parameters.lightbox.length > 0) {
          if (this.isShuffled) {
            for (var t = [], e = 0; this.realSlides.length > e; e++)
              t.push(
                this.parameters.lightbox[this.realSlides[e].originalIndex]
              );
            this.parameters.lightbox = t;
          }
          for (
            var i = [], s = 0, n = this, e = 0;
            e < this.parameters.lightbox.length;
            e++
          )
            i.push(
              $(
                '<a href="' +
                  this.parameters.lightbox[e] +
                  '" n2-lightbox="" data-litebox-group="' +
                  this.id +
                  '" style="display:none;"></a>'
              )
                .data({
                  title: this.parameters.titles[e],
                  description: this.parameters.descriptions[e]
                })
                .on("click", function(t) {
                  t.stopPropagation();
                })
                .appendTo(this.realSlides[e].$element)
            );
          this.parameters.lightboxDeviceImages &&
            this.sliderElement.on(
              "SliderDevice",
              $.proxy(function(t, e) {
                for (var s = 0; s < this.parameters.lightbox.length; s++) {
                  var n = this.parameters.lightbox[s];
                  if (this.parameters.lightboxDeviceImages[n]) {
                    var r = this.parameters.lightbox[s];
                    "mobile" === e.device
                      ? this.parameters.lightboxDeviceImages[n][
                          "mobile" + (n2const.isRetina ? "-retina" : "")
                        ]
                        ? (r = this.parameters.lightboxDeviceImages[n][
                            "mobile" + (n2const.isRetina ? "-retina" : "")
                          ])
                        : this.parameters.lightboxDeviceImages[n][
                            "tablet" + (n2const.isRetina ? "-retina" : "")
                          ] &&
                          (r = this.parameters.lightboxDeviceImages[n][
                            "tablet" + (n2const.isRetina ? "-retina" : "")
                          ])
                      : "tablet" === e.device &&
                        this.parameters.lightboxDeviceImages[n][
                          "tablet" + (n2const.isRetina ? "-retina" : "")
                        ] &&
                        (r = this.parameters.lightboxDeviceImages[n][
                          "tablet" + (n2const.isRetina ? "-retina" : "")
                        ]),
                      i[s].attr("href", r);
                  }
                }
              }, this)
            ),
            N2R(
              "litebox",
              $.proxy(function() {
                this.sliderElement.find("a[n2-lightbox]").liteBox({
                  callbackBeforeOpen: function(t) {
                    (s = n.currentRealSlide.index),
                      this.$element.trigger("mediaStarted", this);
                  },
                  callbackAfterClose: function() {
                    this.$element.trigger("mediaEnded", this);
                  },
                  callbackPrev: $.proxy(function() {
                    var t = s - 1;
                    0 > t && (t = n.realSlides.length - 1),
                      this.directionalChangeToReal(t),
                      (s = t);
                  }, this),
                  callbackNext: $.proxy(function() {
                    var t = s + 1;
                    t >= n.realSlides.length && (t = 0),
                      this.directionalChangeToReal(t),
                      (s = t);
                  }, this)
                });
              }, this)
            );
          var r = "click";
          this.hasTouch() && (r = "n2click");
          for (var e = 0; e < this.realSlides.length; e++)
            this.realSlides[e].$element.css("cursor", "zoom-in").on(
              r,
              $.proxy(
                function(t, e) {
                  $(e.target).hasClass("smart-slider-overlay") ||
                    setTimeout(
                      $.proxy(function() {
                        "ended" === this.mainAnimation.state &&
                          i[t].trigger("click");
                      }, this),
                      10
                    );
                },
                this,
                e
              )
            );
        }
      }),
      (SmartSliderAbstract.prototype.getSlideBackgroundContainer = function() {}),
      (SmartSliderAbstract.prototype.getPerspective = function() {
        return this.parameters.perspective;
      }),
      (SmartSliderAbstract.prototype.startParticleJS = function(t) {
        if (
          (this.pJS && this.pJS.pJS.fn.vendors.destroypJS(),
          t.mobile || !n2const.isPhone)
        ) {
          var e = this.getSlideBackgroundContainer(),
            i = N2Classes.particlesJS(
              e,
              $.extend(!0, t, {
                interactivity: { detect_on: this.sliderElement[0] }
              })
            );
          return (
            this.sliderElement.on("SliderResize", function() {
              i.pJS.fn.resize();
            }),
            (this.pJS = i),
            this.pJS
          );
        }
      }),
      SmartSliderAbstract
    );
  }),
  N2D("SmartSliderWidgets", function($, undefined) {
    function SmartSliderWidgets(t) {
      (this.slider = t),
        (this.sliderElement = t.sliderElement.on(
          "BeforeVisible",
          $.proxy(this.onReady, this)
        )),
        (this.widgets = {}),
        (this.excludedSlides = {}),
        (this.states = {
          hover: !1,
          nonCarouselFirst: !1,
          nonCarouselLast: !1,
          currentSlideIndex: -1,
          singleSlide: !1
        }),
        (this.widgets = {
          previous: this.sliderElement.find(".nextend-arrow-previous"),
          next: this.sliderElement.find(".nextend-arrow-next"),
          bullet: this.sliderElement.find(".n2-ss-control-bullet"),
          autoplay: this.sliderElement.find(".nextend-autoplay"),
          indicator: this.sliderElement.find(".nextend-indicator"),
          bar: this.sliderElement.find(".nextend-bar"),
          thumbnail: this.sliderElement.find(".nextend-thumbnail"),
          shadow: this.sliderElement.find(".nextend-shadow"),
          fullscreen: this.sliderElement.find(".nextend-fullscreen"),
          html: this.sliderElement.find(".nextend-widget-html")
        });
    }
    return (
      (SmartSliderWidgets.prototype.setState = function(t, e) {
        if (this.states[t] != e) {
          this.states[t] = e;
          var i = t.split(".");
          switch (i[0]) {
            case "hide":
              this.onStateChangeSingle(i[1]);
              break;
            case "nonCarouselFirst":
              this.onStateChangeSingle("previous");
              break;
            case "nonCarouselLast":
              this.onStateChangeSingle("next");
              break;
            default:
              this.onStateChangeAll();
          }
        }
      }),
      (SmartSliderWidgets.prototype.onStateChangeAll = function() {
        for (var t in this.widgets) this.onStateChangeSingle(t);
      }),
      (SmartSliderWidgets.prototype.onStateChangeSingle = function(t) {
        if (this.widgets[t].length) {
          var e = !0;
          if (
            (this.widgets[t].hasClass("n2-ss-widget-display-hover") &&
              (e = this.states.hover),
            e &&
              ("previous" === t && this.states.nonCarouselFirst
                ? (e = !1)
                : "next" === t && this.states.nonCarouselLast && (e = !1)),
            e)
          ) {
            var i = t + "-" + (this.states.currentSlideIndex + 1);
            this.excludedSlides[i] && (e = !1);
          }
          e &&
            this.states["hide." + t] !== undefined &&
            this.states["hide." + t] &&
            (e = !1),
            e &&
              this.states.singleSlide &&
              (("previous" !== t &&
                "next" !== t &&
                "bullet" !== t &&
                "autoplay" !== t &&
                "indicator" !== t) ||
                (e = !1)),
            this.widgets[t].toggleClass("n2-ss-widget-hidden", !e);
        }
      }),
      (SmartSliderWidgets.prototype.onReady = function() {
        this.slider.sliderElement.on(
          "slideCountChanged",
          $.proxy(function() {
            this.setState("singleSlide", this.slider.slides.length <= 1);
          }, this)
        ),
          (this.dimensions = this.slider.dimensions),
          (this.$vertical = this.sliderElement
            .find('[data-position="above"],[data-position="below"]')
            .not(".nextend-shadow"));
        var t = !1;
        for (var e in this.widgets) {
          var i = this.widgets[e].attr("data-exclude-slides");
          if (i !== undefined) {
            for (var s = i.split(","), n = s.length - 1; n >= 0; n--) {
              var r = s[n].split("-");
              if (2 === r.length) {
                var o = parseInt(r[0]),
                  a = parseInt(r[1]);
                if (a >= o) for (var l = o; a >= l; l++) s.push(l);
              } else s[n] = parseInt(s[n]);
            }
            if (s.length > 0) {
              for (var n = 0; n < s.length; n++)
                this.excludedSlides[e + "-" + s[n]] = !0;
              t = !0;
            }
          }
        }
        if (t) {
          var h = $.proxy(function(t, e) {
            this.setState("currentSlideIndex", e);
          }, this);
          h(null, this.slider.currentRealSlide.index),
            this.slider.sliderElement.on({ sliderSwitchTo: h });
        }
        (this.variableElementsDimension = {
          width: this.sliderElement.find("[data-sswidth]"),
          height: this.sliderElement.find("[data-ssheight]")
        }),
          (this.variableElements = {
            top: this.sliderElement.find("[data-sstop]"),
            right: this.sliderElement.find("[data-ssright]"),
            bottom: this.sliderElement.find("[data-ssbottom]"),
            left: this.sliderElement.find("[data-ssleft]")
          }),
          this.slider.sliderElement.on(
            "SliderAnimatedResize",
            $.proxy(this.onAnimatedResize, this)
          ),
          this.slider.sliderElement.on(
            "SliderResize",
            $.proxy(this.onResize, this)
          ),
          this.slider.sliderElement.one(
            "slideCountChanged",
            $.proxy(function() {
              this.onResize(this.slider.responsive.lastRatios);
            }, this)
          ),
          this.onResize(this.slider.responsive.lastRatios),
          this.onStateChangeAll();
      }),
      (SmartSliderWidgets.prototype.onAnimatedResize = function(
        e,
        ratios,
        timeline,
        duration
      ) {
        for (var key in this.widgets) {
          var el = this.widgets[key],
            visible = el.is(":visible");
          (this.dimensions[key + "width"] = visible ? el.outerWidth(!1) : 0),
            (this.dimensions[key + "height"] = visible
              ? el.outerHeight(!1)
              : 0);
        }
        (this.dimensions.width = this.dimensions.slider.width),
          (this.dimensions.height = this.dimensions.slider.height),
          (this.dimensions.outerwidth = this.sliderElement.parent().width()),
          (this.dimensions.outerheight = this.sliderElement.parent().height()),
          (this.dimensions.canvaswidth = this.dimensions.slide.width),
          (this.dimensions.canvasheight = this.dimensions.slide.height),
          (this.dimensions.margintop = this.dimensions.slider.marginTop),
          (this.dimensions.marginright = this.dimensions.slider.marginRight),
          (this.dimensions.marginbottom = this.dimensions.slider.marginBottom),
          (this.dimensions.marginleft = this.dimensions.slider.marginLeft);
        var variableText = "";
        for (var key in this.dimensions) {
          var value = this.dimensions[key];
          if ("object" == typeof value)
            for (var key2 in value)
              variableText += "var " + key + key2 + " = " + value[key2] + ";";
          else variableText += "var " + key + " = " + value + ";";
        }
        eval(variableText);
        for (var k in this.variableElementsDimension)
          for (var i = 0; i < this.variableElementsDimension[k].length; i++) {
            var el = this.variableElementsDimension[k].eq(i);
            if (el.is(":visible")) {
              var to = {};
              try {
                to[k] = eval(el.data("ss" + k)) + "px";
                for (var widget in this.widgets)
                  this.widgets[widget].filter(el).length &&
                    ("width" == k
                      ? (this.dimensions[widget + k] = el.outerWidth(!1))
                      : "height" == k &&
                        (this.dimensions[widget + k] = el.outerHeight(!1)),
                    eval(
                      widget + k + " = " + this.dimensions[widget + k] + ";"
                    ));
              } catch (e) {
                console.log(
                  el,
                  " position variable: " + e.message + ": ",
                  el.data("ss" + k)
                );
              }
              timeline.to(el, duration, to, 0);
            }
          }
        for (var k in this.variableElements)
          for (var i = 0; i < this.variableElements[k].length; i++) {
            var el = this.variableElements[k].eq(i);
            try {
              var to = {};
              (to[k] = eval(el.data("ss" + k)) + "px"),
                timeline.to(el, duration, to, 0);
            } catch (e) {
              console.log(
                el,
                " position variable: " + e.message + ": ",
                el.data("ss" + k)
              );
            }
          }
      }),
      (SmartSliderWidgets.prototype.onResize = function(
        e,
        ratios,
        responsive,
        timeline
      ) {
        if (!timeline) {
          for (var k in this.variableElements)
            for (var i = 0; i < this.variableElements[k].length; i++) {
              var last = this.variableElements[k].data("n2Last" + k);
              last > 0 && this.variableElements[k].css(k, 0);
            }
          for (var key in this.widgets) {
            var el = this.widgets[key],
              visible = el.length && el.is(":visible");
            el.length && el.is(":visible")
              ? ((this.dimensions[key + "width"] = el.outerWidth(!1)),
                (this.dimensions[key + "height"] = el.outerHeight(!1)))
              : ((this.dimensions[key + "width"] = 0),
                (this.dimensions[key + "height"] = 0));
          }
          for (var k in this.variableElements)
            for (var i = 0; i < this.variableElements[k].length; i++) {
              var last = this.variableElements[k].data("n2Last" + k);
              last > 0 && this.variableElements[k].css(k, last);
            }
          (this.dimensions.width = this.dimensions.slider.width),
            (this.dimensions.height = this.dimensions.slider.height),
            (this.dimensions.outerwidth = this.sliderElement.parent().width()),
            (this.dimensions.outerheight = this.sliderElement
              .parent()
              .height()),
            (this.dimensions.canvaswidth = this.dimensions.slide.width),
            (this.dimensions.canvasheight = this.dimensions.slide.height),
            (this.dimensions.margintop = this.dimensions.slider.marginTop),
            (this.dimensions.marginright = this.dimensions.slider.marginRight),
            (this.dimensions.marginbottom = this.dimensions.slider.marginBottom),
            (this.dimensions.marginleft = this.dimensions.slider.marginLeft);
          var variableText = "";
          for (var key in this.dimensions) {
            var value = this.dimensions[key];
            if ("object" == typeof value)
              for (var key2 in value)
                variableText += "var " + key + key2 + " = " + value[key2] + ";";
            else variableText += "var " + key + " = " + value + ";";
          }
          eval(variableText);
          for (var k in this.variableElementsDimension)
            for (var i = 0; i < this.variableElementsDimension[k].length; i++) {
              var el = this.variableElementsDimension[k].eq(i);
              if (el.is(":visible"))
                try {
                  el.css(k, eval(el.data("ss" + k)) + "px");
                  for (var widget in this.widgets)
                    this.widgets[widget].filter(el).length &&
                      ("width" == k
                        ? (this.dimensions[widget + k] = el.outerWidth(!1))
                        : "height" == k &&
                          (this.dimensions[widget + k] = el.outerHeight(!1)),
                      eval(
                        widget + k + " = " + this.dimensions[widget + k] + ";"
                      ));
                } catch (e) {
                  console.log(
                    el,
                    " position variable: " + e.message + ": ",
                    el.data("ss" + k)
                  );
                }
            }
          for (var k in this.variableElements)
            for (var i = 0; i < this.variableElements[k].length; i++) {
              var el = this.variableElements[k].eq(i);
              try {
                var value = eval(el.data("ss" + k));
                el.css(k, value + "px"), el.data("n2Last" + k, value);
              } catch (e) {
                console.log(
                  el,
                  " position variable: " + e.message + ": ",
                  el.data("ss" + k)
                );
              }
            }
          this.slider.responsive.refreshStaticSizes();
        }
      }),
      SmartSliderWidgets
    );
  }),
  N2D("SmartSliderMainAnimationAbstract", function(t, e) {
    function i(e, i) {
      (this.state = "ended"),
        (this.isTouch = !1),
        (this.isReverseAllowed = !0),
        (this.isReverseEnabled = !1),
        (this.reverseSlideIndex = null),
        (this.isNoAnimation = !1),
        (this.slider = e),
        (this.parameters = t.extend(
          { duration: 1500, ease: "easeInOutQuint" },
          i
        )),
        (this.parameters.duration /= 1e3),
        (this.sliderElement = e.sliderElement),
        (this.timeline = new NextendTimeline({ paused: !0 })),
        this.sliderElement.on(
          "mainAnimationStart",
          t.proxy(function(t, e, i, s) {
            (this._revertCurrentSlideIndex = i),
              (this._revertNextSlideIndex = s);
          }, this)
        );
    }
    return (
      (i.prototype.setToStarterSlide = function(t) {}),
      (i.prototype.enableReverseMode = function() {
        (this.isReverseEnabled = !0),
          (this.reverseTimeline = new NextendTimeline({ paused: !0 })),
          this.sliderElement.triggerHandler(
            "reverseModeEnabled",
            this.reverseSlideIndex
          );
      }),
      (i.prototype.disableReverseMode = function() {
        this.isReverseEnabled = !1;
      }),
      (i.prototype.setTouch = function(t) {
        this.isTouch = t;
      }),
      (i.prototype.setTouchProgress = function(t) {
        this.isReverseEnabled
          ? this._setTouchProgressWithReverse(t)
          : this._setTouchProgress(t);
      }),
      (i.prototype._setTouchProgress = function(t) {
        "ended" != this.state &&
          (0 >= t
            ? this.timeline.progress(Math.max(t, 1e-6), !1)
            : t >= 0 && 1 >= t && this.timeline.progress(t));
      }),
      (i.prototype._setTouchProgressWithReverse = function(t) {
        0 == t
          ? (this.reverseTimeline.progress(0), this.timeline.progress(t, !1))
          : t >= 0 && 1 >= t
          ? (this.reverseTimeline.progress(0), this.timeline.progress(t))
          : 0 > t &&
            t >= -1 &&
            (this.timeline.progress(0),
            this.reverseTimeline.progress(Math.abs(t)));
      }),
      (i.prototype.setTouchEnd = function(t, e, i) {
        "ended" != this.state &&
          (this.isReverseEnabled
            ? this._setTouchEndWithReverse(t, e, i)
            : this._setTouchEnd(t, e, i));
      }),
      (i.prototype._setTouchEnd = function(t, e, i) {
        t && e > 0
          ? (this.fixTouchDuration(this.timeline, e, i), this.timeline.play())
          : (this.revertCB(this.timeline),
            this.fixTouchDuration(this.timeline, 1 - e, i),
            this.timeline.reverse(),
            this.willRevertTo(
              this._revertCurrentSlideIndex,
              this._revertNextSlideIndex
            ));
      }),
      (i.prototype._setTouchEndWithReverse = function(t, e, i) {
        t
          ? 0 > e && this.reverseTimeline.totalDuration() > 0
            ? (this.fixTouchDuration(this.reverseTimeline, e, i),
              this.reverseTimeline.play(),
              this.willRevertTo(
                this.reverseSlideIndex,
                this._revertNextSlideIndex
              ))
            : (this.willCleanSlideIndex(this.reverseSlideIndex),
              this.fixTouchDuration(this.timeline, e, i),
              this.timeline.play())
          : (0 > e
              ? (this.revertCB(this.reverseTimeline),
                this.fixTouchDuration(this.reverseTimeline, 1 - e, i),
                this.reverseTimeline.reverse())
              : (this.revertCB(this.timeline),
                this.fixTouchDuration(this.timeline, 1 - e, i),
                this.timeline.reverse()),
            this.willCleanSlideIndex(this.reverseSlideIndex),
            this.willRevertTo(
              this._revertCurrentSlideIndex,
              this._revertNextSlideIndex
            ));
      }),
      (i.prototype.fixTouchDuration = function(t, e, i) {
        var s = t.totalDuration(),
          n = Math.max(s / 3, Math.min(s, i / Math.abs(e) / 1e3));
        n != s && t.totalDuration(n);
      }),
      (i.prototype.getState = function() {
        return this.state;
      }),
      (i.prototype.timeScale = function() {
        return arguments.length > 0
          ? (this.timeline.timeScale(arguments[0]), this)
          : this.timeline.timeScale();
      }),
      (i.prototype.preChangeToPlay = function(t, e, i) {
        var s = { handled: !1 };
        this.sliderElement.trigger("preChangeToPlay", [t, s, e, i]),
          s.handled || t.resolve();
      }),
      (i.prototype.changeTo = function(e, i, s, n) {
        if (
          (this._initAnimation(e, i, s),
          (this.state = "initAnimation"),
          this.timeline.paused(!0),
          this.timeline.eventCallback(
            "onStart",
            this.onChangeToStart,
            [e, i, n],
            this
          ),
          this.timeline.eventCallback(
            "onComplete",
            this.onChangeToComplete,
            [e, i, n],
            this
          ),
          this.timeline.eventCallback("onReverseComplete", null),
          (this.revertCB = t.proxy(function(t) {
            t.eventCallback(
              "onReverseComplete",
              this.onReverseChangeToComplete,
              [i, e, n],
              this
            );
          }, this)),
          this.slider.parameters.dynamicHeight)
        ) {
          var r = new NextendTimeline();
          this.slider.responsive.doResize(null, r, i, 0.6),
            this.timeline.add(r);
        }
        if (this.isTouch) e.onOutAnimationsPlayed();
        else {
          var o = t.Deferred();
          o.done(
            t.proxy(function() {
              this.play();
            }, this.timeline)
          ),
            this.preChangeToPlay(o, e, i);
        }
      }),
      (i.prototype.willRevertTo = function(e, i) {
        this.sliderElement.triggerHandler("mainAnimationWillRevertTo", [e, i]),
          this.sliderElement.one(
            "mainAnimationComplete",
            t.proxy(this.revertTo, this, e, i)
          );
      }),
      (i.prototype.revertTo = function(t, e) {
        this.slider.revertTo(t, e),
          this.slider.slides[e].triggerHandler("mainAnimationStartInCancel");
      }),
      (i.prototype.willCleanSlideIndex = function(e) {
        this.sliderElement.one(
          "mainAnimationComplete",
          t.proxy(this.cleanSlideIndex, this, e)
        );
      }),
      (i.prototype.cleanSlideIndex = function() {}),
      (i.prototype._initAnimation = function(t, e, i) {}),
      (i.prototype.onChangeToStart = function(t, e, i) {
        this.state = "playing";
        var s = [this, t.index, e.index, i];
        this.sliderElement.trigger("mainAnimationStart", s),
          this.slider.slides[t.index].trigger("mainAnimationStartOut", s),
          this.slider.slides[e.index].trigger("mainAnimationStartIn", s);
      }),
      (i.prototype.onChangeToComplete = function(t, e, i) {
        var s = [this, t.index, e.index, i];
        this.clearTimelines(),
          this.disableReverseMode(),
          this.slider.slides[t.index].trigger("mainAnimationCompleteOut", s),
          this.slider.slides[e.index].trigger("mainAnimationCompleteIn", s),
          (this.state = "ended"),
          this.sliderElement.trigger("mainAnimationComplete", s);
      }),
      (i.prototype.onReverseChangeToComplete = function(t, e, s) {
        i.prototype.onChangeToComplete.apply(this, arguments);
      }),
      (i.prototype.clearTimelines = function() {
        (this.revertCB = function() {}),
          this.timeline.clear(),
          this.timeline.timeScale(1);
      }),
      (i.prototype.getEase = function() {
        return this.isTouch ? "linear" : this.parameters.ease;
      }),
      i
    );
  }),
  N2D("SmartSliderPostBackgroundAnimation", function(t, e) {
    function i(e, i) {
      (this.tween = null),
        (this.lastTween = null),
        (this.slider = e),
        (this.mainAnimation = i),
        (this.isFirst = !0),
        (this.visibleAddedButNotPlayed = !1),
        (this.parameters = t.extend(
          { data: 0, speed: "default", strength: "default" },
          e.parameters.postBackgroundAnimations
        )),
        (this.backgrounds = e.backgrounds),
        (this.tweens = []),
        (this.images = this.backgrounds.getBackgroundImages());
      for (var s = 0; s < this.images.length; s++)
        this.images[s] && this.images[s].hasImage()
          ? ((this.tweens[s] = this.images[s].loadDeferred),
            this.images[s].loadDeferred.done(
              t.proxy(
                function(t) {
                  this.tweens[t] = this.getAnimation(t, this.images[t], {
                    slideW: 1,
                    slideH: 1
                  });
                },
                this,
                s
              )
            ))
          : (this.tweens[s] = !1);
      (this.playOnce = e.parameters.layerMode.playOnce),
        (this.playFirst = e.parameters.layerMode.playFirstLayer);
      var n = e.currentSlide.index;
      this.tweens[n] &&
        t.when(this.tweens[n]).done(
          t.proxy(function() {
            (this.tween = this.tweens[n]),
              this.playFirst
                ? this.addVisiblePlay()
                : this.tween && this.tween.progress(1, !1);
          }, this)
        ),
        e.sliderElement.on({
          mainAnimationStart: t.proxy(this.onMainAnimationStart, this),
          mainAnimationComplete: t.proxy(this.stop, this),
          SliderResize: t.proxy(this.onResize, this),
          mainAnimationWillRevertTo: t.proxy(
            this.onMainAnimationWillRevertTo,
            this
          )
        });
    }
    function s(t, e, i, s) {
      (this.startTime = -1),
        (this.currentProgress = 0),
        (this.$el = t),
        (this.duration = e),
        (this.from = i),
        (this.from.immediateRender = !0),
        (this.to = s),
        this.$el.css("transition", "all " + this.duration + "s"),
        (this.playTimeout = null),
        this.pause(0);
    }
    var n = {
        default: 5,
        superSlow: 20,
        slow: 10,
        normal: 5,
        fast: 3,
        superFast: 1.5
      },
      r = {
        default: 1,
        superSoft: 0.3,
        soft: 0.6,
        normal: 1,
        strong: 1.5,
        superStrong: 2
      };
    return (
      (i.prototype.addVisiblePlay = function() {
        this.visibleAddedButNotPlayed ||
          ((this.visibleAddedButNotPlayed = !0),
          this.slider.visible(t.proxy(this.play, this)));
      }),
      (i.prototype.onMainAnimationStart = function() {
        (this.isFirst = !1),
          this.mainAnimation.hasBackgroundAnimation() ||
          this.mainAnimation.isTouch
            ? this.slider.sliderElement.one(
                "mainAnimationComplete",
                t.proxy(this.play, this)
              )
            : this.play();
      }),
      (i.prototype.onMainAnimationWillRevertTo = function(t, e, i) {
        (this.lastTween = this.tween), (this.tween = !1);
      }),
      (i.prototype.onResize = function(t, e) {
        for (var i = 0; i < this.tweens.length; i++) {
          var s = this.tweens[i];
          s &&
            (s == this.tween
              ? (s.pause(0),
                (this.tween = this.tweens[i] = this.getAnimation(
                  i,
                  this.images[i],
                  e
                )),
                this.playFirst || !this.isFirst
                  ? this.addVisiblePlay()
                  : this.tween.progress(1))
              : (this.tweens[i] = this.getAnimation(i, this.images[i], e)));
        }
      }),
      (i.prototype.getAnimation = function(i, o, a) {
        if (!o.elements.image) return !1;
        var l = this.parameters.data,
          h = this.parameters.speed,
          d = this.parameters.strength;
        if (this.slider.slides[i].postBackgroundAnimation) {
          var p = this.slider.slides[i].postBackgroundAnimation;
          (l = p.data), (h = p.speed), (d = p.strength);
        }
        if (!l) return !1;
        var c = t.extend(
          !0,
          {},
          l.animations[Math.floor(Math.random() * l.animations.length)]
        );
        c.from.transformOrigin === e &&
          (c.from.transformOrigin = l.transformOrigin),
          (n2const.isFirefox || n2const.isIE <= 11) &&
            NextendTween.set(o.elements.image.$background.parent(), {
              rotationZ: "0.001deg"
            }),
          NextendTween.set(o.elements.image.$background, {
            transformOrigin: c.from.transformOrigin,
            backfaceVisibility: "hidden",
            transformStyle: "flat",
            overflow: "hidden"
          }),
          (c.to.paused = !0);
        for (var i = 0; i < c.strength.length; i++) {
          var u = c.strength[i];
          "scale" === u
            ? ((c.from.scale = 1 + (c.from.scale - 1) * r[d]),
              (c.to.scale = 1 + (c.to.scale - 1) * r[d]))
            : ((c.from[u] *= r[d]), (c.to[u] *= r[d]));
        }
        return (
          "undefined" != typeof c.from.x && (c.from.x *= a.slideW),
          "undefined" != typeof c.from.y && (c.from.y *= a.slideH),
          "undefined" != typeof c.to.x && (c.to.x *= a.slideW),
          "undefined" != typeof c.to.y && (c.to.y *= a.slideH),
          n2const.isIOS || n2const.isMobile
            ? NextendTween.fromTo(
                o.elements.image.$background,
                n[h],
                c.from,
                c.to
              )
            : new s(o.elements.image.$background, n[h], c.from, c.to)
        );
      }),
      (i.prototype.prepareToSwitchSlide = function(t, e) {
        this.tweens[t.index]
          ? (this.mainAnimation.hasBackgroundAnimation() &&
              this.tweens[t.index].pause(),
            (this.lastTween = this.tweens[t.index]))
          : (this.lastTween = !1),
          this.tweens[e.index]
            ? (this.tween = this.tweens[e.index])
            : (this.tween = !1);
      }),
      (i.prototype.play = function() {
        (this.visibleAddedButNotPlayed = !1),
          !this.tween ||
            (this.playOnce && 0 !== this.tween.progress()) ||
            this.tween.play();
      }),
      (i.prototype.stop = function() {
        !this.playOnce && this.lastTween && this.lastTween.pause(0);
      }),
      (s.prototype.pause = function(t) {
        0 === t &&
          (null !== this.playTimeout &&
            (clearTimeout(this.playTimeout), (this.playTimeout = null)),
          this.$el.addClass("n2noselftransition"),
          NextendTween.set(this.$el, this.from));
      }),
      (s.prototype.play = function() {
        this.$el.removeClass("n2noselftransition"),
          (this.startTime = t.now()),
          null !== this.playTimeout &&
            (clearTimeout(this.playTimeout), (this.playTimeout = null)),
          (this.playTimeout = setTimeout(
            t.proxy(function() {
              NextendTween.set(this.$el, this.to);
            }, this),
            50
          ));
      }),
      (s.prototype.progress = function(e) {
        return -1 === this.startTime
          ? 0
          : (t.now() - this.startTime) / this.duration / 1e3;
      }),
      i
    );
  }),
  N2D("SmartSliderControlAutoplay", function(t, e) {
    "use strict";
    function i(e, i) {
      (this._paused = !0),
        (this._wait = !1),
        (this._disabled = !1),
        (this._currentCount = 0),
        (this._progressEnabled = !1),
        (this.timeline = null),
        (this.hasButton = !1),
        (this.deferredsMediaPlaying = null),
        (this.deferredMouseLeave = null),
        (this.deferredMouseEnter = null),
        (this.mainAnimationDeferred = !0),
        (this.autoplayDeferred = null),
        (this.slider = e),
        (this.parameters = t.extend(
          {
            enabled: 0,
            start: 1,
            duration: 8e3,
            autoplayToSlide: 0,
            autoplayToSlideIndex: -1,
            allowReStart: 0,
            pause: { mouse: "enter", click: !0, mediaStarted: !0 },
            resume: { click: 0, mouse: 0, mediaEnded: !0 }
          },
          i
        )),
        this.parameters.enabled
          ? ((this.parameters.duration /= 1e3),
            (e.controls.autoplay = this),
            (this.deferredsExtraPlaying = {}),
            this.slider.visible(t.proxy(this.onReady, this)))
          : this.disable(),
        (e.controls.autoplay = this);
    }
    var s = !1;
    return (
      (i.prototype.onReady = function() {
        this.autoplayDeferred = t.Deferred();
        var e = { _progress: 0 };
        (this.timeline = NextendTween.to(
          e,
          this.getSlideDuration(this.slider.currentSlide.index),
          { _progress: 1, paused: !0, onComplete: t.proxy(this.next, this) }
        )),
          this._progressEnabled && this.enableProgress();
        var i = this.slider.sliderElement;
        if (
          (this.parameters.start
            ? this.continueAutoplay()
            : this.pauseAutoplayExtraPlaying(null, "autoplayButton"),
          i.on(
            "mainAnimationStart.autoplay",
            t.proxy(this.onMainAnimationStart, this)
          ),
          "0" != this.parameters.pause.mouse)
        )
          switch (
            (i.on("touchend.autoplay", function() {
              (s = !0),
                setTimeout(function() {
                  s = !1;
                }, 300);
            }),
            this.parameters.pause.mouse)
          ) {
            case "enter":
              i.on(
                "mouseenter.autoplay",
                t.proxy(this.pauseAutoplayMouseEnter, this)
              ),
                i.on(
                  "mouseleave.autoplay",
                  t.proxy(this.pauseAutoplayMouseEnterEnded, this)
                );
              break;
            case "leave":
              i.on(
                "mouseleave.autoplay",
                t.proxy(this.pauseAutoplayMouseLeave, this)
              ),
                i.on(
                  "mouseenter.autoplay",
                  t.proxy(this.pauseAutoplayMouseLeaveEnded, this)
                );
          }
        if (
          (this.parameters.pause.click && !this.parameters.resume.click
            ? i.on(
                "universalclick.autoplay",
                t.proxy(this.pauseAutoplayUniversal, this)
              )
            : !this.parameters.pause.click && this.parameters.resume.click
            ? i.on(
                "universalclick.autoplay",
                t.proxy(function(t) {
                  this.pauseAutoplayExtraPlayingEnded(t, "autoplayButton");
                }, this)
              )
            : this.parameters.pause.click &&
              this.parameters.resume.click &&
              i.on(
                "universalclick.autoplay",
                t.proxy(function(t) {
                  this._paused
                    ? this.pauseAutoplayExtraPlayingEnded(t, "autoplayButton")
                    : this.pauseAutoplayUniversal(t);
                }, this)
              ),
          this.parameters.pause.mediaStarted &&
            ((this.deferredsMediaPlaying = {}),
            i.on(
              "mediaStarted.autoplay",
              t.proxy(this.pauseAutoplayMediaPlaying, this)
            ),
            i.on(
              "mediaEnded.autoplay",
              t.proxy(this.pauseAutoplayMediaPlayingEnded, this)
            )),
          "0" != this.parameters.resume.mouse)
        )
          switch (this.parameters.resume.mouse) {
            case "enter":
              this.hasButton && "0" != this.parameters.pause.mouse
                ? i.on(
                    "mouseenter.autoplay",
                    t.proxy(this.continueAutoplay, this)
                  )
                : i.on(
                    "mouseenter.autoplay",
                    t.proxy(function(t) {
                      this.pauseAutoplayExtraPlayingEnded(t, "autoplayButton");
                    }, this)
                  );
              break;
            case "leave":
              this.hasButton && "0" != this.parameters.pause.mouse
                ? i.on(
                    "mouseleave.autoplay",
                    t.proxy(this.continueAutoplay, this)
                  )
                : i.on(
                    "mouseleave.autoplay",
                    t.proxy(function(t) {
                      this.pauseAutoplayExtraPlayingEnded(t, "autoplayButton");
                    }, this)
                  );
          }
        this.parameters.resume.mediaEnded &&
          i.on("mediaEnded.autoplay", t.proxy(this.continueAutoplay, this)),
          i.on(
            "autoplayExtraWait.autoplay",
            t.proxy(this.pauseAutoplayExtraPlaying, this)
          ),
          i.on(
            "autoplayExtraContinue.autoplay",
            t.proxy(this.pauseAutoplayExtraPlayingEnded, this)
          ),
          this.slider.sliderElement.on(
            "mainAnimationComplete.autoplay",
            t.proxy(this.onMainAnimationComplete, this)
          );
      }),
      (i.prototype.enableProgress = function() {
        this.timeline &&
          this.timeline.eventCallback("onUpdate", t.proxy(this.onUpdate, this)),
          (this._progressEnabled = !0);
      }),
      (i.prototype.onMainAnimationStart = function(e, i, s, n, r) {
        (this.mainAnimationDeferred = t.Deferred()), this.deActivate(0, "wait");
        for (var o in this.deferredsMediaPlaying)
          this.deferredsMediaPlaying[o].resolve();
      }),
      (i.prototype.onMainAnimationComplete = function(t, e, i, s) {
        this.parameters.autoplayToSlideIndex >= 0 &&
          this.parameters.autoplayToSlideIndex ==
            this.slider.currentRealSlide.index + 1 &&
          this.limitAutoplay(),
          this.timeline.duration(this.getSlideDuration(s)),
          this.mainAnimationDeferred.resolve(),
          this.continueAutoplay();
      }),
      (i.prototype.getSlideDuration = function(t) {
        var e = this.slider.realSlides[this.slider.getRealIndex(t)],
          i = e.minimumSlideDuration;
        return 0 == i && (i = this.parameters.duration), i;
      }),
      (i.prototype.continueAutoplay = function(e) {
        "pending" == this.autoplayDeferred.state() &&
          this.autoplayDeferred.reject();
        var i = [];
        for (var s in this.deferredsExtraPlaying)
          i.push(this.deferredsExtraPlaying[s]);
        for (var s in this.deferredsMediaPlaying)
          i.push(this.deferredsMediaPlaying[s]);
        this.deferredMouseEnter && i.push(this.deferredMouseEnter),
          this.deferredMouseLeave && i.push(this.deferredMouseLeave),
          i.push(this.mainAnimationDeferred),
          (this.autoplayDeferred = t.Deferred()),
          this.autoplayDeferred.done(t.proxy(this._continueAutoplay, this)),
          t.when.apply(t, i).done(
            t.proxy(function() {
              "pending" == this.autoplayDeferred.state() &&
                this.autoplayDeferred.resolve();
            }, this)
          );
      }),
      (i.prototype._continueAutoplay = function() {
        (!this._paused && !this._wait) ||
          this._disabled ||
          ((this._paused = !1),
          (this._wait = !1),
          this.slider.sliderElement.triggerHandler("autoplayStarted"),
          1 == this.timeline.progress() && this.timeline.pause(0, !1),
          this.startTimeout(null));
      }),
      (i.prototype.pauseAutoplayUniversal = function(t) {
        this.pauseAutoplayExtraPlaying(t, "autoplayButton"),
          this.deActivate(null, "pause");
      }),
      (i.prototype.pauseAutoplayMouseEnter = function() {
        s ||
          (this.autoplayDeferred.reject(),
          (this.deferredMouseEnter = t.Deferred()),
          this.deActivate(
            null,
            "leave" == this.parameters.resume.mouse ? "wait" : "pause"
          ));
      }),
      (i.prototype.pauseAutoplayMouseEnterEnded = function() {
        this.deferredMouseEnter && this.deferredMouseEnter.resolve();
      }),
      (i.prototype.pauseAutoplayMouseLeave = function() {
        this.autoplayDeferred.reject(),
          (this.deferredMouseLeave = t.Deferred()),
          this.deActivate(
            null,
            "enter" == this.parameters.resume.mouse ? "wait" : "pause"
          );
      }),
      (i.prototype.pauseAutoplayMouseLeaveEnded = function() {
        this.deferredMouseLeave && this.deferredMouseLeave.resolve();
      }),
      (i.prototype.pauseAutoplayMediaPlaying = function(e, i) {
        "undefined" != typeof this.deferredsMediaPlaying[i] &&
          this.autoplayDeferred.reject(),
          (this.deferredsMediaPlaying[i] = t.Deferred()),
          this.deActivate(null, "wait");
      }),
      (i.prototype.pauseAutoplayMediaPlayingEnded = function(t, e) {
        "undefined" != typeof this.deferredsMediaPlaying[e] &&
          (this.autoplayDeferred.reject(),
          this.deferredsMediaPlaying[e].resolve(),
          delete this.deferredsMediaPlaying[e]);
      }),
      (i.prototype.pauseAutoplayExtraPlaying = function(e, i) {
        "undefined" != typeof this.deferredsExtraPlaying[i] &&
          this.autoplayDeferred.reject(),
          (this.deferredsExtraPlaying[i] = t.Deferred()),
          this.deActivate(null, "pause");
      }),
      (i.prototype.pauseAutoplayExtraPlayingEnded = function(t, e) {
        "undefined" != typeof this.deferredsExtraPlaying[e] &&
          (this.autoplayDeferred.reject(),
          this.deferredsExtraPlaying[e].resolve(),
          delete this.deferredsExtraPlaying[e]),
          this.continueAutoplay();
      }),
      (i.prototype.deActivate = function(t, e) {
        "pause" == e
          ? this._paused ||
            ((this._paused = !0),
            0 !== t &&
              this.slider.sliderElement.triggerHandler("autoplayPaused"))
          : "wait" == e &&
            (this._wait ||
              ((this._wait = !0),
              0 !== t &&
                this.slider.sliderElement.triggerHandler("autoplayWait"))),
          this.timeline && this.timeline.pause(t, !1);
      }),
      (i.prototype.disable = function() {
        this.deActivate(0, "pause"),
          this.slider.sliderElement.triggerHandler("autoplayPaused"),
          this.slider.sliderElement.triggerHandler("autoplayDisabled"),
          this.slider.sliderElement.off(".autoplay"),
          (this._disabled = !0);
      }),
      (i.prototype.startTimeout = function(t) {
        this._paused || this._disabled || this.timeline.play(t);
      }),
      (i.prototype.next = function() {
        this.timeline.pause(),
          this._currentCount++,
          ((this.parameters.autoplayToSlide > 0 &&
            this._currentCount >= this.parameters.autoplayToSlide) ||
            (this.parameters.autoplayToSlideIndex >= 0 &&
              this.parameters.autoplayToSlideIndex ==
                this.slider.currentRealSlide.index + 2)) &&
            this.limitAutoplay(),
          this.slider.nextCarousel(!0);
      }),
      (i.prototype.limitAutoplay = function() {
        this.parameters.allowReStart
          ? ((this._currentCount = 0),
            this.slider.sliderElement.triggerHandler(
              "autoplayExtraWait",
              "autoplayButton"
            ))
          : this.disable();
      }),
      (i.prototype.onUpdate = function() {
        this.slider.sliderElement.triggerHandler(
          "autoplay",
          this.timeline.progress()
        );
      }),
      i
    );
  }),
  N2D("SmartSliderControlFullscreen", function(t, e) {
    "use strict";
    function i(e, i, s) {
      (this.slider = e),
        (this.responsive = this.slider.responsive),
        (this._type = this.responsive.parameters.type),
        (this._forceFull = this.responsive.parameters.forceFull),
        (this.forceFullpage =
          "auto" == this._type ||
          "fullwidth" == this._type ||
          "fullpage" == this._type),
        this.forceFullpage &&
          ((this._upscale = this.responsive.parameters.upscale),
          (this._minimumHeightRatio = t.extend(
            {},
            this.responsive.parameters.minimumHeightRatio
          )),
          (this._maximumHeightRatio = t.extend(
            {},
            this.responsive.parameters.maximumHeightRatio
          ))),
        (this.isFullScreen = !1),
        (this.fullParent = this.slider.sliderElement.closest(".n2-ss-align")),
        (this.browserSpecific = {});
      var n = this.slider.sliderElement[0];
      n.requestFullscreen
        ? ((this.browserSpecific.requestFullscreen = "requestFullscreen"),
          (this.browserSpecific.event = "fullscreenchange"))
        : n.msRequestFullscreen
        ? ((this.browserSpecific.requestFullscreen = "msRequestFullscreen"),
          (this.browserSpecific.event = "MSFullscreenChange"))
        : n.mozRequestFullScreen
        ? ((this.browserSpecific.requestFullscreen = "mozRequestFullScreen"),
          (this.browserSpecific.event = "mozfullscreenchange"))
        : n.webkitRequestFullscreen
        ? ((this.browserSpecific.requestFullscreen = "webkitRequestFullscreen"),
          (this.browserSpecific.event = "webkitfullscreenchange"))
        : ((this.browserSpecific.requestFullscreen =
            "nextendRequestFullscreen"),
          (this.browserSpecific.event = "nextendfullscreenchange"),
          (this.fullParent[0][this.browserSpecific.requestFullscreen] = t.proxy(
            function() {
              this.fullParent.css({
                position: "fixed",
                left: 0,
                top: 0,
                width: "100%",
                height: "100%",
                backgroundColor: "#000",
                zIndex: 1e6
              }),
                (document.fullscreenElement = this.fullParent[0]),
                this.triggerEvent(document, this.browserSpecific.event),
                t(window).trigger("resize");
            },
            this
          ))),
        document.exitFullscreen
          ? (this.browserSpecific.exitFullscreen = "exitFullscreen")
          : document.msExitFullscreen
          ? (this.browserSpecific.exitFullscreen = "msExitFullscreen")
          : document.mozCancelFullScreen
          ? (this.browserSpecific.exitFullscreen = "mozCancelFullScreen")
          : document.webkitExitFullscreen
          ? (this.browserSpecific.exitFullscreen = "webkitExitFullscreen")
          : ((this.browserSpecific.exitFullscreen = "nextendExitFullscreen"),
            (this.fullParent[0][this.browserSpecific.exitFullscreen] = t.proxy(
              function() {
                this.fullParent.css({
                  position: "",
                  left: "",
                  top: "",
                  width: "",
                  height: "",
                  backgroundColor: "",
                  zIndex: ""
                }),
                  (document.fullscreenElement = null),
                  this.triggerEvent(document, this.browserSpecific.event);
              },
              this
            ))),
        document.addEventListener(
          this.browserSpecific.event,
          t.proxy(this.fullScreenChange, this)
        );
    }
    return (
      (i.prototype.switchState = function() {
        (this.isFullScreen = !this.isFullScreen),
          this.isFullScreen ? this._fullScreen() : this._normalScreen();
      }),
      (i.prototype.requestFullscreen = function() {
        return this.isFullScreen
          ? !1
          : ((this.isFullScreen = !0), this._fullScreen(), !0);
      }),
      (i.prototype.exitFullscreen = function() {
        return this.isFullScreen
          ? ((this.isFullScreen = !1), this._normalScreen(), !0)
          : !1;
      }),
      (i.prototype.triggerEvent = function(t, e) {
        var i;
        document.createEvent
          ? ((i = document.createEvent("HTMLEvents")), i.initEvent(e, !0, !0))
          : document.createEventObject &&
            ((i = document.createEventObject()), (i.eventType = e)),
          (i.eventName = e),
          t.dispatchEvent
            ? t.dispatchEvent(i)
            : t.fireEvent && htmlEvents["on" + e]
            ? t.fireEvent("on" + i.eventType, i)
            : t[e]
            ? t[e]()
            : t["on" + e] && t["on" + e]();
      }),
      (i.prototype._fullScreen = function() {
        this.forceFullpage &&
          ((this.responsive.isFullScreen = !0),
          (this.responsive.parameters.type = "fullpage"),
          (this.responsive.parameters.upscale = !0),
          (this.responsive.parameters.forceFull = !1),
          (this._marginLeft = this.responsive.containerElement[0].style.marginLeft),
          this.responsive.containerElement.css(n2const.rtl.marginLeft, 0)),
          this.fullParent
            .css({
              width: "100%",
              height: "100%",
              backgroundColor: t("body").css("background-color")
            })
            .addClass("n2-ss-in-fullscreen"),
          this.fullParent.get(0)[this.browserSpecific.requestFullscreen]();
      }),
      (i.prototype._normalScreen = function() {
        document[this.browserSpecific.exitFullscreen]
          ? document[this.browserSpecific.exitFullscreen]()
          : this.fullParent[0][this.browserSpecific.exitFullscreen] &&
            this.fullParent[0][this.browserSpecific.exitFullscreen]();
      }),
      (i.prototype.fullScreenChange = function() {
        this.isDocumentInFullScreenMode()
          ? (this.slider.sliderElement.triggerHandler("n2FullScreen"),
            t("html").addClass("n2-in-fullscreen"),
            (this.isFullScreen = !0),
            t(window).trigger("resize"))
          : this.forceFullpage &&
            ((this.responsive.isFullScreen = !1),
            (this.responsive.parameters.type = this._type),
            (this.responsive.parameters.upscale = this._upscale),
            (this.responsive.parameters.forceFull = this._forceFull),
            (this.responsive.parameters.minimumHeightRatio = this._minimumHeightRatio),
            (this.responsive.parameters.maximumHeightRatio = this._maximumHeightRatio),
            this.responsive.containerElement.css(
              n2const.rtl.marginLeft,
              this._marginLeft
            ),
            this.fullParent
              .css({ width: "", height: "", backgroundColor: "" })
              .removeClass("n2-ss-in-fullscreen"),
            t("html").removeClass("n2-in-fullscreen"),
            t(window).trigger("resize"),
            (this.isFullScreen = !1),
            this.slider.sliderElement.triggerHandler("n2ExitFullScreen"));
      }),
      (i.prototype.isDocumentInFullScreenMode = function() {
        return (
          (document.fullscreenElement && null !== document.fullscreenElement) ||
          (document.msFullscreenElement &&
            null !== document.msFullscreenElement) ||
          document.mozFullScreen ||
          document.webkitIsFullScreen
        );
      }),
      i
    );
  }),
  N2D("SmartSliderControlKeyboard", function(t, e) {
    "use strict";
    function i(e, s, n) {
      (this.slider = e),
        (this.parameters = t.extend({}, n)),
        "vertical" == s
          ? (this.parseEvent = i.prototype.parseEventVertical)
          : (this.parseEvent = i.prototype.parseEventHorizontal),
        t(document).on("keydown", t.proxy(this.onKeyDown, this)),
        (e.controls.keyboard = this);
    }
    return (
      (i.prototype.isSliderOnScreen = function() {
        var e = this.slider.sliderElement.offset(),
          i = t(window).scrollTop(),
          s = this.slider.sliderElement.height();
        return (
          e.top + 0.5 * s >= i && e.top - 0.5 * s <= i + t(window).height()
        );
      }),
      (i.prototype.onKeyDown = function(t) {
        t.target.tagName.match(/BODY|DIV|IMG/) &&
          this.isSliderOnScreen() &&
          ((t = t || window.event),
          this.parseEvent.call(this, t) &&
            (t.preventDefault(), t.stopImmediatePropagation()));
      }),
      (i.prototype.parseEventHorizontal = function(t) {
        switch (t.keyCode) {
          case 39:
            return this.slider[n2const.rtl.next](), !0;
          case 37:
            return this.slider[n2const.rtl.previous](), !0;
          default:
            return !1;
        }
      }),
      (i.prototype.parseEventVertical = function(t) {
        switch (t.keyCode) {
          case 40:
            return this.slider.next(), !0;
          case 38:
            return this.slider.previous(), !0;
          default:
            return !1;
        }
      }),
      i
    );
  }),
  N2D("SmartSliderControlScroll", function(t, e) {
    "use strict";
    function i(e) {
      (this.preventScroll = !1),
        (this.preventScrollGlobal = !1),
        (this.slider = e),
        e.sliderElement.on(
          "DOMMouseScroll mousewheel",
          t.proxy(this.onMouseWheel, this)
        ),
        (e.controls.scroll = this);
    }
    return (
      (i.prototype.onMouseWheel = function(t) {
        if (this.preventScroll === !1) {
          var e = !1;
          t.originalEvent &&
            (t.originalEvent.wheelDelta &&
              (e = t.originalEvent.wheelDelta / -1 < 0),
            t.originalEvent.deltaY && (e = t.originalEvent.deltaY < 0),
            t.originalEvent.detail && (e = t.originalEvent.detail < 0)),
            e
              ? this.slider.previous() &&
                (t.preventDefault(), this.preventRepeat(), this.preventGlobal())
              : this.slider.next() &&
                (t.preventDefault(),
                this.preventRepeat(),
                this.preventGlobal());
        } else t.preventDefault(), this.preventRepeat(t);
      }),
      (i.prototype.preventRepeat = function() {
        this.preventScroll !== !1 && clearTimeout(this.preventScroll),
          (this.preventScroll = setTimeout(
            t.proxy(function() {
              (this.preventScroll = !1),
                this.preventScrollGlobal !== !1 &&
                  (clearTimeout(this.preventScrollGlobal),
                  (this.preventScrollGlobal = !1));
            }, this),
            200
          ));
      }),
      (i.prototype.preventGlobal = function() {
        this.preventScrollGlobal !== !1 &&
          clearTimeout(this.preventScrollGlobal),
          (this.preventScrollGlobal = setTimeout(
            t.proxy(function() {
              this.preventScroll !== !1 && clearTimeout(this.preventScroll),
                (this.preventScroll = !1);
            }, this),
            2e3
          ));
      }),
      i
    );
  }),
  N2D("SmartSliderControlTilt", function(t, e) {
    "use strict";
    function i(i, s) {
      return window.DeviceOrientationEvent === e || window.orientation === e
        ? "Not supported"
        : ((this.timeout = null),
          (this.slider = i),
          (this.parameters = t.extend({ duration: 2e3 }, s)),
          this.orientationchange(),
          window.addEventListener(
            "orientationchange",
            t.proxy(this.orientationchange, this)
          ),
          window.addEventListener(
            "deviceorientation",
            t.proxy(this.handleOrientation, this),
            !0
          ),
          void (i.controls.tilt = this));
    }
    return (
      (i.prototype.orientationchange = function() {
        switch (window.orientation) {
          case -90:
          case 90:
            this.parseEvent = i.prototype.parseEventHorizontalLandscape;
            break;
          default:
            this.parseEvent = i.prototype.parseEventHorizontal;
        }
      }),
      (i.prototype.clearTimeout = function() {
        this.timeout = null;
      }),
      (i.prototype.handleOrientation = function(e) {
        null == this.timeout &&
          this.parseEvent.call(this, e) &&
          ((this.timeout = setTimeout(
            t.proxy(this.clearTimeout, this),
            this.parameters.duration
          )),
          e.preventDefault());
      }),
      (i.prototype.parseEventHorizontal = function(t) {
        return t.gamma > 10
          ? (this.slider.next(), !0)
          : t.gamma < -10
          ? (this.slider.previous(), !0)
          : !1;
      }),
      (i.prototype.parseEventHorizontalLandscape = function(t) {
        return t.beta < -10
          ? (this.slider.next(), !0)
          : t.beta > 10
          ? (this.slider.previous(), !0)
          : !1;
      }),
      i
    );
  }),
  N2D("SmartSliderControlTouch", function(t, e) {
    "use strict";
    function i(e, i, s) {
      (this.currentAnimation = null),
        (this.slider = e),
        (this._animation = e.mainAnimation),
        (this.parameters = t.extend({ fallbackToMouseEvents: !0 }, s)),
        (this.swipeElement = this.slider.sliderElement.find(
          "> .n2-ss-swipe-element"
        )),
        "vertical" == i
          ? this.setVertical()
          : "horizontal" == i && this.setHorizontal();
      var r = t.proxy(function() {
        var t = this;
        this._animation.isNoAnimation
          ? N2Classes.EventBurrito(this.swipeElement.get(0), {
              mouse: this.parameters.fallbackToMouseEvents,
              axis: "horizontal" == i ? "x" : "y",
              start: function() {
                n = !1;
              },
              move: function(e, i, s, r, o) {
                var a = t._direction.measure(s);
                if (!o && "unknown" != a && null === t.currentAnimation) {
                  if ("ended" != t._animation.state) return !1;
                  (t.distance = [0]),
                    t.swipeElement.addClass("n2-grabbing"),
                    (t.currentAnimation = { direction: a });
                  var l = t.slider.isChangePossible(t._direction[a]);
                  if (!l) return (t.currentAnimation = null), !1;
                }
                if (t.currentAnimation) {
                  var h = t._direction.get(s, t.currentAnimation.direction);
                  if (
                    (t.logDistance(h),
                    (n || Math.abs(h) > t._direction.minDistance) &&
                      e.cancelable)
                  )
                    return (n = !0), !0;
                }
                return !1;
              },
              end: function(e, i, s, n, r) {
                if (null !== t.currentAnimation) {
                  var o = r ? 0 : t.measureRealDirection();
                  o && t.slider[t._direction[t.currentAnimation.direction]](),
                    t.swipeElement.removeClass("n2-grabbing"),
                    (t.currentAnimation = null);
                }
                Math.abs(s.x) < 10 && Math.abs(s.y) < 10
                  ? t.onTap(e)
                  : nextend.preventClick();
              }
            })
          : N2Classes.EventBurrito(this.swipeElement.get(0), {
              mouse: this.parameters.fallbackToMouseEvents,
              axis: "horizontal" == i ? "x" : "y",
              start: function(t, e) {
                n = !1;
              },
              move: function(e, i, s, r, o) {
                var a = t._direction.measure(s);
                if (!o && "unknown" != a && null === t.currentAnimation) {
                  if ("ended" != t._animation.state) return !1;
                  (t.distance = [0]),
                    t.swipeElement.addClass("n2-grabbing"),
                    t._animation.setTouch(t._direction.axis),
                    (t.currentAnimation = { direction: a, percent: 0 });
                  var l = t.slider[t._direction[a]](!1);
                  if (!l)
                    return (
                      t._animation.setTouch(!1), (t.currentAnimation = null), !1
                    );
                }
                if (t.currentAnimation) {
                  var h = t._direction.get(s, t.currentAnimation.direction);
                  if ((t.logDistance(h), t.currentAnimation.percent < 1)) {
                    var d = Math.max(
                      -0.99999,
                      Math.min(
                        0.99999,
                        h / t.slider.dimensions.slider[t._property]
                      )
                    );
                    (t.currentAnimation.percent = d),
                      t._animation.setTouchProgress(d);
                  }
                  if (
                    (n || Math.abs(h) > t._direction.minDistance) &&
                    e.cancelable
                  )
                    return (n = !0), !0;
                }
                return !1;
              },
              end: function(e, i, s, n, r) {
                if (null !== t.currentAnimation) {
                  var o = r ? 0 : t.measureRealDirection(),
                    a = t._animation.timeline.progress();
                  1 != a &&
                    t._animation.setTouchEnd(
                      o,
                      t.currentAnimation.percent,
                      s.time
                    ),
                    t.swipeElement.removeClass("n2-grabbing"),
                    t._animation.setTouch(!1),
                    (t.currentAnimation = null);
                }
                Math.abs(s.x) < 10 && Math.abs(s.y) < 10
                  ? t.onTap(e)
                  : nextend.preventClick();
              }
            });
      }, this);
      if (navigator.userAgent.toLowerCase().indexOf("android") > -1) {
        var o = this.swipeElement.parent();
        1 != o.css("opacity")
          ? this.swipeElement.parent().one("transitionend", r)
          : r();
      } else r();
      this.parameters.fallbackToMouseEvents ||
        this.swipeElement.on("click", t.proxy(this.onTap, this)),
        this.parameters.fallbackToMouseEvents &&
          this.swipeElement.addClass("n2-grab"),
        (e.controls.touch = this);
    }
    var s =
        window.navigator.pointerEnabled || window.navigator.msPointerEnabled,
      n = !1,
      r = !1;
    return (
      (i.prototype.setHorizontal = function() {
        (this._property = "width"),
          (this._direction = {
            left: n2const.rtl.next,
            right: n2const.rtl.previous,
            up: null,
            down: null,
            axis: "horizontal",
            minDistance: 10,
            measure: function(t) {
              return (!n && Math.abs(t.x) < 10) ||
                0 == t.x ||
                Math.abs(t.x) < Math.abs(t.y)
                ? "unknown"
                : t.x < 0
                ? "left"
                : "right";
            },
            get: function(t, e) {
              return "left" == e ? -t.x : t.x;
            }
          }),
          s &&
            (this.swipeElement.css("-ms-touch-action", "pan-y"),
            this.swipeElement.css("touch-action", "pan-y"));
      }),
      (i.prototype.setVertical = function() {
        (this._property = "height"),
          (this._direction = {
            left: null,
            right: null,
            up: "next",
            down: "previous",
            axis: "vertical",
            minDistance: 1,
            measure: function(t) {
              return (!n && Math.abs(t.y) < 1) ||
                0 == t.y ||
                Math.abs(t.y) < Math.abs(t.x)
                ? "unknown"
                : t.y < 0
                ? "up"
                : "down";
            },
            get: function(t, e) {
              return "up" == e ? -t.y : t.y;
            }
          }),
          s &&
            (this.swipeElement.css("-ms-touch-action", "pan-x"),
            this.swipeElement.css("touch-action", "pan-x"));
      }),
      (i.prototype.logDistance = function(t) {
        this.distance.length > 3 && this.distance.shift(),
          this.distance.push(t);
      }),
      (i.prototype.measureRealDirection = function() {
        var t = this.distance[0],
          e = this.distance[this.distance.length - 1];
        return (e >= 0 && t > e) || (0 > e && e > t) ? 0 : 1;
      }),
      (i.prototype.onTap = function(e) {
        r ||
          (t(e.target).trigger("n2click"),
          (r = !0),
          setTimeout(function() {
            r = !1;
          }, 500));
      }),
      i
    );
  }),
  N2D("SmartSliderSlideBackground", function(t, e) {
    function i(e, i, s) {
      if (
        ((this.loadStarted = !1),
        (this.types = this.types || {
          color: "SmartSliderSlideBackgroundColor",
          image: "SmartSliderSlideBackgroundImage",
          video: "SmartSliderSlideBackgroundVideo"
        }),
        (this.width = 0),
        (this.height = 0),
        (this.slide = e),
        (this.element = i),
        e.slider.needBackgroundWrap)
      ) {
        var n = i.find("> *");
        this.$wrapElement = t(
          '<div class="n2-ss-slide-background-wrap n2-ow" />'
        )
          .appendTo(i)
          .append(n);
      } else this.$wrapElement = this.element;
      (this.manager = s),
        (this.loadDeferred = t.Deferred()),
        (this.elements = { color: !1, image: !1, video: !1 }),
        (this.currentSrc = ""),
        (this.mode = i.data("mode")),
        (this.opacity = i.data("opacity")),
        (this.$image = this.element.find("img")),
        this.$image.length &&
          (this.elements.image = new N2Classes[this.types.image](
            e,
            s,
            this,
            this.$image
          ));
      var r = this.element.find(".n2-ss-slide-background-color");
      r.length &&
        (this.elements.color = new N2Classes[this.types.color](this, r));
      var o = this.element.find(".n2-ss-slide-background-video");
      o.length &&
        (this.elements.video = new N2Classes[this.types.video](
          this.slide,
          this,
          o
        ));
      var a = this.slide.slider.parameters.backgroundParallax;
      a.strength > 0 &&
        !((n2const.isPhone && !a.mobile) || (n2const.isTablet && !a.tablet)) &&
        this.slide.slider.sliderElement.one(
          "BeforeVisible",
          t.proxy(function() {
            this.startFixed(a);
          }, this)
        );
      var l = [];
      for (var h in this.elements)
        this.elements[h] && l.push(this.elements[h].getLoadedDeferred());
      t.when.apply(t, l).then(
        t.proxy(function() {
          this.loadDeferred.resolve();
        }, this)
      );
    }
    return (
      (i.prototype.preLoad = function() {
        return (
          this.loadStarted ||
            (this.slide.$element.find("[data-lazysrc]").each(function() {
              var e = t(this);
              e.attr("src", e.data("lazysrc"));
            }),
            (this.loadStarted = !0)),
          "pending" === this.loadDeferred.state() &&
            this.elements.image &&
            this.elements.image.preLoad(),
          this.loadDeferred
        );
      }),
      (i.prototype.fadeOut = function() {
        this.elements.image && this.elements.image.fadeOut();
      }),
      (i.prototype.hack = function() {
        NextendTween.set(this.element, { rotation: 1e-4 });
      }),
      (i.prototype.hasColor = function() {
        return this.elements.color;
      }),
      (i.prototype.hasImage = function() {
        return this.elements.image;
      }),
      (i.prototype.hasVideo = function() {
        return this.elements.video;
      }),
      (i.prototype.hasBackground = function() {
        return (
          this.elements.color || this.elements.image || this.elements.video
        );
      }),
      (i.prototype.updateBackgroundToDevice = function(t) {
        this.hasImage() && this.elements.image.updateBackgroundToDevice(t);
      }),
      (i.prototype.startFixed = function(e) {
        n2const.isEdge ||
          n2const.isIE ||
          (this.hasBackground() &&
            this.slide.slider.startedDeferred.done(
              t.proxy(function() {
                N2Classes.FixedBackground.addElement(this.$wrapElement, e);
              }, this)
            ));
      }),
      i
    );
  }),
  N2D("FrontendComponent", function(t, e) {
    function i(t, e, i, s) {
      (this.wraps = {}),
        (this.isVisible = !0),
        (this.device = ""),
        (this.children = []),
        (this.slide = t),
        (this.parent = e),
        (this.$layer = i.data("layer", this));
      var n = this.$layer.find("> .n2-ss-layer-mask");
      n.length && (this.wraps.mask = n);
      var r = this.$layer.find("> .n2-ss-layer-parallax");
      switch ((r.length && (this.wraps.parallax = r), i.data("pm"))) {
        case "absolute":
          this.placement = new N2Classes.FrontendPlacementAbsolute(this);
          break;
        case "normal":
          this.placement = new N2Classes.FrontendPlacementNormal(this);
          break;
        case "content":
          this.placement = new N2Classes.FrontendPlacementContent(this);
          break;
        default:
          this.placement = new N2Classes.FrontendPlacementDefault(this);
      }
      if (
        ((this.animations = i.data("animations")),
        (this.parallax = i.data("parallax")),
        (this.baseSize = this.baseSize || 100),
        (this.isAdaptiveFont = this.get("adaptivefont")),
        this.refreshBaseSize(this.getDevice("fontsize")),
        s)
      )
        for (var o = 0; o < s.length; o++)
          switch (s.eq(o).data("sstype")) {
            case "content":
              this.children.push(
                new N2Classes.FrontendComponentContent(
                  this.slide,
                  this,
                  s.eq(o)
                )
              );
              break;
            case "row":
              this.children.push(
                new N2Classes.FrontendComponentRow(this.slide, this, s.eq(o))
              );
              break;
            case "col":
              this.children.push(
                new N2Classes.FrontendComponentCol(this.slide, this, s.eq(o))
              );
              break;
            case "group":
              this.children.push(
                new N2Classes.FrontendComponentGroup(this.slide, this, s.eq(o))
              );
              break;
            default:
              this.children.push(
                new N2Classes.FrontendComponentLayer(this.slide, this, s.eq(o))
              );
          }
    }
    return (
      (i.prototype.refreshBaseSize = function(t) {
        this.isAdaptiveFont
          ? (this.baseSize = (16 * t) / 100)
          : (this.baseSize = (this.parent.baseSize * t) / 100);
      }),
      (i.prototype.start = function() {
        this.placement.start();
        for (var t = 0; t < this.children.length; t++) this.children[t].start();
        var e = this.get("rotation") || 0;
        if (e / 360 != 0) {
          var i = this.addWrap(
            "rotation",
            "<div class='n2-ss-layer-rotation'></div>"
          );
          NextendTween.set(i[0], { rotationZ: e });
        }
      }),
      (i.prototype.onDeviceChange = function(t) {
        this.device = t;
        var i = this.isVisible;
        if (
          ((this.isVisible = this.getDevice("")),
          this.isVisible === e && (this.isVisible = 1),
          i && !this.isVisible
            ? (this.$layer.data("shows", 0), this.$layer.css("display", "none"))
            : !i &&
              this.isVisible &&
              (this.$layer.data("shows", 1), this.$layer.css("display", "")),
          this.isVisible)
        ) {
          var s = this.getDevice("fontsize");
          this.refreshBaseSize(s),
            this.isAdaptiveFont
              ? this.$layer.css("font-size", (16 * s) / 100 + "px")
              : this.$layer.css("font-size", s + "%");
          for (var n = 0; n < this.children.length; n++)
            this.children[n].onDeviceChange(t);
          this.placement.onDeviceChange(t), this.onAfterDeviceChange(t);
        }
      }),
      (i.prototype.onAfterDeviceChange = function(t) {}),
      (i.prototype.onResize = function(t, e, i) {
        if (this.isVisible || this.placement.alwaysResize) {
          for (var s = 0; s < this.children.length; s++)
            this.children[s].onResize(t, e, i);
          this.placement.onResize(t, e, i);
        }
      }),
      (i.prototype.getDevice = function(t, i) {
        var s = this.$layer.data(this.device + t);
        return s != e
          ? s
          : "desktopportrait" != this.device
          ? this.$layer.data("desktopportrait" + t)
          : i !== e
          ? i
          : 0;
      }),
      (i.prototype.get = function(t) {
        return this.$layer.data(t);
      }),
      (i.prototype.createLayerAnimations = function(t, e) {
        var i = [];
        if (!n2const.isBot) {
          new N2Classes.FrontendLayerAnimations(this.$layer);
          var s = new N2Classes.FrontendLayerAnimationManager(
            this.$layer,
            this.slide.getPerspective()
          );
          s.setEventBased(this.slide, t, e), s.hasAnimation() && i.push(s);
          for (var n = 0; n < this.children.length; n++)
            i.push.apply(i, this.children[n].createLayerAnimations(t, e));
        }
        return i;
      }),
      (i.prototype.getParallaxNodes = function() {
        var t = [];
        if (this.isVisible) {
          this.parallax && t.push(this.$layer[0]);
          for (var e = 0; e < this.children.length; e++)
            t.push.apply(t, this.children[e].getParallaxNodes());
        }
        return t;
      }),
      (i.prototype.addWrap = function(i, s) {
        if (this.wraps[i] === e) {
          var n = t(s);
          switch (i) {
            case "rotation":
              this.wraps.mask !== e
                ? n.appendTo(this.wraps.mask)
                : this.wraps.parallax !== e
                ? n.appendTo(this.wraps.parallax)
                : n.appendTo(this.$layer),
                n.append(this.getContents());
          }
          this.wraps[i] = n;
        }
        return n;
      }),
      (i.prototype.getContents = function() {
        return !1;
      }),
      i
    );
  }),
  N2D("FixedBackground", function(t, e) {
    var i = {
      _windowHeight: 0,
      $window: null,
      isStarted: !1,
      elements: [],
      start: function() {
        return this.isStarted
          ? !1
          : ((this.$window = t(window)),
            this.resize(),
            this.$window.on({
              "load.n2-ss-bg-parallax": t.proxy(this.resize, this),
              "resize.n2-ss-bg-parallax": t.proxy(this.resize, this)
            }),
            (this.onScroll = t.proxy(this.render, this)),
            document.addEventListener("scroll", this.onScroll, { passive: !0 }),
            (this.$extraScrollables = t(".n2-scrollable")),
            this.$extraScrollables.length &&
              this.$extraScrollables.on(
                "scroll.FixedBackground",
                t.proxy(this.onScroll, this)
              ),
            (this.isStarted = !0),
            !0);
      },
      end: function() {
        this.isStarted &&
          (this.$window.off(".n2-ss-bg-parallax"),
          document.removeEventListener("scroll", this.onScroll, {
            passive: !0
          }),
          this.$extraScrollables.length &&
            this.$extraScrollables.off(".FixedBackground"),
          (this.isStarted = !1));
      },
      addElement: function(t, e) {
        var i = { $animated: t, $parent: t.parent(), data: e, y: 0 };
        this.elements.push(i),
          NextendTween.set(t, {
            backfaceVisibility: "hidden",
            force3D: "true",
            transformStyle: "preserve-3d",
            "will-change": "transform"
          }),
          this.start() || this.renderElement(i);
      },
      removeElement: function(t) {
        for (var e = 0; e < this.elements.length; e++)
          if (this.elements[e].$animated === t) {
            this.elements.splice(e, 1);
            break;
          }
        0 === this.elements.length && this.end();
      },
      resize: function() {
        (this.windowHeight = t(window).height()), this.render();
      },
      render: function() {
        for (var t = 0; t < this.elements.length; t++)
          this.renderElement(this.elements[t]);
      },
      renderElement: function(t) {
        var e = t.$parent[0].getBoundingClientRect(),
          i = 0;
        if (
          (e.top < 0 || e.height > this.windowHeight
            ? (i = e.top / e.height)
            : e.bottom > this.windowHeight &&
              (i = (e.bottom - this.windowHeight) / e.height),
          1 >= i && i >= -1)
        ) {
          var s = i * (-t.data.strength * e.height) || 0;
          if (t.y !== s) {
            var n = 0;
            NextendTween.to(t.$animated, n, { y: s + "px" }), (t.y = s);
          }
        }
      }
    };
    return i;
  }),
  N2D("LayerParallax", function(t, e) {
    function i(e, i) {
      (this.ticking = !1),
        (this.active = !1),
        (this.mouseOrigin = !1),
        (this.parallaxedNodes = null),
        (this.parallaxedStaticSlideNodes = []),
        (this.parallaxedSlideNodes = null),
        (this._scrollCallback = !1),
        (this.firstStart = !0),
        (this.parameters = t.extend(
          {
            mode: "scroll",
            origin: "slider",
            is3D: !1,
            animate: !0,
            scrollmove: "both"
          },
          i
        )),
        /^((?!chrome|android).)*safari/i.test(navigator.userAgent) &&
          ((this.parameters.is3D = !1),
          e.sliderElement
            .find(".n2-ss-layers-container")
            .css({ "-webkit-perspective": "none", perspective: "none" })),
        (this.x = this.y = 0),
        (this.levels = {
          1: 0.01,
          2: 0.02,
          3: 0.05,
          4: 0.1,
          5: 0.2,
          6: 0.3,
          7: 0.4,
          8: 0.5,
          9: 0.6,
          10: 0.7
        }),
        this.parameters.is3D &&
          ((this.rotationX = this.rotationY = 0),
          (this.levelsDeg = {
            1: 2,
            2: 6,
            3: 10,
            4: 15,
            5: 20,
            6: 25,
            7: 30,
            8: 35,
            9: 40,
            10: 45
          })),
        this.parameters.animate && (this.render = this.animateRender),
        (this.window = t(window)),
        (this.slider = e),
        (this.sliderElement = e.sliderElement);
    }
    var s = (function(t) {
      var e =
        t.matches ||
        t.webkitMatchesSelector ||
        t.mozMatchesSelector ||
        t.msMatchesSelector;
      return function(t, i) {
        return e.call(t, i);
      };
    })(Element.prototype);
    return (
      (i.prototype.resize = function() {
        var t = this.sliderElement.offset(),
          e = this.slider.responsive.responsiveDimensions;
        (this.w2 = e.width / 2),
          (this.h2 = e.height / 2),
          (this.sliderOrigin = { x: t.left + this.w2, y: t.top + this.h2 }),
          "slider" == this.parameters.origin &&
            (this.mouseOrigin = this.sliderOrigin);
      }),
      (i.prototype.enable = function() {
        (this.active = !0),
          this.resize(),
          this.sliderElement.on({
            "SliderResize.n2-ss-parallax": t.proxy(this.resize, this)
          });
        var e = -1,
          i = -1;
        switch (
          ((this.mouseX = !1),
          (this.mouseY = !1),
          (this.scrollY = !1),
          this.parameters.horizontal)
        ) {
          case "mouse":
            this.mouseX = !0;
            break;
          case "mouse-invert":
            (this.mouseX = !0), (e = 1);
        }
        switch (this.parameters.vertical) {
          case "mouse":
            this.mouseY = !0;
            break;
          case "mouse-invert":
            (this.mouseY = !0), (i = 1);
            break;
          case "scroll":
            (this.scrollY = !0), (i = 1);
            break;
          case "scroll-invert":
            (this.scrollY = !0), (i = -1);
        }
        if (
          ((this.mouseX || this.mouseY) &&
            (this.sliderElement.on({
              "mouseenter.n2-ss-parallax": t.proxy(this.mouseEnter, this),
              "mousemove.n2-ss-parallax": t.proxy(this.mouseMove, this, e, i),
              "mouseleave.n2-ss-parallax": t.proxy(this.mouseLeave, this, !1)
            }),
            s(this.sliderElement[0], ":hover") && this.mouseEnter(!1)),
          this.scrollY)
        ) {
          var n = -1,
            r = 1;
          switch (this.parameters.scrollmove) {
            case "bottom":
              i > 0 ? (r = 0) : (n = 0);
              break;
            case "top":
              i > 0 ? (n = 0) : (r = 0);
          }
          (this._scrollCallback = t.proxy(this.scroll, this, i, n, r)),
            this.window.on({
              "scroll.n2-ss-parallax": this._scrollCallback,
              "resize.n2-ss-parallax": this._scrollCallback
            });
        }
      }),
      (i.prototype.disable = function() {
        this.sliderElement.off(".n2-ss-parallax"),
          this.window.off("scroll.n2-ss-parallax", this._scrollCallback),
          this.window.off("resize.n2-ss-parallax", this._scrollCallback),
          (this.active = !1);
      }),
      (i.prototype.start = function(e) {
        if (
          (null !== this.parallaxedSlideNodes && this.end(),
          this.firstStart &&
            (this.slider.staticSlide &&
              (this.parallaxedStaticSlideNodes = this.slider.staticSlide.getParallaxNodes()),
            (this.firstStart = !1)),
          (this.parallaxedSlideNodes = e.getParallaxNodes()),
          (this.parallaxedNodes = t.merge(
            t.merge([], this.parallaxedSlideNodes),
            this.parallaxedStaticSlideNodes
          )),
          this.parallaxedNodes.length)
        ) {
          if (this.parameters.is3D) {
            var i = this.slider.getPerspective();
            t.each(
              this.parallaxedNodes,
              t.proxy(function(t, e) {
                i > 0 &&
                  (n2const.isEdge
                    ? NextendTween.set(e.parentElement, {
                        transformPerspective: i
                      })
                    : NextendTween.set(e.parentElement, { perspective: i }));
              }, this)
            );
          }
          this.active || this.enable(),
            this._scrollCallback && this._scrollCallback();
        } else
          (this.parallaxedNodes = null),
            (this.parallaxedSlideNodes = null),
            this.active && this.disable();
      }),
      (i.prototype.end = function() {
        switch (this.parameters.mode) {
          case "mouse-scroll":
            this.mouseLeave(null, !0);
            break;
          case "scroll":
            break;
          default:
            this.mouseLeave(null, !0);
        }
        this.parallaxedNodes = null;
      }),
      (i.prototype.mouseEnter = function(t) {
        this.ticking ||
          (NextendTween.ticker.addEventListener("tick", this.tick, this),
          (this.ticking = !0),
          t &&
            "enter" == this.parameters.origin &&
            (this.mouseOrigin = { x: t.pageX, y: t.pageY }));
      }),
      (i.prototype.mouseMove = function(t, e, i) {
        this.mouseOrigin === !1 && (this.mouseOrigin = this.sliderOrigin),
          this.mouseX &&
            ((this.x = t * (i.pageX - this.mouseOrigin.x)),
            this.parameters.is3D && (this.rotationY = -this.x / this.w2)),
          this.mouseY &&
            ((this.y = e * (i.pageY - this.mouseOrigin.y)),
            this.parameters.is3D && (this.rotationX = this.y / this.h2));
      }),
      (i.prototype.mouseLeave = function(t, e) {
        this.ticking &&
          (NextendTween.ticker.removeEventListener("tick", this.tick, this),
          (this.ticking = !1));
        var i = {};
        this.mouseX && (i.x = 0),
          this.mouseY && (i.y = 0),
          this.parameters.is3D && (i.rotationX = i.rotationY = 0),
          NextendTween.to(
            e ? this.parallaxedSlideNodes : this.parallaxedNodes,
            2,
            i
          ),
          (this.mouseOrigin = this.sliderOrigin);
      }),
      (i.prototype.scroll = function(t, e, i) {
        var s = this.window.height(),
          n = this.window.scrollTop();
        n < this.sliderOrigin.y + this.h2 &&
          n + s > this.sliderOrigin.y - this.h2 &&
          ((this.y = Math.max(
            e,
            Math.min(
              i,
              -1 +
                (2 * (this.sliderOrigin.y - (n - this.h2))) / (s + 2 * this.h2)
            )
          )),
          this.sliderOrigin.y < s && (this.y = Math.min(0, this.y)),
          (this.y *= -t * this.h2 * 4),
          this.parameters.is3D && (this.rotationX = this.y / this.h2),
          this.draw(!1, !0));
      }),
      (i.prototype.draw = function(e, i) {
        if (this.parallaxedNodes)
          for (var s = 0; s < this.parallaxedNodes.length; s++) {
            var n = t(this.parallaxedNodes[s]).data("parallax"),
              r = this.levels[n],
              o = {};
            if (this.parameters.is3D) {
              var a = this.levelsDeg[n];
              (o.rotationX = this.rotationX * a),
                (o.rotationY = this.rotationY * a);
            }
            (o.x = this.x * r),
              (o.y = this.y * r),
              this.render(this.parallaxedNodes[s], o);
          }
      }),
      (i.prototype.render = function(t, e) {
        NextendTween.set(t, e);
      }),
      (i.prototype.animateRender = function(t, e) {
        NextendTween.to(t, 0.6, e);
      }),
      (i.prototype.tick = function() {
        this.draw(this.mouseX, this.mouseY);
      }),
      i
    );
  }),
  N2D("FrontendPlacement", function(t, e) {
    function i(t) {
      (this.layer = t), (this.alwaysResize = !1);
    }
    return (
      (i.prototype.start = function() {}),
      (i.prototype.onDeviceChange = function(t) {}),
      (i.prototype.onResize = function(t, e, i) {}),
      i
    );
  }),
  N2D("FrontendSliderSlide", ["FrontendComponentSlideAbstract"], function(
    t,
    e
  ) {
    function i(e, i, s) {
      (this.isStaticSlide = !1),
        (this.originalIndex = s),
        (this.index = s),
        (this.localIndex = s),
        (this.$element = i.data("slide", this)),
        (this.id = this.$element.data("id")),
        (this.background = !1),
        (this.slides = [this]),
        e.parameters.admin
          ? (this.minimumSlideDuration = 0)
          : ((this.minimumSlideDuration = i.data("slide-duration")),
            t.isNumeric(this.minimumSlideDuration) ||
              (this.minimumSlideDuration = 0));
      var n = i.find(".n2-ss-layers-container");
      N2Classes.FrontendComponentSlideAbstract.prototype.constructor.call(
        this,
        e,
        n
      );
    }
    return (
      (i.prototype = Object.create(
        N2Classes.FrontendComponentSlideAbstract.prototype
      )),
      (i.prototype.constructor = i),
      (i.prototype.init = function() {
        N2Classes.FrontendComponentSlideAbstract.prototype.init.call(this);
        var t = this.slider.findSlideBackground(this);
        t.length > 0 &&
          (this.slider.isAdmin
            ? (this.background = new N2Classes.SmartSliderSlideBackgroundAdmin(
                this,
                t,
                this.slider.backgrounds
              ))
            : (this.background = new N2Classes.SmartSliderSlideBackground(
                this,
                t,
                this.slider.backgrounds
              ))),
          this.$element.data("slideBackground", this.background);
      }),
      (i.prototype.setStarterSlide = function() {
        N2Classes.FrontendComponentSlideAbstract.prototype.setStarterSlide.call(
          this
        );
      }),
      (i.prototype.setIndex = function(t) {
        this.localIndex = this.index = t;
      }),
      (i.prototype.preLoad = function() {
        return this.background ? this.background.preLoad() : !0;
      }),
      (i.prototype.setPrevious = function(t) {
        this.previousSlide = t;
      }),
      (i.prototype.setNext = function(t) {
        (this.nextSlide = t), t.setPrevious(this);
      }),
      (i.prototype.hasBackgroundVideo = function() {
        return this.background.hasVideo();
      }),
      (i.prototype.getTitle = function() {
        return this.$element.data("title");
      }),
      (i.prototype.getDescription = function() {
        return this.$element.data("description");
      }),
      (i.prototype.getThumbnail = function() {
        return this.$element.data("thumbnail");
      }),
      (i.prototype.getThumbnailType = function() {
        return this.$element.data("thumbnail-type");
      }),
      (i.prototype.hasLink = function() {
        return !!this.$element.data("haslink");
      }),
      i
    );
  }),
  N2D("FrontendComponentSlideAbstract", ["FrontendComponent"], function(t, e) {
    function i(e, i) {
      (this.baseSize = 16),
        (this.slider = e),
        this.isCurrentlyEdited() ||
          ((this.status = s.NOT_INITIALIZED),
          N2Classes.FrontendComponent.prototype.constructor.call(
            this,
            this,
            this,
            i,
            i.find("> .n2-ss-layer, > .n2-ss-layer-group")
          ),
          this.slider.sliderElement.on({
            SliderDeviceOrientation: t.proxy(function(t, e) {
              this.onDeviceChange(e.device + e.orientation.toLowerCase());
            }, this),
            SliderResize: t.proxy(function(t, e, i) {
              this.onResize(e, i.responsiveDimensions);
            }, this)
          }),
          N2Classes.FrontendComponent.prototype.start.call(this));
    }
    var s = {
      NOT_INITIALIZED: -1,
      INITIALIZED: 0,
      READY_TO_START: 1,
      PLAYING: 2,
      ENDED: 3
    };
    return (
      (i.prototype = Object.create(N2Classes.FrontendComponent.prototype)),
      (i.prototype.constructor = i),
      (i.prototype.is = function(t) {
        return this === t;
      }),
      (i.prototype.isCurrentlyEdited = function() {
        return (
          this.slider.parameters.admin &&
          this.$element.hasClass("n2-ss-currently-edited-slide")
        );
      }),
      (i.prototype.trigger = function() {
        this.$element.trigger.apply(this.$element, [].slice.call(arguments));
      }),
      (i.prototype.triggerHandler = function() {
        return this.$element.triggerHandler.apply(
          this.$element,
          [].slice.call(arguments)
        );
      }),
      (i.prototype.init = function() {
        if (!this.isCurrentlyEdited()) {
          this.slider.sliderElement.on(
            "BeforeVisible",
            t.proxy(this.initLayerAnimations, this)
          );
          var e = this.$element.find('[data-device="1"]');
          this.slider.sliderElement.on(
            "SliderDeviceOrientation",
            t.proxy(function(t, i) {
              for (var s = 0; s < e.length; s++) {
                var n = e.eq(s);
                n.attr("src", n.data(i.device));
              }
            }, this)
          );
        }
      }),
      (i.prototype.refreshBaseSize = function(t) {}),
      (i.prototype.onResize = function(t, e) {
        for (var i = 0; i < this.children.length; i++)
          this.children[i].onResize(t, e, this.isStaticSlide);
      }),
      (i.prototype.hasLayers = function() {
        return this.children.length > 0;
      }),
      (i.prototype.onDeviceChange = function(t) {
        this.device = t;
        for (var e = 0; e < this.children.length; e++)
          this.children[e].onDeviceChange(t);
        this.placement.onDeviceChange(t);
      }),
      (i.prototype.setStarterSlide = function() {
        this.setStarterSlideAnimation();
      }),
      (i.prototype.initLayerAnimations = function() {
        (this.status = s.INITIALIZED),
          (this.playOnce =
            !this.slider.isAdmin && this.slider.parameters.layerMode.playOnce),
          this.refreshTimelines(),
          this.slider.sliderElement.on(
            "SliderResize",
            t.proxy(this.resize, this)
          ),
          this.isStaticSlide
            ? this.slider.visible(
                t.proxy(function() {
                  this.setStart(), this.playIn();
                }, this)
              )
            : this.$element
                .on("mainAnimationStartIn", t.proxy(this.setStart, this))
                .on("mainAnimationStartInCancel", t.proxy(this.reset, this));
      }),
      (i.prototype.setStarterSlideAnimation = function() {
        this.slider.isAdmin ||
          (this.slider.parameters.layerMode.playFirstLayer
            ? this.slider.visible(
                t.proxy(function() {
                  this.setStart(), this.playIn();
                }, this)
              )
            : this.slider.sliderElement.one(
                "BeforeVisible",
                t.proxy(function() {
                  this.setZeroAll();
                }, this)
              ));
      }),
      (i.prototype.resize = function(t, e, i, n) {
        n === !1 &&
          (this.animationsRefreshRatios(e),
          (this.status = s.INITIALIZED),
          this.isStaticSlide
            ? (this.setStart(), this.playIn())
            : this.slider.parameters.layerMode.playFirstLayer &&
              this.slider.currentSlide.is(this)
            ? (this.setStart(), this.playIn())
            : this.setZeroAll());
      }),
      (i.prototype.animationsRefreshRatios = function(t) {
        for (var e = 0; e < this.layerAnimations.length; e++)
          this.layerAnimations[e].refreshRatio(t.slideW, t.slideH);
      }),
      (i.prototype.refreshTimelines = function() {
        this.slider.isAdmin || this.slider.disableLayerAnimations === !1
          ? (this.layerAnimations = this.createLayerAnimations(
              this.slider.responsive.lastRatios.slideW,
              this.slider.responsive.lastRatios.slideH
            ))
          : (this.layerAnimations = []);
      }),
      (i.prototype.setZero = function() {
        this.$element.trigger("layerSetZero", this);
      }),
      (i.prototype.setZeroAll = function() {
        (this.status = s.INITIALIZED),
          this.$element.trigger("layerSetZeroAll", this);
      }),
      (i.prototype.setStart = function() {
        this.status == s.INITIALIZED &&
          (this.$element.trigger("layerAnimationSetStart"),
          (this.status = s.READY_TO_START));
      }),
      (i.prototype.playIn = function() {
        this.status == s.READY_TO_START &&
          ((this.status = s.PLAYING),
          this.$element.trigger("layerAnimationPlayIn"));
      }),
      (i.prototype.playOut = function() {
        if (this.status == s.PLAYING) {
          var e = [];
          this.$element.triggerHandler("beforeMainSwitch", [e]),
            t.when.apply(t, e).done(
              t.proxy(function() {
                this.onOutAnimationsPlayed();
              }, this)
            );
        } else this.onOutAnimationsPlayed();
      }),
      (i.prototype.onOutAnimationsPlayed = function() {
        this.playOnce ? (this.status = s.ENDED) : (this.status = s.INITIALIZED),
          this.$element.trigger("layerAnimationCompleteOut");
      }),
      (i.prototype.pause = function() {
        this.$element.triggerHandler("layerPause");
      }),
      (i.prototype.reset = function() {
        this.$element.triggerHandler("layerReset"),
          (this.status = s.INITIALIZED);
      }),
      (i.prototype.getTimeline = function() {
        for (
          var t = new NextendTimeline({ paused: 1 }), e = 0;
          e < this.layerAnimations.length;
          e++
        ) {
          var i = this.layerAnimations[e];
          t.add(i.linearTimeline, 0), i.linearTimeline.paused(!1);
        }
        return t;
      }),
      (i.prototype.getPerspective = function() {
        return this.slider.getPerspective();
      }),
      i
    );
  }),
  N2D("FrontendSliderStaticSlide", ["FrontendComponentSlideAbstract"], function(
    t,
    e
  ) {
    function i(t, e) {
      (this.isStaticSlide = !0),
        (this.$element = e.data("slide", this)),
        N2Classes.FrontendComponentSlideAbstract.prototype.constructor.call(
          this,
          t,
          e
        ),
        this.init();
    }
    return (
      (i.prototype = Object.create(
        N2Classes.FrontendComponentSlideAbstract.prototype
      )),
      (i.prototype.constructor = i),
      i
    );
  }),
  N2D("SmartSliderSlideBackgroundColor", function(t, e) {
    function i(t, e) {
      this.$el = e;
    }
    return (
      (i.prototype.getLoadedDeferred = function() {
        return !0;
      }),
      i
    );
  }),
  N2D("SmartSliderSlideBackgroundImage", function(t, e) {
    function i(e, i, s, n) {
      if (
        ((this.loadStarted = !1),
        (this.loadAllowed = !1),
        (this.slide = e),
        (this.manager = i),
        (this.background = s),
        (this.deferred = t.Deferred()),
        (this.$el = n),
        (this.opacity = n.data("opacity")),
        (this.blur = n.data("blur")),
        (this.x = n.data("x")),
        (this.y = n.data("y")),
        n.css("display", "none"),
        (this.$background = t('<div class="n2-ss-slide-background-image"/>')
          .css({
            backgroundPosition: this.x + "% " + this.y + "%",
            opacity: this.opacity / 100
          })
          .insertAfter(n)),
        "blurfit" === s.mode &&
          (window.n2FilterProperty
            ? ((this.$background = this.$background.add(
                this.$background.clone().insertAfter(this.$background)
              )),
              this.$background
                .first()
                .css({ margin: "-14px", padding: "14px" })
                .css(window.n2FilterProperty, "blur(7px)"))
            : (s.element.attr("data-mode", "fill"), (s.mode = "fill"))),
        window.n2FilterProperty &&
          (this.blur > 0
            ? this.$background
                .last()
                .css({
                  margin: "-" + 2 * this.blur + "px",
                  padding: 2 * this.blur + "px"
                })
                .css(window.n2FilterProperty, "blur(" + this.blur + "px)")
            : this.$background
                .last()
                .css({ margin: "", padding: "" })
                .css(window.n2FilterProperty, "")),
        n2const.isWaybackMachine())
      )
        this.mobileSrc = this.tabletSrc = this.desktopSrc = n.attr("src");
      else if (
        ((this.desktopSrc = n.data("desktop") || ""),
        (this.tabletSrc = n.data("tablet") || ""),
        (this.mobileSrc = n.data("mobile") || ""),
        n2const.isRetina)
      ) {
        var r = n.data("desktop-retina");
        r && (this.desktopSrc = r),
          (r = n.data("tablet-retina")),
          r && (this.tabletSrc = r),
          (r = n.data("mobile-retina")),
          r && (this.mobileSrc = r);
      }
    }
    return (
      (i.prototype.getLoadedDeferred = function() {
        return this.deferred;
      }),
      (i.prototype.preLoad = function() {
        (this.loadAllowed = !0),
          this.manager.deviceDeferred.done(
            t.proxy(function() {
              this.updateBackgroundToDevice(this.manager.device),
                this.$background.n2imagesLoaded(
                  { background: !0 },
                  t.proxy(function(t) {
                    var e = t.images[0].img;
                    switch (
                      ((this.width = e.naturalWidth),
                      (this.height = e.naturalHeight),
                      this.background.mode)
                    ) {
                      case "tile":
                      case "center":
                        n2const.devicePixelRatio > 1 &&
                          this.$background.css(
                            "background-size",
                            this.width / n2const.devicePixelRatio +
                              "px " +
                              this.height / n2const.devicePixelRatio +
                              "px"
                          );
                    }
                    this.deferred.resolve();
                  }, this)
                );
            }, this)
          );
      }),
      (i.prototype.updateBackgroundToDevice = function(t) {
        var e = this.desktopSrc;
        "mobile" === t.device
          ? this.mobileSrc
            ? (e = this.mobileSrc)
            : this.tabletSrc && (e = this.tabletSrc)
          : "tablet" === t.device && this.tabletSrc && (e = this.tabletSrc),
          e ? this.setSrc(e) : this.setSrc("");
      }),
      (i.prototype.setSrc = function(t) {
        this.loadAllowed &&
          t !== this.currentSrc &&
          ("" === t
            ? this.$background.css("background-image", "")
            : this.$background.css("background-image", 'url("' + t + '")'),
          (this.currentSrc = t));
      }),
      (i.prototype.fadeOut = function() {
        NextendTween.to(this.$background, 0.3, { opacity: 0 });
      }),
      i
    );
  }),
  N2D("SmartSliderSlideBackgroundVideo", function(t, e) {
    function i(e, i, n) {
      !e.slider.parameters["background.video.mobile"] && n2const.isPhone
        ? n.remove()
        : n2const.isVideoAutoplayAllowed()
        ? ((this.counter = s++),
          (this.slide = e),
          (this.slider = e.slider),
          (this.background = i),
          (this.isResized = !1),
          (this.$video = n),
          (this.isReady = !1),
          (this.state = { ready: !1, scroll: !1, slide: !1, ended: !1 }),
          (this.promise = !1),
          i.elements.image
            ? this.slider.visible(t.proxy(this.load, this))
            : this.load())
        : n.remove();
    }
    var s = 1;
    return (
      (i.prototype.load = function() {
        if (this.$video[0].videoWidth > 0) this.onReady();
        else {
          this.$video[0].addEventListener(
            "error",
            t.proxy(this.onError, this),
            !0
          ),
            this.$video[0].addEventListener(
              "canplay",
              t.proxy(this.onReady, this)
            ),
            this.$video[0].addEventListener(
              "loadedmetadata",
              t.proxy(this.onReady, this),
              !1
            ),
            this.$video[0].loop ||
              this.$video[0].addEventListener(
                "ended",
                t.proxy(this.onEnded, this),
                !1
              );
          var i = t.proxy(function() {
            setTimeout(
              t.proxy(function() {
                0 === this.$video[0].networkState && this.onError();
              }, this),
              100
            );
          }, this);
          this.$video[0].n2LoadStarted === e
            ? this.$video[0].addEventListener("loadstart", i, !0)
            : i(),
            this.$video[0].load(),
            this.safePlay();
        }
      }),
      (i.prototype.getLoadedDeferred = function() {
        return !0;
      }),
      (i.prototype.onReady = function(e) {
        if (!this.isReady) {
          this.isReady = !0;
          var i = this.$video;
          this.safePause(),
            i.data("ratio") ||
              (i[0].videoWidth > 0
                ? i.data("ratio", i[0].videoWidth / i[0].videoHeight)
                : i.data("ratio", i[0].offsetWidth / i[0].offsetHeight),
              i.addClass("n2-active"),
              this.slider.sliderElement.one(
                "BeforeVisible",
                t.proxy(this.onResize, this)
              ),
              this.slider.ready(
                t.proxy(function() {
                  this.slider.sliderElement.on(
                    "SliderResize",
                    t.proxy(this.onResize, this)
                  ),
                    this.isResized || this.onResize(),
                    this.setState("ready", !0, !0);
                }, this)
              )),
            -1 !==
              t.inArray(
                this.slide,
                this.slider.getVisibleSlides(this.slider.starterSlide)
              ) && this.setState("slide", !0, !0),
            this.slider.sliderElement.on({
              mainAnimationStart: t.proxy(function(e, i, s, n) {
                -1 ===
                t.inArray(
                  this.slide,
                  this.slider.getVisibleSlides(this.slider.slides[n])
                )
                  ? this.setState("slide", !1, !0)
                  : this.setState("slide", !0, !0);
              }, this),
              mainAnimationComplete: t.proxy(function(e, i, s, n) {
                -1 ===
                t.inArray(
                  this.slide,
                  this.slider.getVisibleSlides(this.slider.slides[n])
                )
                  ? this.setState("slide", !1, !0)
                  : this.setState("slide", !0, !0);
              }, this)
            }),
            N2Classes.ScrollTracker.add(
              this.slide.$element,
              "not-visible",
              t.proxy(function() {
                this.setState("scroll", !0, !0);
              }, this),
              t.proxy(function() {
                this.setState("scroll", !1, !0);
              }, this)
            );
        }
        (e && "canplay" !== e.type) || this.background.fadeOut();
      }),
      (i.prototype.onError = function() {
        this.$video.remove();
      }),
      (i.prototype.onResize = function() {
        if (!this.isResized) {
          var e = this.$video.data("background");
          e &&
            "" !== e &&
            t(
              '<div class="n2-ss-slide-bg-video-color-overlay" style="position:absolute;left:0;top:0;width:100%;height:100%;z-index:3;' +
                e +
                ';"/>'
            ).insertAfter(this.$video),
            (this.isResized = !0);
        }
        this.resizeVideo();
      }),
      (i.prototype.resizeVideo = function() {
        var t = this.$video,
          e = t.data("mode"),
          i = t.data("ratio"),
          s = this.slider.dimensions.slideouter || this.slider.dimensions.slide,
          n = s.width / s.height;
        "fill" === e
          ? n > i
            ? t.css({ width: "100%", height: "auto" })
            : t.css({ width: "auto", height: "100%" })
          : "fit" === e
          ? i > n
            ? t.css({ width: "100%", height: "auto" })
            : t.css({ width: "auto", height: "100%" })
          : t.css({ width: "", height: "" }),
          t.css("marginTop", 0).css(n2const.rtl.marginLeft, 0),
          this.center();
      }),
      (i.prototype.center = function() {
        var t = this.$video,
          e = t.parent();
        t.css({ marginTop: Math.round((e.height() - t.height()) / 2) }),
          t.css(
            n2const.rtl.marginLeft,
            Math.round((e.width() - t.width()) / 2)
          );
      }),
      (i.prototype.safeCallback = function(t) {
        this.promise && Promise !== e ? this.promise.then(t)["catch"](t) : t();
      }),
      (i.prototype.safePlay = function() {
        this.safeCallback(
          t.proxy(function() {
            (this.promise = this.$video[0].play()),
              this.promise &&
                Promise !== e &&
                this.promise["catch"](
                  t.proxy(function(e) {
                    if (e.message.match("interact")) {
                      var i = ".ssBackgroundVideo" + this.counter;
                      t("body")
                        .off(i)
                        .one(
                          "click" + i + " touchend" + i,
                          t.proxy(function() {
                            t("body").off(i),
                              this.promise !== !1 && this.safePlay();
                          }, this)
                        );
                    }
                  }, this)
                );
          }, this)
        );
      }),
      (i.prototype.safePause = function() {
        this.safeCallback(
          t.proxy(function() {
            this.$video[0].pause(), (this.promise = !1);
          }, this)
        );
      }),
      (i.prototype.onEnded = function() {
        this.setState("ended", !0, !0);
      }),
      (i.prototype.setState = function(t, e, i) {
        (i = i || !1),
          (this.state[t] = e),
          i &&
            (this.state.ready &&
            !this.state.ended &&
            this.state.slide &&
            this.state.scroll
              ? (this.safePlay(), this.$video.triggerHandler("n2playvideo"))
              : this.safePause());
      }),
      i
    );
  }),
  N2D("FrontendPlacementAbsolute", ["FrontendPlacement"], function(t, e) {
    function i(t) {
      return t.position();
    }
    function i(t) {
      return { left: t.prop("offsetLeft"), top: t.prop("offsetTop") };
    }
    function s(t) {
      (this.linked = []),
        (this.parentLayer = !1),
        (this.$parent = !1),
        N2Classes.FrontendPlacement.prototype.constructor.apply(
          this,
          arguments
        );
    }
    return (
      /(MSIE\ [0-7]\.\d+)/.test(navigator.userAgent),
      (s.prototype = Object.create(N2Classes.FrontendPlacement.prototype)),
      (s.prototype.constructor = s),
      (s.prototype.start = function() {
        var e = this.layer.get("parentid");
        e &&
          ((this.$parent = t("#" + e)),
          0 == this.$parent.length
            ? (this.$parent = !1)
            : ((this.parentLayer = this.$parent.data("layer")),
              this.parentLayer.placement.addLinked(this),
              (this.onResize = function() {})));
      }),
      (s.prototype.addLinked = function(t) {
        this.linked.push(t), (this.alwaysResize = !0);
      }),
      (s.prototype.onResize = s.prototype.onResizeLinked = function(t, e, s) {
        var n = this.layer.$layer,
          r = t.slideW,
          o = r,
          a = t.slideH,
          l = a;
        parseInt(this.layer.get("responsivesize")) || (o = l = 1),
          n.css("width", this.getWidth(o)),
          n.css("height", this.getHeight(l)),
          parseInt(this.layer.get("responsiveposition")) || (r = a = 1);
        var h = this.layer.getDevice("left") * r,
          d = this.layer.getDevice("top") * a,
          p = this.layer.getDevice("align"),
          c = this.layer.getDevice("valign"),
          u = { left: "auto", top: "auto", right: "auto", bottom: "auto" };
        if (this.$parent && this.$parent.data("layer").isVisible) {
          var m = i(this.$parent),
            f = { left: 0, top: 0 };
          switch (this.layer.getDevice("parentalign")) {
            case "right":
              f.left = m.left + this.$parent.width();
              break;
            case "center":
              f.left = m.left + this.$parent.width() / 2;
              break;
            default:
              f.left = m.left;
          }
          switch (p) {
            case "right":
              u.right = n.parent().width() - f.left - h + "px";
              break;
            case "center":
              u.left = f.left + h - n.width() / 2 + "px";
              break;
            default:
              u.left = f.left + h + "px";
          }
          switch (this.layer.getDevice("parentvalign")) {
            case "bottom":
              f.top = m.top + this.$parent.height();
              break;
            case "middle":
              f.top = m.top + this.$parent.height() / 2;
              break;
            default:
              f.top = m.top;
          }
          switch (c) {
            case "bottom":
              u.bottom = n.parent().height() - f.top - d + "px";
              break;
            case "middle":
              u.top = f.top + d - n.height() / 2 + "px";
              break;
            default:
              u.top = f.top + d + "px";
          }
        } else {
          switch (p) {
            case "right":
              u.right = -h + "px";
              break;
            case "center":
              u.left =
                (s ? n.parent().width() : e.slide.width) / 2 +
                h -
                n.width() / 2 +
                "px";
              break;
            default:
              u.left = h + "px";
          }
          switch (c) {
            case "bottom":
              u.bottom = -d + "px";
              break;
            case "middle":
              u.top =
                (s ? n.parent().height() : e.slide.height) / 2 +
                d -
                n.height() / 2 +
                "px";
              break;
            default:
              u.top = d + "px";
          }
        }
        n.css(u);
        for (var y = 0; y < this.linked.length; y++)
          this.linked[y].onResizeLinked(t, e, s);
      }),
      (s.prototype.getWidth = function(t) {
        var e = this.layer.getDevice("width");
        return this.isDimensionPropertyAccepted(e) ? e : e * t + "px";
      }),
      (s.prototype.getHeight = function(t) {
        var e = this.layer.getDevice("height");
        return this.isDimensionPropertyAccepted(e) ? e : e * t + "px";
      }),
      (s.prototype.isDimensionPropertyAccepted = function(t) {
        return !(!(t + "").match(/[0-9]+%/) && "auto" != t);
      }),
      s
    );
  }),
  N2D("FrontendPlacementContent", ["FrontendPlacement"], function(t, e) {
    function i(t) {
      N2Classes.FrontendPlacement.prototype.constructor.apply(this, arguments);
    }
    return (
      (i.prototype = Object.create(N2Classes.FrontendPlacement.prototype)),
      (i.prototype.constructor = i),
      i
    );
  }),
  N2D("FrontendPlacementDefault", ["FrontendPlacement"], function(t, e) {
    function i(t) {
      N2Classes.FrontendPlacement.prototype.constructor.apply(this, arguments);
    }
    return (
      (i.prototype = Object.create(N2Classes.FrontendPlacement.prototype)),
      (i.prototype.constructor = i),
      i
    );
  }),
  N2D("FrontendPlacementNormal", ["FrontendPlacement"], function(t, e) {
    function i(t) {
      N2Classes.FrontendPlacement.prototype.constructor.apply(this, arguments);
    }
    return (
      (i.prototype = Object.create(N2Classes.FrontendPlacement.prototype)),
      (i.prototype.constructor = i),
      (i.prototype.onDeviceChange = function() {
        this.updateMargin(),
          this.updateHeight(),
          this.updateMaxWidth(),
          this.updateSelfAlign();
      }),
      (i.prototype.updateMargin = function() {
        var t = this.layer.getDevice("margin").split("|*|"),
          e = t.pop(),
          i = this.layer.baseSize;
        if ("px+" == e && i > 0) {
          e = "em";
          for (var s = 0; s < t.length; s++) t[s] = parseInt(t[s]) / i;
        }
        this.layer.$layer.css("margin", t.join(e + " ") + e);
      }),
      (i.prototype.updateHeight = function() {
        var t = this.layer.getDevice("height"),
          e = "px";
        if (t > 0) {
          var i = this.layer.baseSize;
          i > 0 && ((e = "em"), (t = parseInt(t) / i)),
            this.layer.$layer.css("height", t + e);
        } else this.layer.$layer.css("height", "");
      }),
      (i.prototype.updateMaxWidth = function() {
        var t = parseInt(this.layer.getDevice("maxwidth"));
        0 >= t || isNaN(t)
          ? this.layer.$layer.css("maxWidth", "").attr("data-has-maxwidth", "0")
          : this.layer.$layer
              .css("maxWidth", t + "px")
              .attr("data-has-maxwidth", "1");
      }),
      (i.prototype.updateSelfAlign = function() {
        this.layer.$layer.attr(
          "data-cssselfalign",
          this.layer.getDevice("selfalign")
        );
      }),
      i
    );
  }),
  N2D("FrontendComponentCol", ["FrontendComponent"], function(t, e) {
    function i(t, e, i) {
      (this.$content = i.find(".n2-ss-layer-col:first")),
        N2Classes.FrontendComponent.prototype.constructor.call(
          this,
          t,
          e,
          i,
          this.$content.find("> .n2-ss-layer")
        );
    }
    return (
      (i.prototype = Object.create(N2Classes.FrontendComponent.prototype)),
      (i.prototype.constructor = i),
      (i.prototype.onDeviceChange = function(t) {
        N2Classes.FrontendComponent.prototype.onDeviceChange.apply(
          this,
          arguments
        ),
          this.updateOrder(),
          this.updatePadding(),
          this.updateInnerAlign(),
          this.updateMaxWidth();
      }),
      (i.prototype.updatePadding = function() {
        var t = this.getDevice("padding").split("|*|"),
          e = t.pop(),
          i = this.baseSize;
        if ("px+" === e && i > 0) {
          e = "em";
          for (var s = 0; s < t.length; s++) t[s] = parseInt(t[s]) / i;
        }
        this.$content.css("padding", t.join(e + " ") + e);
      }),
      (i.prototype.updateInnerAlign = function() {
        this.$layer.attr("data-csstextalign", this.getDevice("inneralign"));
      }),
      (i.prototype.updateMaxWidth = function() {
        var t = parseInt(this.getDevice("maxwidth"));
        0 >= t || isNaN(t)
          ? this.$layer.css("maxWidth", "").attr("data-has-maxwidth", "0")
          : this.$layer
              .css("maxWidth", t + "px")
              .attr("data-has-maxwidth", "1");
      }),
      (i.prototype.getWidthPercentage = function() {
        return parseFloat(this.$layer.data("colwidthpercent"));
      }),
      (i.prototype.getRealOrder = function() {
        var t = this.getDevice("order");
        return 0 == t ? 10 : t;
      }),
      (i.prototype.updateOrder = function() {
        var t = this.getDevice("order");
        0 == t ? this.$layer.css("order", "") : this.$layer.css("order", t);
      }),
      (i.prototype.getContents = function() {
        return this.$content;
      }),
      i
    );
  }),
  N2D("FrontendComponentContent", ["FrontendComponent"], function(t, e) {
    function i(t, e, i) {
      (this.$content = i.find("> .n2-ss-section-main-content")),
        N2Classes.FrontendComponent.prototype.constructor.call(
          this,
          t,
          e,
          i,
          this.$content.find("> .n2-ss-layer")
        );
    }
    return (
      (i.prototype = Object.create(N2Classes.FrontendComponent.prototype)),
      (i.prototype.constructor = i),
      (i.prototype.onDeviceChange = function(t) {
        N2Classes.FrontendComponent.prototype.onDeviceChange.apply(
          this,
          arguments
        ),
          this.updatePadding(),
          this.updateInnerAlign(),
          this.updateMaxWidth(),
          this.updateSelfAlign();
      }),
      (i.prototype.updatePadding = function() {
        var t = this.getDevice("padding").split("|*|"),
          e = t.pop(),
          i = this.baseSize;
        if ("px+" == e && i > 0) {
          e = "em";
          for (var s = 0; s < t.length; s++) t[s] = parseInt(t[s]) / i;
        }
        this.$content.css("padding", t.join(e + " ") + e);
      }),
      (i.prototype.updateInnerAlign = function() {
        this.$layer.attr("data-csstextalign", this.getDevice("inneralign"));
      }),
      (i.prototype.updateMaxWidth = function() {
        var t = parseInt(this.getDevice("maxwidth"));
        0 >= t || isNaN(t)
          ? this.$layer.css("maxWidth", "").attr("data-has-maxwidth", "0")
          : this.$layer
              .css("maxWidth", t + "px")
              .attr("data-has-maxwidth", "1");
      }),
      (i.prototype.updateSelfAlign = function() {
        this.$layer.attr("data-cssselfalign", this.getDevice("selfalign"));
      }),
      (i.prototype.getContents = function() {
        return this.$content;
      }),
      i
    );
  }),
  N2D("FrontendComponentGroup", ["FrontendComponent"], function(t, e) {
    function i(t, e, i) {
      N2Classes.FrontendComponent.prototype.constructor.call(
        this,
        t,
        e,
        i,
        i.find("> .n2-ss-layer")
      );
    }
    return (
      (i.prototype = Object.create(N2Classes.FrontendComponent.prototype)),
      (i.prototype.constructor = i),
      i
    );
  }),
  N2D("FrontendComponentLayer", ["FrontendComponent"], function(t, e) {
    function i(t, i, s) {
      N2Classes.FrontendComponent.prototype.constructor.call(this, t, i, s),
        this.wraps.mask !== e
          ? (this.$item = this.wraps.mask.children())
          : this.wraps.parallax !== e
          ? (this.$item = this.wraps.parallax.children())
          : (this.$item = s.children());
    }
    return (
      (i.prototype = Object.create(N2Classes.FrontendComponent.prototype)),
      (i.prototype.constructor = i),
      (i.prototype.getContents = function() {
        return this.$item;
      }),
      i
    );
  }),
  N2D("FrontendComponentRow", ["FrontendComponent"], function(t, e) {
    function i(t, e, i) {
      (this.$row = i.find(".n2-ss-layer-row:first")),
        (this.$rowInner = this.$row.find(".n2-ss-layer-row-inner:first")),
        N2Classes.FrontendComponent.prototype.constructor.call(
          this,
          t,
          e,
          i,
          this.$rowInner.find("> .n2-ss-layer")
        );
    }
    return (
      (i.prototype = Object.create(N2Classes.FrontendComponent.prototype)),
      (i.prototype.constructor = i),
      (i.prototype.onDeviceChange = function(t) {
        N2Classes.FrontendComponent.prototype.onDeviceChange.apply(
          this,
          arguments
        ),
          this.updatePadding(),
          this.updateGutter(),
          this.updateInnerAlign();
      }),
      (i.prototype.onAfterDeviceChange = function(t) {
        this.updateWrapAfter();
      }),
      (i.prototype.updatePadding = function() {
        var t = this.getDevice("padding").split("|*|"),
          e = t.pop(),
          i = this.baseSize;
        if ("px+" === e && i > 0) {
          e = "em";
          for (var s = 0; s < t.length; s++) t[s] = parseInt(t[s]) / i;
        }
        this.$row.css("padding", t.join(e + " ") + e);
      }),
      (i.prototype.updateInnerAlign = function() {
        this.$layer.attr("data-csstextalign", this.getDevice("inneralign"));
      }),
      (i.prototype.updateGutter = function() {
        var t = this.getDevice("gutter"),
          e = t / 2;
        if (this.children.length > 0)
          for (var i = this.children.length - 1; i >= 0; i--)
            this.children[i].$layer.css("margin", e + "px");
        this.$rowInner.css({
          width: "calc(100% + " + (t + 1) + "px)",
          margin: -e + "px"
        });
      }),
      (i.prototype.getSortedColumns = function() {
        for (
          var e = t.extend([], this.children).sort(function(t, e) {
              return t.getRealOrder() - e.getRealOrder();
            }),
            i = e.length - 1;
          i >= 0;
          i--
        )
          e[i].isVisible || e.splice(i, 1);
        return e;
      }),
      (i.prototype.updateWrapAfter = function() {
        var t = parseInt(this.getDevice("wrapafter")),
          e = this.getSortedColumns(),
          i = e.length,
          s = !1;
        if (0 === i) return !1;
        t > 0 && i > t && (s = !0), this.$row.attr("row-wrapped", s ? 1 : 0);
        var n;
        if (s) {
          var r = [];
          for (n = 0; i > n; n++) {
            var o = Math.floor(n / t);
            "undefined" == typeof r[o] && (r[o] = []),
              r[o].push(e[n]),
              e[n].$layer
                .attr("data-r", o)
                .toggleClass(
                  "n2-ss-last-in-row",
                  (n + 1) % t === 0 || n === i - 1
                );
          }
          var a = this.getDevice("gutter");
          for (n = 0; n < r.length; n++) {
            var l,
              h = r[n],
              d = 0;
            for (l = 0; l < h.length; l++) d += h[l].getWidthPercentage();
            for (l = 0; l < h.length; l++)
              h[l].$layer.css(
                "width",
                "calc(" +
                  (h[l].getWidthPercentage() / d) * 100 +
                  "% - " +
                  (n2const.isIE ? a + 1 : a) +
                  "px)"
              );
          }
        } else {
          var d = 0;
          for (n = 0; i > n; n++) d += e[n].getWidthPercentage();
          for (n = 0; i > n; n++)
            e[n].$layer
              .css("width", (e[n].getWidthPercentage() / d) * 100 + "%")
              .removeClass("n2-ss-last-in-row")
              .attr("data-r", 0);
          e[i - 1].$layer.addClass("n2-ss-last-in-row");
        }
      }),
      (i.prototype.getContents = function() {
        return this.$row;
      }),
      i
    );
  }),
  N2D("FrontendLayerAnimationManager", function(t, e) {
    function i(t, e) {
      (this.status = s.NOT_INITIALIZED),
        (this.inStatus = !1),
        (this.loopStatus = !1),
        (this.outStatus = !1),
        (this.namespace = "n2-ss-animations-" + i.index++),
        (this.skipLoop = 0),
        (this.$layer = t),
        (this.options = {
          repeatable: 0,
          transformOriginIn: "50% 50% 0",
          transformOriginOut: "50% 50% 0",
          inPlayEvent: "",
          loopPlayEvent: "",
          loopPauseEvent: "",
          loopStopEvent: "",
          outPlayEvent: "",
          loopRepeatSelfOnly: 0,
          instantOut: 1,
          startDelay: 0
        }),
        (this.$animatableElement = t);
      var n = t.data("animatableselector");
      n && (this.$animatableElement = t.find(n)),
        (this.perspective = e),
        t.data("LayerAnimation", this),
        this.perspective > 0 &&
          (n2const.isEdge
            ? NextendTween.set(this.$layer.parent(), {
                transformPerspective: this.perspective
              })
            : NextendTween.set(this.$layer.parent(), {
                perspective: this.perspective
              }));
    }
    var s = {
      NOT_INITIALIZED: -1,
      INITIALIZED: 1,
      INITIALIZED_REPEAT: 12,
      PLAY_IN_DISABLED: 2,
      PLAY_IN_STARTED: 3,
      PLAY_IN_PAUSED: 4,
      PLAY_IN_ENDED: 5,
      PLAY_LOOP_STARTED: 6,
      PLAY_LOOP_PAUSED: 7,
      PLAY_LOOP_ENDED: 8,
      PLAY_OUT_STARTED: 9,
      PLAY_OUT_PAUSED: 10,
      PLAY_OUT_ENDED: 11
    };
    return (
      (i.index = 1),
      (i.optimize = function(t) {
        return (
          t.opacity !== e && ((t.n2AutoAlpha = t.opacity), delete t.opacity), t
        );
      }),
      (i.optimizeTweenTo = function(t, e, s) {
        NextendTween.to(t, e, i.optimize(s));
      }),
      (i.optimizeTo = function(t, e, s, n, r) {
        t.to(e, s, i.optimize(n), r);
      }),
      (i.optimizeFromTo = function(t, e, s, n, r, o) {
        t.fromTo(e, s, i.optimize(n), i.optimize(r), o);
      }),
      (i.prototype.hasAnimation = function() {
        return this.inStatus || this.loopStatus || this.outStatus;
      }),
      (i.prototype.collectRelatedAnimations = function(t) {
        (t = t || {}),
          (this.relatedAnimations = { in: [], loop: [], out: [] }),
          (t.timelineMode = this.timelineMode),
          this.$layer.triggerHandler("collectRelatedAnimations", [
            this.relatedAnimations,
            this,
            t
          ]);
      }),
      (i.prototype.setEventBased = function(e, i, n) {
        (this.slide = e),
          (this.timelineMode = "event"),
          e.$element
            .on("layerSetZero." + this.namespace, t.proxy(this.setZero, this))
            .on(
              "layerSetZeroAll." + this.namespace,
              t.proxy(this.setZeroAll, this)
            )
            .on(
              "layerAnimationSetStart." + this.namespace,
              t.proxy(this.start, this)
            )
            .on("layerPause." + this.namespace, t.proxy(this.pause, this))
            .on("layerReset." + this.namespace, t.proxy(this.reset, this))
            .on(
              "beforeMainSwitch." + this.namespace,
              t.proxy(this.beforeMainSwitch, this)
            ),
          this.collectRelatedAnimations(),
          this.eventDrivenMode(i, n),
          (this.status = s.INITIALIZED);
      }),
      (i.prototype.setOptions = function(e) {
        this.options = t.extend(this.options, e);
      }),
      (i.prototype.eventDrivenMode = function(e, i) {
        this.subscribeEvent("mainAnimationStartIn", t.proxy(this.resume, this)),
          this.options.repeatable &&
            "" === this.options.inPlayEvent &&
            ((this.options.inPlayEvent = "layerAnimationPlayIn,OutComplete"),
            "" === this.options.loopPlayEvent &&
              (this.options.loopPlayEvent = "InComplete"),
            "" === this.options.outPlayEvent &&
              (this.options.outPlayEvent = "LoopComplete")),
          this.options.instantOut &&
            (this.options.outPlayEvent = "LoopComplete"),
          "" === this.options.inPlayEvent &&
            (this.options.inPlayEvent = "layerAnimationPlayIn"),
          "" === this.options.loopPlayEvent &&
            (this.options.loopPlayEvent = "InComplete"),
          (this.incoming = new N2Classes.AnimationsControllerIncoming(
            this,
            this.$animatableElement
          )),
          (this.inStatus = this.incoming.eventDriven(e, i)),
          this.subscribeEvent(
            this.options.inPlayEvent,
            t.proxy(this.playIn, this)
          ),
          (this.loop = new N2Classes.AnimationsControllerLoop(
            this,
            this.$layer
          )),
          (this.loopStatus = this.loop.eventDriven(e, i)),
          this.loopStatus
            ? (this.subscribeEvent(
                this.options.loopPlayEvent,
                t.proxy(this.playLoop, this)
              ),
              "" !== this.options.loopPauseEvent &&
                this.subscribeEvent(
                  this.options.loopPauseEvent + ".n2-ss-loop",
                  t.proxy(this.loop.pause, this.loop)
                ),
              "" !== this.options.loopStopEvent &&
                this.subscribeEvent(
                  this.options.loopStopEvent + ".n2-ss-loop",
                  t.proxy(this.loop.requestEnd, this.loop)
                ))
            : this.subscribeEvent(
                "InComplete",
                t.proxy(this.loopComplete, this)
              ),
          (this.outgoing = new N2Classes.AnimationsControllerOutgoing(
            this,
            this.$animatableElement
          )),
          (this.outStatus = this.outgoing.eventDriven(e, i)),
          this.outStatus
            ? this.subscribeEvent(
                this.options.outPlayEvent,
                t.proxy(this.playOut, this)
              )
            : this.subscribeEvent(
                "LoopComplete",
                t.proxy(this.outComplete, this)
              ),
          this.inStatus ||
            this.loopStatus ||
            this.outStatus ||
            this.slide.$element.off("." + this.namespace);
      }),
      (i.prototype.refreshRatio = function(t, e) {
        this.reset(),
          this.setZero(),
          (this.inStatus = this.incoming.refreshRatio(t, e)),
          (this.loopStatus = this.loop.refreshRatio(t, e)),
          (this.outStatus = this.outgoing.refreshRatio(t, e));
      }),
      (i.prototype.setLinear = function(t, e, i) {
        (this.timelineMode = "linear"),
          this.collectRelatedAnimations({ animations: t.animations.getData() });
        var n = this.linearMode(e, i);
        return (this.status = s.INITIALIZED), n;
      }),
      (i.prototype.linearMode = function(t, e) {
        var i;
        for (i = 0; i < this.relatedAnimations.out.length; i++)
          this.relatedAnimations.out[i].refresh(t, e);
        for (i = 0; i < this.relatedAnimations.loop.length; i++)
          this.relatedAnimations.loop[i].refresh();
        for (i = 0; i < this.relatedAnimations["in"].length; i++)
          this.relatedAnimations["in"][i].refresh(t, e);
        (this.linearTimeline = new NextendTimeline({ paused: 1 })),
          (this.incoming = new N2Classes.AnimationsControllerIncoming(
            this,
            this.$animatableElement
          ));
        var s = this.incoming.linear(t, e);
        s && this.linearTimeline.add(s),
          (this.loop = new N2Classes.AnimationsControllerLoop(
            this,
            this.$layer
          ));
        var n = this.loop.linear(t, e);
        n && this.linearTimeline.add(n),
          (this.outgoing = new N2Classes.AnimationsControllerOutgoing(
            this,
            this.$animatableElement
          ));
        var r = this.outgoing.linear(t, e);
        return r && this.linearTimeline.add(r), !0;
      }),
      (i.prototype.setZero = function() {
        this.$layer.triggerHandler("AnimationSetZero");
      }),
      (i.prototype.setZeroAll = function() {
        this.incoming.setZero(), this.setZero();
      }),
      (i.prototype.subscribeEvent = function(e, i) {
        for (var s = e.split(","), n = 0; n < s.length; n++)
          if (s[n].length) {
            var r = s[n].split("."),
              o = s[n];
            switch (r[0]) {
              case "InComplete":
              case "LoopComplete":
              case "OutComplete":
              case "LoopRoundComplete":
              case "LayerClick":
              case "LayerMouseEnter":
              case "LayerMouseLeave":
                o.match(/^Layer/) &&
                  (o = o.replace(/^Layer/, "").toLowerCase()),
                  this.$layer.on(o, i);
                break;
              case "mainAnimationStartIn":
              case "layerAnimationPlayIn":
              case "SlideMouseEnter":
              case "SlideMouseLeave":
              case "SlideClick":
                o.match(/^Slide/) &&
                  (o = o.replace(/^Slide/, "").toLowerCase()),
                  this.slide.$element.on(o, i);
                break;
              case "SliderMouseEnter":
              case "SliderMouseLeave":
              case "SliderClick":
                o.match(/^Slider/) &&
                  (o = o.replace(/^Slider/, "").toLowerCase()),
                  this.slide.slider.sliderElement.on(
                    o,
                    t.proxy(function(e) {
                      t.inArray(
                        this.slide,
                        this.slide.slider.getVisibleSlides()
                      ) >= 0 && i();
                    }, this)
                  );
                break;
              default:
                var a = !1,
                  l = { do: 0, cancel: 0 };
                this.slide.$element.on("ss" + o, function() {
                  l["do"] && clearTimeout(l["do"]),
                    (l["do"] = setTimeout(function() {
                      a || i(), (a = !1);
                    }, 50));
                }),
                  this.slide.$element.on("sscancel-" + o, function() {
                    (a = !0),
                      l.cancel && clearTimeout(l.cancel),
                      (l.cancel = setTimeout(function() {
                        a = !1;
                      }, 70));
                  });
            }
          }
      }),
      (i.prototype.start = function() {
        this.outgoing.start(),
          this.loop.start(),
          this.incoming.start(),
          (this.status = s.INITIALIZED);
      }),
      (i.prototype.playIn = function() {
        this.status === s.INITIALIZED_REPEAT &&
          (this.outgoing.prepareRepeat(),
          this.incoming.prepareRepeat(),
          this.loopStatus && this.loop.resetForReplay(),
          (this.status = s.INITIALIZED)),
          this.status === s.INITIALIZED
            ? ((this.status = s.PLAY_IN_STARTED), this.incoming.play())
            : this.status === s.PLAY_IN_STARTED
            ? this.skipLoop &&
              ((this.skipLoop = 0),
              this.$layer.off("InComplete.n2-instant-out"))
            : this.status === s.PLAY_OUT_STARTED
            ? (this.$layer.one(
                "OutComplete.n2-instant-in",
                t.proxy(function() {
                  this.playIn();
                }, this)
              ),
              this.outgoing.speedUp())
            : this.status === s.PLAY_LOOP_STARTED
            ? (this.$layer.one(
                "OutComplete.n2-instant-in",
                t.proxy(function() {
                  this.playIn();
                }, this)
              ),
              this.outgoing.speedUp())
            : this.status === s.PLAY_LOOP_ENDED &&
              (this.$layer.one(
                "OutComplete.n2-instant-in",
                t.proxy(function() {
                  this.playIn();
                }, this)
              ),
              this.outgoing.speedUp());
      }),
      (i.prototype.inComplete = function() {
        (this.status = s.PLAY_IN_ENDED),
          this.$layer.triggerHandler("InComplete");
      }),
      (i.prototype.playLoop = function() {
        this.status !== s.PLAY_IN_ENDED || this.skipLoop
          ? this.status === s.PLAY_LOOP_STARTED && this.loop.play()
          : ((this.status = s.PLAY_LOOP_STARTED), this.loop.play());
      }),
      (i.prototype.loopComplete = function() {
        1 !== this.options.loopRepeatSelfOnly || this.skipLoop
          ? ((this.status = s.PLAY_LOOP_ENDED),
            this.$layer.triggerHandler("LoopComplete"))
          : (this.loop.resetForReplay(), (this.status = s.PLAY_IN_ENDED));
      }),
      (i.prototype.playOut = function() {
        this.status === s.PLAY_IN_STARTED
          ? this.skipLoop ||
            ((this.skipLoop = 1),
            this.$layer.one(
              "InComplete.n2-instant-out",
              t.proxy(function() {
                (this.skipLoop = 0), this.loopComplete(), this._playOut();
              }, this)
            ))
          : this.status === s.PLAY_IN_ENDED
          ? (this.loopComplete(), this._playOut())
          : this.status === s.PLAY_LOOP_STARTED
          ? (this.$layer.off("OutComplete.n2-instant-in"),
            this.$layer.one("LoopComplete", t.proxy(this._playOut, this)),
            this.loop.requestEnd())
          : this.status === s.PLAY_LOOP_ENDED
          ? (this.$layer.off("OutComplete.n2-instant-in"), this._playOut())
          : this.status === s.PLAY_OUT_STARTED
          ? this.$layer.off("OutComplete.n2-instant-in")
          : this.$layer.off("OutComplete.n2-instant-in");
      }),
      (i.prototype._playOut = function() {
        this.status === s.PLAY_LOOP_ENDED &&
          ((this.status = s.PLAY_OUT_STARTED), this.outgoing.play());
      }),
      (i.prototype.outComplete = function() {
        this.options.repeatable &&
        (this.inStatus || this.loopStatus || this.outStatus)
          ? (this.status = s.INITIALIZED_REPEAT)
          : (this.status = s.PLAY_OUT_ENDED),
          this.$layer.triggerHandler("OutComplete");
      }),
      (i.prototype.beforeMainSwitch = function(t, e) {
        (this.status !== s.INITIALIZED &&
          this.status !== s.INITIALIZED_REPEAT) ||
          (this.status = s.PLAY_IN_DISABLED),
          e.push(this.end());
      }),
      (i.prototype.end = function() {
        if (
          this.status > s.PLAY_IN_DISABLED &&
          this.status < s.PLAY_OUT_ENDED
        ) {
          var e = t.Deferred();
          return (
            this.$layer.one(
              "OutComplete",
              t.proxy(function() {
                (this.status = s.PLAY_IN_DISABLED), e.resolve();
              }, this)
            ),
            this.playOut(),
            e
          );
        }
        return !0;
      }),
      (i.prototype.reset = function() {
        switch (this.status) {
          case s.PLAY_OUT_STARTED:
            this.outgoing.pause(0);
            break;
          case s.PLAY_LOOP_STARTED:
            this.loop.reset();
            break;
          case s.PLAY_IN_STARTED:
            this.incoming.pause(0);
        }
        this.status = s.INITIALIZED;
      }),
      (i.prototype.pause = function() {
        switch (((this.paused = !0), this.status)) {
          case s.INITIALIZED:
          case s.INITIALIZED_REPEAT:
            this.status = s.PLAY_IN_DISABLED;
            break;
          case s.PLAY_IN_STARTED:
            (this.status = s.PLAY_IN_PAUSED), this.incoming.pause();
            break;
          case s.PLAY_LOOP_STARTED:
            (this.status = s.PLAY_LOOP_PAUSED), this.loop.pause();
            break;
          case s.PLAY_OUT_STARTED:
            (this.status = s.PLAY_OUT_PAUSED), this.outgoing.pause();
        }
      }),
      (i.prototype.resume = function() {
        this.status === s.PLAY_IN_DISABLED
          ? (this.status = s.INITIALIZED)
          : this.status === s.PLAY_IN_PAUSED
          ? ((this.status = s.PLAY_IN_STARTED), this.incoming.resume())
          : this.status === s.PLAY_LOOP_PAUSED
          ? ((this.status = s.PLAY_LOOP_STARTED), this.loop.play())
          : this.status === s.PLAY_OUT_PAUSED &&
            ((this.status = s.PLAY_OUT_STARTED), this.outgoing.resume());
      }),
      i
    );
  }),
  N2D("AnimationsRelated", function(t, e) {
    function i(t, e, i) {
      (this._context = t), (this._extendName = e), (this._refreshName = i);
    }
    return (
      (i.prototype.extendTimeline = function(t, e, i, s) {
        this._context[this._extendName].apply(this._context, arguments);
      }),
      (i.prototype.refresh = function(t, e) {
        this._context[this._refreshName].call(this._context);
      }),
      i
    );
  }),
  N2D("FrontendLayerAnimations", function(t, e) {
    function i(e) {
      this.$layer = e;
      var i = e.data("animatableselector");
      i ? (this.$animatableElement = e.find(i)) : (this.$animatableElement = e),
        (this.currentZero = s),
        this.$layer
          .off(".layerAnimations")
          .on("AnimationSetZero.layerAnimations", t.proxy(this.setZero, this))
          .on(
            "collectRelatedAnimations.layerAnimations",
            t.proxy(this.collectRelatedAnimations, this)
          );
    }
    var s = {
      n2AutoAlpha: 1,
      x: 0,
      y: 0,
      z: 0,
      rotationX: 0,
      rotationY: 0,
      rotationZ: 0,
      scaleX: 1,
      scaleY: 1,
      scaleZ: 1,
      skewX: 0,
      n2blur: 0
    };
    return (
      (i.prototype.setZero = function() {
        NextendTween.set(
          this.$animatableElement,
          t.extend({ clearProps: "transform,n2blur" }, s)
        );
      }),
      (i.prototype.collectRelatedAnimations = function(i, s, n, r) {
        this.animationManager = n;
        var o = !1;
        if (r.animations !== e) o = r.animations;
        else {
          var a = this.$layer.data("animations");
          a && (o = t.parseJSON(N2Classes.Base64.decode(a)));
        }
        (this.specialZeroIn = 0),
          "object" == typeof o &&
            ((this.animations = t.extend(
              {
                repeatable: 0,
                in: [],
                specialZeroIn: 0,
                transformOriginIn: "50|*|50|*|0",
                inPlayEvent: "",
                loop: [],
                repeatCount: 0,
                repeatStartDelay: 0,
                transformOriginLoop: "50|*|50|*|0",
                loopPlayEvent: "",
                loopPauseEvent: "",
                loopStopEvent: "",
                loopRepeatSelfOnly: 0,
                out: [],
                transformOriginOut: "50|*|50|*|0",
                outPlayEvent: "",
                instantOut: 1
              },
              o
            )),
            (this.specialZeroIn = this.animations.specialZeroIn),
            n.setOptions({
              transformOriginIn:
                this.animations.transformOriginIn.split("|*|").join("% ") +
                "px",
              transformOriginOut:
                this.animations.transformOriginOut.split("|*|").join("% ") +
                "px",
              repeatable: this.animations.repeatable ? 1 : 0,
              instantOut: this.animations.instantOut ? 1 : 0,
              inPlayEvent: this.animations.inPlayEvent,
              loopPlayEvent: this.animations.loopPlayEvent,
              loopPauseEvent: this.animations.loopPauseEvent,
              loopStopEvent: this.animations.loopStopEvent,
              outPlayEvent: this.animations.outPlayEvent,
              loopRepeatSelfOnly: this.animations.loopRepeatSelfOnly ? 1 : 0
            }),
            this._fillAnimations(this.animations["in"]),
            this._fillAnimations(this.animations.loop),
            this._fillAnimations(this.animations.out),
            this.animations["in"] &&
              this.animations["in"].length &&
              s["in"].push(
                new N2Classes.AnimationsRelated(
                  this,
                  "extendTimelineIn",
                  "refreshIn"
                )
              ),
            this.animations.loop &&
              this.animations.loop.length &&
              s.loop.push(
                new N2Classes.AnimationsLayerLoop(
                  this,
                  this.$layer,
                  this.$animatableElement,
                  this.animations.loop,
                  this.animations.transformOriginLoop,
                  this.animations.repeatCount,
                  this.animations.repeatStartDelay
                )
              ),
            this.animations.out &&
              this.animations.out.length &&
              s.out.push(
                new N2Classes.AnimationsRelated(
                  this,
                  "extendTimelineOut",
                  "refreshOut"
                )
              ));
      }),
      (i.prototype._fillAnimations = function(e) {
        for (var i = 0; i < e.length; i++)
          e[i] = t.extend(
            {
              name: "Animation",
              duration: 0.8,
              delay: 0,
              ease: "easeOutCubic",
              opacity: 1,
              x: 0,
              y: 0,
              z: 0,
              rotationX: 0,
              rotationY: 0,
              rotationZ: 0,
              scaleX: 1,
              scaleY: 1,
              scaleZ: 1,
              skewX: 0,
              n2blur: 0
            },
            e[i]
          );
      }),
      (i.prototype.extendTimelineIn = function(t, e, i, s) {
        this.buildTimelineIn(t, this.animations["in"], i, s, e);
      }),
      (i.prototype.refreshIn = function() {}),
      (i.prototype.setCurrentZero = function() {
        var e = t.extend({}, this.currentZero);
        delete e.delay,
          delete e.duration,
          NextendTween.set(this.$animatableElement, e);
      }),
      (i.prototype.buildTimelineIn = function(e, i, s, n, r) {
        if (
          ((i = t.extend(!0, [], i)),
          this.specialZeroIn &&
            i.length > 0 &&
            ((this.currentZero = i.pop()),
            delete this.currentZero.name,
            delete this.currentZero.duration,
            delete this.currentZero.delay,
            delete this.currentZero.ease,
            (this.currentZero.x = this.currentZero.x * s),
            (this.currentZero.y = this.currentZero.y * n),
            (this.currentZero.rotationX = -this.currentZero.rotationX),
            (this.currentZero.rotationY = -this.currentZero.rotationY),
            (this.currentZero.rotationZ = -this.currentZero.rotationZ),
            this.setCurrentZero()),
          i.length > 0)
        ) {
          var o = this._buildAnimationChainIn(i, s, n);
          if (o.length > 0) {
            var a = 0;
            for (
              this.animationManager.setOptions({ startDelay: o[0].to.delay }),
                N2Classes.FrontendLayerAnimationManager.optimizeFromTo(
                  e,
                  this.$animatableElement,
                  o[a].duration,
                  o[a].from,
                  o[a].to,
                  r
                ),
                r += o[a].duration + o[a].to.delay,
                a++;
              a < o.length;
              a++
            )
              N2Classes.FrontendLayerAnimationManager.optimizeTo(
                e,
                this.$animatableElement,
                o[a].duration,
                o[a].to,
                r
              ),
                (r += o[a].duration + o[a].to.delay);
          }
        }
      }),
      (i.prototype._buildAnimationChainIn = function(e, i, s) {
        for (
          var n = [{ from: this.currentZero }], r = e.length - 1;
          r >= 0;
          r--
        ) {
          var o = t.extend(!0, {}, e[r]),
            a = o.delay,
            l = o.duration,
            h = o.ease;
          delete o.delay, delete o.duration, delete o.ease, delete o.name;
          var d = n[0].from;
          (o.x = -o.x * i),
            (o.y = -o.y * s),
            (o.z = -o.z),
            (o.rotationX = -o.rotationX),
            (o.rotationY = -o.rotationY),
            (o.rotationZ = -o.rotationZ),
            n.unshift({
              duration: l,
              from: o,
              to: t.extend({}, d, { ease: h, delay: a })
            });
        }
        return n.pop(), n;
      }),
      (i.prototype.extendTimelineOut = function(t, e, i, s) {
        this.buildTimelineOut(t, this.animations.out, i, s, 0);
      }),
      (i.prototype.refreshOut = function() {}),
      (i.prototype.buildTimelineOut = function(e, i, s, n, r) {
        i = t.extend(!0, [], i);
        var o = this._buildAnimationChainOut(i, s, n),
          a = 0;
        if (o.length > 0)
          for (
            0 !== r
              ? N2Classes.FrontendLayerAnimationManager.optimizeTo(
                  e,
                  this.$animatableElement,
                  o[a].duration,
                  o[a].to,
                  r
                )
              : N2Classes.FrontendLayerAnimationManager.optimizeFromTo(
                  e,
                  this.$animatableElement,
                  o[a].duration,
                  o[a].from,
                  o[a].to,
                  r
                ),
              r += o[a].duration + o[a].to.delay,
              a++;
            a < o.length;
            a++
          )
            N2Classes.FrontendLayerAnimationManager.optimizeTo(
              e,
              this.$animatableElement,
              o[a].duration,
              o[a].to,
              r
            ),
              (r += o[a].duration + o[a].to.delay);
      }),
      (i.prototype._buildAnimationChainOut = function(e, i, s) {
        for (var n = [{ to: this.currentZero }], r = 0; r < e.length; r++) {
          var o = t.extend(!0, {}, e[r]),
            a = o.duration;
          delete o.duration, delete o.name;
          var l = t.extend({ immediateRender: !1 }, n[n.length - 1].to);
          delete l.delay,
            delete l.ease,
            (o.x = o.x * i),
            (o.y = o.y * s),
            n.push({ duration: a, from: l, to: o });
        }
        return n.shift(), n;
      }),
      i
    );
  }),
  N2D("AnimationsControllerIncoming", function(t, e) {
    function i(t, e) {
      (this.hasAnimation = !1),
        (this.animationManager = t),
        (this.$animatableElement = e);
    }
    return (
      (i.prototype.setTransformOrigin = function() {
        NextendTween.set(this.$animatableElement, {
          transformOrigin: this.animationManager.options.transformOriginIn
        });
      }),
      (i.prototype.prepareRepeat = function() {
        this.hasAnimation
          ? (this.inTimeline.invalidate(),
            this.inTimeline.pause(this.animationManager.options.startDelay))
          : this.setTransformOrigin();
      }),
      (i.prototype.start = function() {
        this.hasAnimation && this.inTimeline.progress(0.9999).pause(0, !1);
      }),
      (i.prototype.play = function() {
        this.hasAnimation ? this.inTimeline.play() : this.inComplete();
      }),
      (i.prototype.resume = function() {
        this.inTimeline.play();
      }),
      (i.prototype.pause = function(t) {
        this.hasAnimation && this.inTimeline.pause(t);
      }),
      (i.prototype.inComplete = function() {
        this.animationManager.inComplete();
      }),
      (i.prototype.eventDriven = function(e, i) {
        this.inTimeline = new NextendTimeline({
          paused: 1,
          onComplete: t.proxy(this.inComplete, this)
        });
        for (
          var s = 0;
          s < this.animationManager.relatedAnimations["in"].length;
          s++
        )
          this.animationManager.relatedAnimations["in"][s].extendTimeline(
            this.inTimeline,
            0,
            e,
            i
          );
        return this.inTimeline.totalDuration()
          ? (this.inTimeline.set(
              this.$animatableElement,
              {
                transformOrigin: this.animationManager.options
                  .transformOriginIn,
                immediateRender: !0
              },
              0
            ),
            (this.hasAnimation = !0),
            !0)
          : ((this.inTimeline = null), !1);
      }),
      (i.prototype.linear = function(t, e) {
        for (
          var i = new NextendTimeline(), s = 0;
          s < this.animationManager.relatedAnimations["in"].length;
          s++
        )
          this.animationManager.relatedAnimations["in"][s].extendTimeline(
            i,
            0,
            t,
            e
          );
        return i.totalDuration()
          ? (i.set(
              this.$animatableElement,
              {
                transformOrigin: this.animationManager.options
                  .transformOriginIn,
                immediateRender: !0
              },
              0
            ),
            i)
          : !1;
      }),
      (i.prototype.refreshRatio = function(e, i) {
        this.inTimeline = new NextendTimeline({
          paused: 1,
          onComplete: t.proxy(this.inComplete, this)
        });
        for (
          var s = 0;
          s < this.animationManager.relatedAnimations["in"].length;
          s++
        )
          this.animationManager.relatedAnimations["in"][s].refresh(e, i),
            this.animationManager.relatedAnimations["in"][s].extendTimeline(
              this.inTimeline,
              0,
              e,
              i
            );
        return this.inTimeline.totalDuration()
          ? ((this.hasAnimation = !0), !0)
          : ((this.hasAnimation = !1), !1);
      }),
      (i.prototype.setZero = function() {
        this.hasAnimation && this.inTimeline.progress(1);
      }),
      i
    );
  }),
  N2D("AnimationsControllerLoop", function(t, e) {
    function i(t, e) {
      (this.status = i.status.NOT_INITIALIZED),
        (this.animationManager = t),
        (this.$layer = e);
    }
    return (
      (i.status = {
        NOT_INITIALIZED: -1,
        INITIALIZED: 1,
        PLAYING: 2,
        PAUSED: 3,
        ENDING: 4,
        ENDED: 5
      }),
      (i.prototype.refreshRatio = function(t, e) {
        for (var s = 0; s < this.animations.length; s++)
          this.animations[s].refreshRatio(t, e);
        this.status = i.status.INITIALIZED;
      }),
      (i.prototype.start = function() {
        this.status === i.status.ENDED && (this.status = i.status.INITIALIZED);
      }),
      (i.prototype.reset = function() {
        for (var t = 0; t < this.animations.length; t++)
          this.animations[t].reset();
        this.status = i.status.INITIALIZED;
      }),
      (i.prototype.play = function() {
        if (
          this.status === i.status.INITIALIZED ||
          this.status === i.status.PAUSED
        ) {
          for (var t = 0; t < this.animations.length; t++)
            this.animations[t].play();
          this.status = i.status.PLAYING;
        }
      }),
      (i.prototype.pause = function() {
        if (this.status === i.status.PLAYING) {
          for (var t = 0; t < this.animations.length; t++)
            this.animations[t].pause();
          this.status = i.status.PAUSED;
        }
      }),
      (i.prototype.requestEnd = function() {
        if (
          this.status === i.status.PLAYING ||
          this.status === i.status.PAUSED
        ) {
          for (var t = 0; t < this.animations.length; t++)
            this.animations[t].requestEnd();
          this.status = i.status.ENDING;
        }
      }),
      (i.prototype.markSingleAnimationEnded = function() {
        for (var t = 0; t < this.animations.length; t++)
          if (!this.animations[t].isEnded()) return;
        this.ended();
      }),
      (i.prototype.ended = function() {
        (this.status = i.status.ENDED), this.animationManager.loopComplete();
      }),
      (i.prototype.resetForReplay = function() {
        for (var t = 0; t < this.animations.length; t++)
          this.animations[t].resetForReplay();
        this.status = i.status.INITIALIZED;
      }),
      (i.prototype.eventDriven = function(t, e) {
        this.animations = [];
        for (
          var i = 0;
          i < this.animationManager.relatedAnimations.loop.length;
          i++
        )
          (this.animationManager.relatedAnimations.loop[i].controller = this),
            this.animations.push(
              this.animationManager.relatedAnimations.loop[i]
            );
        return this.refreshRatio(t, e), !!this.animations.length;
      }),
      (i.prototype.linear = function(t, e) {
        var i = new NextendTimeline();
        this.animations = [];
        for (
          var s = 0;
          s < this.animationManager.relatedAnimations.loop.length;
          s++
        )
          this.animations.push(this.animationManager.relatedAnimations.loop[s]);
        for (var s = 0; s < this.animations.length; s++)
          this.animations[s].linear(i, t, e);
        return i.totalDuration() ? i : !1;
      }),
      i
    );
  }),
  N2D("AnimationsLayerLoop", ["AnimationsLoopAbstract"], function(t, e) {
    function i(t, e, s, n, r, o, a) {
      (this.status = i.status.NOT_INITIALIZED),
        (this.layerAnimations = t),
        (this.$layer = e),
        (this.$animatableElement = s),
        (this.animationData = n),
        (this.transformOrigin = r.split("|*|").join("% ") + "px"),
        (this.repeatCount = o),
        (this.repeatStartDelay = Math.max(0, a)),
        (this.single = !1),
        N2Classes.AnimationsLoopAbstract.prototype.constructor.call(
          this,
          parseInt(this.repeatCount)
        ),
        (this.inAnimation = null),
        (this.timeline = null),
        (this.outAnimation = null);
    }
    return (
      (i.prototype = Object.create(N2Classes.AnimationsLoopAbstract.prototype)),
      (i.prototype.constructor = i),
      (i.status = {
        NOT_INITIALIZED: -1,
        INITIALIZED: 1,
        PLAY_IN_STARTED: 2,
        PLAY_IN_PAUSED: 3,
        PLAY_IN_ENDED: 4,
        PLAY_LOOP_STARTED: 5,
        PLAY_LOOP_PAUSED: 6,
        PLAY_LOOP_ENDED: 7,
        PLAY_OUT_STARTED: 8,
        PLAY_OUT_PAUSED: 9,
        PLAY_OUT_ENDED: 10
      }),
      (i.prototype.refreshRatio = function(e, s) {
        (this.timeline = new NextendTimeline({
          paused: !0,
          onComplete: t.proxy(function() {
            this.repeat() ||
              ((this.status = i.status.PLAY_LOOP_ENDED), this._playOut());
          }, this)
        })),
          this.buildTimelineLoop(t.extend(!0, [], this.animationData), e, s),
          (this.status = i.status.INITIALIZED);
      }),
      (i.prototype.linear = function(e, i, s) {
        var n = t.extend(!0, [], this.animationData);
        this.timeline = new NextendTimeline();
        var r = this._buildAnimationChainLoop(n, i, s);
        if (
          ((this.zero = t.extend(!0, {}, r[0])),
          this.timeline.delay(this.repeatStartDelay),
          this.timeline.set(this.$animatableElement, {
            transformOrigin: this.transformOrigin
          }),
          !this.single)
        ) {
          var o = t.extend({}, this.zero.from);
          N2Classes.FrontendLayerAnimationManager.optimizeTo(
            this.timeline,
            this.$animatableElement,
            this.zero.duration / 2,
            o
          );
        }
        var a = this.repeatCount;
        1 > a && (a = 1);
        for (var l = 0; a > l; l++)
          for (var h = 0; h < r.length; h++)
            N2Classes.FrontendLayerAnimationManager.optimizeFromTo(
              this.timeline,
              this.$animatableElement,
              r[h].duration,
              t.extend({ immediateRender: !1 }, r[h].from),
              t.extend({}, r[h].to)
            );
        this.single ||
          N2Classes.FrontendLayerAnimationManager.optimizeTo(
            this.timeline,
            this.$animatableElement,
            this.zero.duration / 2,
            t.extend({}, this.layerAnimations.currentZero)
          ),
          e.add(this.timeline, 0);
      }),
      (i.prototype.reset = function() {
        this.outAnimation && this.outAnimation.pause(0),
          this.timeline.pause(0),
          this.inAnimation && this.inAnimation.pause(0),
          (this.status = i.status.INITIALIZED);
      }),
      (i.prototype.play = function() {
        switch (this.status) {
          case i.status.INITIALIZED:
          case i.status.PLAY_OUT_ENDED:
            this._playIn();
            break;
          case i.status.PLAY_IN_PAUSED:
            (this.status = i.status.PLAY_IN_STARTED), this.inAnimation.play();
            break;
          case i.status.PLAY_LOOP_PAUSED:
            (this.status = i.status.PLAY_LOOP_STARTED), this.timeline.play();
            break;
          case i.status.PLAY_OUT_PAUSED:
            (this.status = i.status.PLAY_OUT_STARTED), this.outAnimation.play();
        }
      }),
      (i.prototype.pause = function() {
        switch (this.status) {
          case i.status.PLAY_IN_STARTED:
            (this.status = i.status.PLAY_IN_PAUSED), this.inAnimation.pause();
            break;
          case i.status.PLAY_LOOP_STARTED:
            (this.status = i.status.PLAY_LOOP_PAUSED), this.timeline.pause();
            break;
          case i.status.PLAY_OUT_STARTED:
            (this.status = i.status.PLAY_OUT_PAUSED), this.outAnimation.pause();
        }
      }),
      (i.prototype.requestEnd = function() {
        if (!this.endingDeferred)
          switch (((this.endingDeferred = t.Deferred()), this.status)) {
            case i.status.PLAY_OUT_PAUSED:
              this.outAnimation.play();
              break;
            case i.status.PLAY_IN_PAUSED:
              this.inAnimation.play();
              break;
            case i.status.PLAY_LOOP_PAUSED:
              this.timeline.play();
          }
        return this.endingDeferred;
      }),
      (i.prototype._playIn = function() {
        if (
          ((this.endingDeferred = !1),
          NextendTween.set(this.$animatableElement, {
            transformOrigin: this.transformOrigin
          }),
          this.single)
        )
          this.timeline.delay(this.repeatStartDelay), this._playInCompleted();
        else {
          this.status = i.status.PLAY_IN_STARTED;
          var e = t.extend({}, this.zero.from);
          (e.delay = this.repeatStartDelay),
            (e.onComplete = t.proxy(this._playInCompleted, this)),
            (this.inAnimation = N2Classes.FrontendLayerAnimationManager.optimizeTweenTo(
              this.$animatableElement,
              this.zero.duration / 2,
              e
            ));
        }
      }),
      (i.prototype._playInCompleted = function() {
        (this.status = i.status.PLAY_IN_ENDED), this._playLoop();
      }),
      (i.prototype._playLoop = function() {
        this.status === i.status.PLAY_IN_ENDED &&
          ((this.status = i.status.PLAY_LOOP_STARTED),
          this.resetCounter(),
          this.timeline.restart(!0));
      }),
      (i.prototype.resetForReplay = function() {
        (this.status = i.status.INITIALIZED), this.resetCounter();
      }),
      (i.prototype._repeat = function() {
        this.timeline.restart(),
          this.$layer.triggerHandler("LoopRoundComplete");
      }),
      (i.prototype._playOut = function() {
        if (this.status === i.status.PLAY_LOOP_ENDED)
          if (this.single) this._playOutCompleted();
          else {
            this.status = i.status.PLAY_OUT_STARTED;
            var e = t.extend({}, this.layerAnimations.currentZero);
            (e.onComplete = t.proxy(this._playOutCompleted, this)),
              (this.outAnimation = N2Classes.FrontendLayerAnimationManager.optimizeTweenTo(
                this.$animatableElement,
                this.zero.duration / 2,
                e
              ));
          }
      }),
      (i.prototype._playOutCompleted = function() {
        (this.status = i.status.PLAY_OUT_ENDED),
          this.endingDeferred || (this.endingDeferred = t.Deferred()),
          this.endingDeferred.resolve(),
          this.controller.markSingleAnimationEnded();
      }),
      (i.prototype.buildTimelineLoop = function(e, i, s) {
        var n = this._buildAnimationChainLoop(e, i, s);
        this.zero = t.extend(!0, {}, n[0]);
        for (var r = 0; r < n.length; r++)
          N2Classes.FrontendLayerAnimationManager.optimizeTo(
            this.timeline,
            this.$animatableElement,
            n[r].duration,
            n[r].to
          );
      }),
      (i.prototype._buildAnimationChainLoop = function(e, i, s) {
        if (1 === e.length) {
          this.single = !0;
          var n = t.extend(!0, {}, e[0]),
            r = t.extend({}, this.layerAnimations.currentZero);
          (r.duration = n.duration),
            (r.ease = n.ease),
            (360 !== Math.abs(n.rotationX) &&
              360 !== Math.abs(n.rotationY) &&
              360 !== Math.abs(n.rotationZ)) ||
            1 != n.opacity ||
            0 != n.x ||
            0 != n.y ||
            0 != n.z ||
            1 != n.scaleX ||
            1 != n.scaleY ||
            1 != n.scaleZ ||
            0 != n.skewX ||
            0 != n.n2blur
              ? e.push(r)
              : (360 == n.rotationX
                  ? (n.rotationX = "+=360")
                  : -360 == n.rotationX && (n.rotationX = "-=360"),
                360 == n.rotationY
                  ? (n.rotationY = "+=360")
                  : -360 == n.rotationY && (n.rotationY = "-=360"),
                360 == n.rotationZ
                  ? (n.rotationZ = "+=360")
                  : -360 == n.rotationZ && (n.rotationZ = "-=360"));
        }
        var o = 0;
        delete e[o].name, (e[o].x = e[o].x * i), (e[o].y = e[o].y * s);
        var a = [
          {
            duration: e[o].duration,
            from: t.extend({}, this.layerAnimations.currentZero),
            to: e[o]
          }
        ];
        for (o++; o < e.length; o++) {
          var r = e[o],
            l = r.duration;
          delete r.duration, delete r.name;
          var h = t.extend({}, a[a.length - 1].to);
          delete h.delay,
            delete h.ease,
            (r.x = r.x * i),
            (r.y = r.y * s),
            a.push({ duration: l, from: h, to: r });
        }
        return (
          this.single ||
            (a.push({
              duration: a[0].duration,
              from: t.extend({}, a[a.length - 1].to),
              to: t.extend({}, a[0].to)
            }),
            a.shift(),
            delete a[0].from.duration),
          a
        );
      }),
      i
    );
  }),
  N2D("AnimationsLoopTimeline", ["AnimationsLoopAbstract"], function(t, e) {
    function i(t, e) {
      (this.status = i.status.NOT_INITIALIZED),
        (this.manager = t),
        N2Classes.AnimationsLoopAbstract.prototype.constructor.call(this, e);
    }
    return (
      (i.prototype = Object.create(N2Classes.AnimationsLoopAbstract.prototype)),
      (i.prototype.constructor = i),
      (i.status = {
        NOT_INITIALIZED: -1,
        INITIALIZED: 1,
        PLAYING: 2,
        PAUSED: 3,
        ENDED: 4
      }),
      (i.prototype.refreshRatio = function(e, s) {
        (this.timeline = this.manager.getLoopTimeline()),
          this.timeline.eventCallback(
            "onComplete",
            t.proxy(this.onComplete, this)
          ),
          (this.status = i.status.INITIALIZED);
      }),
      (i.prototype.linear = function(t, e, i) {
        (this.timeline = this.manager.getLoopTimeline()),
          (this.repeatCount = 0),
          t.add(this.timeline, 0),
          this.timeline.paused(!1);
      }),
      (i.prototype.refresh = function() {
        this.timeline && this.timeline.progress(0.9999).pause(0, !1);
      }),
      (i.prototype.onComplete = function() {
        this.repeat() ||
          ((this.status = i.status.ENDED),
          this.endingDeferred || (this.endingDeferred = t.Deferred()),
          this.endingDeferred.resolve(),
          this.controller.markSingleAnimationEnded());
      }),
      (i.prototype.reset = function() {
        this.timeline.pause(0), (this.status = i.status.INITIALIZED);
      }),
      (i.prototype.play = function() {
        switch (this.status) {
          case i.status.INITIALIZED:
          case i.status.ENDED:
            (this.endingDeferred = !1),
              (this.status = i.status.PLAYING),
              this.resetCounter(),
              this.timeline.restart(!0);
            break;
          case i.status.PAUSED:
            (this.status = i.status.PLAYING), this.timeline.play();
        }
      }),
      (i.prototype.pause = function() {
        switch (this.status) {
          case i.status.PLAYING:
            (this.status = i.status.PAUSED), this.timeline.pause();
        }
      }),
      (i.prototype.requestEnd = function() {
        if (!this.endingDeferred)
          switch (((this.endingDeferred = t.Deferred()), this.status)) {
            case i.status.PLAY_LOOP_PAUSED:
              this.timeline.play();
          }
        return this.endingDeferred;
      }),
      (i.prototype.resetForReplay = function() {
        (this.status = i.status.INITIALIZED), this.resetCounter();
      }),
      (i.prototype._repeat = function() {
        this.timeline.restart();
      }),
      i
    );
  }),
  N2D("AnimationsLoopAbstract", function(t, e) {
    function i(t) {
      (this.controller = null),
        (this.endingDeferred = !1),
        (this._counter = 0),
        (this.repeatCount = t);
    }
    return (
      (i.prototype.repeat = function() {
        return (
          this._counter++,
          (this.isInfinite() && this.endingDeferred === !1) ||
          this._counter < this.repeatCount
            ? (this._repeat(), !0)
            : !1
        );
      }),
      (i.prototype._repeat = function() {}),
      (i.prototype.resetCounter = function() {
        this._counter = 0;
      }),
      (i.prototype.isInfinite = function() {
        return 0 === this.repeatCount;
      }),
      (i.prototype.refreshRatio = function(t, e) {}),
      (i.prototype.refresh = function() {}),
      (i.prototype.reset = function() {}),
      (i.prototype.play = function() {}),
      (i.prototype.pause = function() {}),
      (i.prototype.isEnded = function() {
        return !(
          !this.endingDeferred || "resolved" !== this.endingDeferred.state()
        );
      }),
      (i.prototype.requestEnd = function() {}),
      (i.prototype.resetForReplay = function() {}),
      (i.prototype.linear = function(t, e, i) {}),
      i
    );
  }),
  N2D("AnimationsControllerOutgoing", function(t, e) {
    function i(t, e) {
      (this.hasAnimation = !1),
        (this.animationManager = t),
        (this.$animatableElement = e);
    }
    return (
      (i.prototype.prepareRepeat = function() {
        this.hasAnimation &&
          (this.outTimeline.invalidate(), this.outTimeline.pause(0));
      }),
      (i.prototype.start = function() {
        this.hasAnimation &&
          (this.animationManager.inStatus && this.outTimeline.progress(0.9999),
          this.outTimeline.pause(0, !1));
      }),
      (i.prototype.speedUp = function() {
        this.hasAnimation && this.outTimeline.totalDuration(0.3);
      }),
      (i.prototype.pause = function(t) {
        this.hasAnimation && this.outTimeline.pause(t);
      }),
      (i.prototype.resume = function() {
        this.outTimeline.play();
      }),
      (i.prototype.play = function() {
        this.hasAnimation
          ? 1 === this.outTimeline.progress()
            ? (this.outTimeline.timeScale(1), this.outTimeline.play(0))
            : this.outTimeline.play()
          : this.outComplete();
      }),
      (i.prototype.outComplete = function() {
        this.animationManager.outComplete();
      }),
      (i.prototype.eventDriven = function(e, i) {
        this.outTimeline = new NextendTimeline({
          paused: 1,
          onComplete: t.proxy(this.outComplete, this)
        });
        for (
          var s = 0;
          s < this.animationManager.relatedAnimations.out.length;
          s++
        )
          this.animationManager.relatedAnimations.out[s].extendTimeline(
            this.outTimeline,
            0,
            e,
            i
          );
        return this.outTimeline.totalDuration()
          ? (this.outTimeline.set(
              this.$animatableElement,
              {
                transformOrigin: this.animationManager.options
                  .transformOriginOut,
                immediateRender: !0
              },
              0
            ),
            (this.hasAnimation = !0),
            !0)
          : ((this.outTimeline = null), !1);
      }),
      (i.prototype.refreshRatio = function(e, i) {
        this.outTimeline = new NextendTimeline({
          paused: 1,
          onComplete: t.proxy(this.outComplete, this)
        });
        for (
          var s = 0;
          s < this.animationManager.relatedAnimations.out.length;
          s++
        )
          this.animationManager.relatedAnimations.out[s].refresh(e, i),
            this.animationManager.relatedAnimations.out[s].extendTimeline(
              this.outTimeline,
              0,
              e,
              i
            );
        return this.outTimeline.totalDuration()
          ? ((this.hasAnimation = !0), !0)
          : ((this.hasAnimation = !1), !1);
      }),
      (i.prototype.linear = function(t, e) {
        for (
          var i = new NextendTimeline(), s = 0;
          s < this.animationManager.relatedAnimations.out.length;
          s++
        )
          this.animationManager.relatedAnimations.out[s].extendTimeline(
            i,
            0,
            t,
            e
          );
        return i.totalDuration()
          ? (i.set(
              this.$animatableElement,
              {
                transformOrigin: this.animationManager.options
                  .transformOriginOut,
                immediateRender: !0
              },
              0
            ),
            i)
          : !1;
      }),
      i
    );
  }),
  N2D("SmartSliderResponsive", function(t, e) {
    function i(e, i) {
      (this.disableTransitions = !1),
        (this.disableTransitionsTimeout = null),
        (this.lastClientHeight = 0),
        (this.lastClientHeightTime = 0),
        (this.lastOrientation = 0),
        (this.isFullScreen = !1),
        (this.invalidateResponsiveState = !0),
        (this.parameters = t.extend(
          {
            desktop: 1,
            tablet: 1,
            mobile: 1,
            onResizeEnabled: !0,
            type: "auto",
            downscale: !0,
            upscale: !1,
            constrainRatio: !0,
            minimumHeight: 0,
            maximumHeight: 0,
            minimumHeightRatio: 0,
            maximumHeightRatio: {
              desktopLandscape: 0,
              desktopPortrait: 0,
              mobileLandscape: 0,
              mobilePortrait: 0,
              tabletLandscape: 0,
              tabletPortrait: 0
            },
            maximumSlideWidth: 0,
            maximumSlideWidthLandscape: 0,
            maximumSlideWidthRatio: -1,
            maximumSlideWidthTablet: 0,
            maximumSlideWidthTabletLandscape: 0,
            maximumSlideWidthMobile: 0,
            maximumSlideWidthMobileLandscape: 0,
            maximumSlideWidthConstrainHeight: 0,
            forceFull: 0,
            forceFullOverflowX: "body",
            forceFullHorizontalSelector: "",
            verticalOffsetSelectors: "",
            decreaseSliderHeight: 0,
            focusUser: 0,
            focusAutoplay: 0,
            deviceModes: {
              desktopLandscape: 1,
              desktopPortrait: 0,
              mobileLandscape: 0,
              mobilePortrait: 0,
              tabletLandscape: 0,
              tabletPortrait: 0
            },
            normalizedDeviceModes: {
              unknownUnknown: ["unknown", "Unknown"],
              desktopPortrait: ["desktop", "Portrait"]
            },
            verticalRatioModifiers: {
              unknownUnknown: 1,
              desktopLandscape: 1,
              desktopPortrait: 1,
              mobileLandscape: 1,
              mobilePortrait: 1,
              tabletLandscape: 1,
              tabletPortrait: 1
            },
            minimumFontSizes: {
              desktopLandscape: 0,
              desktopPortrait: 0,
              mobileLandscape: 0,
              mobilePortrait: 0,
              tabletLandscape: 0,
              tabletPortrait: 0
            },
            ratioToDevice: {
              Portrait: { tablet: 0, mobile: 0 },
              Landscape: { tablet: 0, mobile: 0 }
            },
            sliderWidthToDevice: {
              desktopLandscape: 0,
              desktopPortrait: 0,
              mobileLandscape: 0,
              mobilePortrait: 0,
              tabletLandscape: 0,
              tabletPortrait: 0
            },
            basedOn: "combined",
            desktopPortraitScreenWidth: 1200,
            tabletPortraitScreenWidth: 800,
            mobilePortraitScreenWidth: 440,
            tabletLandscapeScreenWidth: 1024,
            mobileLandscapeScreenWidth: 740,
            orientationMode: "width_and_height",
            overflowHiddenPage: 0
          },
          i
        )),
        e.isAdmin && (this.doResize = NextendThrottle(this.doResize, 50)),
        (this.loadDeferred = t.Deferred()),
        (this.slider = e),
        (this.sliderElement = e.sliderElement);
    }
    var s = null,
      n = null;
    return (
      (i.OrientationMode = {
        SCREEN: 0,
        ADMIN_LANDSCAPE: 1,
        ADMIN_PORTRAIT: 2,
        SCREEN_WIDTH_ONLY: 3
      }),
      (i.DeviceOrientation = { UNKNOWN: 0, LANDSCAPE: 1, PORTRAIT: 2 }),
      (i._DeviceOrientation = { 0: "Unknown", 1: "Landscape", 2: "Portrait" }),
      (i.DeviceMode = { UNKNOWN: 0, DESKTOP: 1, TABLET: 2, MOBILE: 3 }),
      (i._DeviceMode = {
        0: "unknown",
        1: "desktop",
        2: "tablet",
        3: "mobile"
      }),
      (i.prototype.start = function() {
        nextend.fontsDeferred === e
          ? N2R(
              "windowLoad",
              t.proxy(function() {
                this.loadDeferred.resolve();
              }, this)
            )
          : nextend.fontsDeferred.always(
              t.proxy(function() {
                this.loadDeferred.resolve();
              }, this)
            ),
          (this.normalizeTimeout = null),
          (this.delayedResizeAdded = !1),
          (this.deviceMode = i.DeviceMode.UNKNOWN),
          (this.orientationMode = i.OrientationMode.SCREEN),
          (this.orientation = i.DeviceOrientation.UNKNOWN),
          (this.lastRatios = { ratio: -1 }),
          (this.lastRawRatios = { ratio: -1 }),
          (this.normalizedMode = "unknownUnknown"),
          (this.widgetMargins = { Top: [], Right: [], Bottom: [], Left: [] }),
          (this.staticSizes = {
            paddingTop: 0,
            paddingRight: 0,
            paddingBottom: 0,
            paddingLeft: 0
          }),
          (this.enabledWidgetMargins = []),
          (this.alignElement = this.slider.sliderElement.closest(
            ".n2-ss-align"
          ));
        var r = (this.ready = t.Deferred());
        switch (
          (this.sliderElement.triggerHandler("SliderResponsiveStarted"),
          this.sliderElement.one("SliderResize", function() {
            r.resolve();
          }),
          (this.containerElementPadding = this.sliderElement.parent()),
          (this.containerElement = this.containerElementPadding.parent()),
          !this.slider.isAdmin &&
            this.parameters.overflowHiddenPage &&
            t("html, body").css("overflow", "hidden"),
          "width" == this.parameters.orientationMode &&
            (this.orientationMode = i.OrientationMode.SCREEN_WIDTH_ONLY),
          (nextend.smallestZoom = Math.min(
            Math.max(this.parameters.sliderWidthToDevice.mobilePortrait, 120),
            320
          )),
          this.parameters.basedOn)
        ) {
          case "screen":
            break;
          default:
            if (null == s) {
              var o = new MobileDetect(window.navigator.userAgent, 801);
              (s = !!o.tablet()), (n = !!o.phone());
            }
        }
        if (
          ((this.verticalOffsetSelectors = t(
            this.parameters.verticalOffsetSelectors
          )),
          this.storeDefaults(),
          this.parameters.minimumHeight > 0 &&
            (this.parameters.minimumHeightRatio =
              this.parameters.minimumHeight /
              this.responsiveDimensions.startHeight),
          this.parameters.maximumHeight > 0 &&
            this.parameters.maximumHeight >= this.parameters.minimumHeight &&
            ((this.parameters.maximumHeightRatio = {
              desktopPortrait:
                this.parameters.maximumHeight /
                this.responsiveDimensions.startHeight
            }),
            (this.parameters.maximumHeightRatio.desktopLandscape = this.parameters.maximumHeightRatio.desktopPortrait),
            (this.parameters.maximumHeightRatio.tabletPortrait = this.parameters.maximumHeightRatio.desktopPortrait),
            (this.parameters.maximumHeightRatio.tabletLandscape = this.parameters.maximumHeightRatio.desktopPortrait),
            (this.parameters.maximumHeightRatio.mobilePortrait = this.parameters.maximumHeightRatio.desktopPortrait),
            (this.parameters.maximumHeightRatio.mobileLandscape = this.parameters.maximumHeightRatio.desktopPortrait)),
          this.parameters.maximumSlideWidth > 0 &&
            ((this.parameters.maximumSlideWidthRatio = {
              desktopPortrait:
                this.parameters.maximumSlideWidth /
                this.responsiveDimensions.startSlideWidth,
              desktopLandscape:
                this.parameters.maximumSlideWidthLandscape /
                this.responsiveDimensions.startSlideWidth,
              tabletPortrait:
                this.parameters.maximumSlideWidthTablet /
                this.responsiveDimensions.startSlideWidth,
              tabletLandscape:
                this.parameters.maximumSlideWidthTabletLandscape /
                this.responsiveDimensions.startSlideWidth,
              mobilePortrait:
                this.parameters.maximumSlideWidthMobile /
                this.responsiveDimensions.startSlideWidth,
              mobileLandscape:
                this.parameters.maximumSlideWidthMobileLandscape /
                this.responsiveDimensions.startSlideWidth
            }),
            this.parameters.maximumSlideWidthConstrainHeight))
        ) {
          this.parameters.maximumHeightRatio = t.extend(
            {},
            this.parameters.maximumSlideWidthRatio
          );
          for (var a in this.parameters.maximumHeightRatio)
            this.parameters.maximumHeightRatio[
              a
            ] *= this.parameters.verticalRatioModifiers[a];
        }
        if (
          (N2Classes.Zoom !== e && N2Classes.Zoom.add(this),
          this.onResize(),
          this.parameters.onResizeEnabled || "adaptive" == this.parameters.type)
        )
          if (
            (t(window).on({
              resize: t.proxy(this.onResize, this),
              orientationchange: t.proxy(this.onResize, this)
            }),
            this.sliderElement.on(
              "SliderInternalResize",
              t.proxy(this.onResize, this)
            ),
            window.ResizeObserver !== e)
          ) {
            var l = 0,
              h = new ResizeObserver(
                t.proxy(function(e) {
                  e.forEach(
                    t.proxy(function(t) {
                      l !== t.contentRect.width &&
                        ((l = t.contentRect.width),
                        this.sliderElement.triggerHandler(
                          "SliderInternalResize"
                        ));
                    }, this)
                  );
                }, this)
              );
            h.observe(this.containerElement.parent().get(0));
          } else
            try {
              t(
                '<iframe class="bt_skip_resize" sandbox="allow-same-origin allow-scripts" style="margin:0;padding:0;border:0;display:block;width:100%;height:0;min-height:0;max-height:0px;"/>'
              )
                .on(
                  "load",
                  t.proxy(function(e) {
                    var i = 0,
                      s = t(
                        e.target.contentWindow
                          ? e.target.contentWindow
                          : e.target.contentDocument.defaultView
                      ).on(
                        "resize",
                        t.proxy(function(t) {
                          var e = s.width();
                          i !== e &&
                            ((i = e),
                            this.sliderElement.triggerHandler(
                              "SliderInternalResize"
                            ));
                        }, this)
                      );
                  }, this)
                )
                .insertBefore(this.containerElement);
            } catch (d) {}
      }),
      (i.prototype.getOuterWidth = function() {
        return (
          this.responsiveDimensions.startSliderWidth +
          this.responsiveDimensions.startSliderMarginLeft +
          this.responsiveDimensions.startSliderMarginRight
        );
      }),
      (i.prototype.storeDefaults = function() {
        (this.responsiveDimensions = {
          startWidth: this.sliderElement.outerWidth(!0),
          startHeight: this.sliderElement.outerHeight(!0),
          startSliderMarginhorizontal: 0,
          startSliderMarginvertical: 0
        }),
          (this.horizontalElements = []),
          (this.verticalElements = []),
          this.init(),
          (this.margins = {
            top: this.responsiveDimensions.startSliderMarginTop,
            right: this.responsiveDimensions.startSliderMarginRight,
            bottom: this.responsiveDimensions.startSliderMarginBottom,
            left: this.responsiveDimensions.startSliderMarginLeft
          });
      }),
      (i.prototype.addHorizontalElement = function(t, e, i, s) {
        i = i || "ratio";
        var n = new N2Classes.SmartSliderResponsiveElement(this, i, t, e, s);
        return this.horizontalElements.push(n), n;
      }),
      (i.prototype.addVerticalElement = function(t, e, i, s) {
        i = i || "ratio";
        var n = new N2Classes.SmartSliderResponsiveElement(this, i, t, e, s);
        return this.verticalElements.push(n), n;
      }),
      (i.prototype.resizeHorizontalElements = function(t) {
        for (var e = 0; e < this.horizontalElements.length; e++) {
          var i = this.horizontalElements[e];
          "undefined" == typeof t[i.ratioName] &&
            console.log("error with " + i.ratioName),
            i.resize(this.responsiveDimensions, t[i.ratioName], !1, 0);
        }
        this.slider.sliderElement.triggerHandler("SliderResizeHorizontal");
      }),
      (i.prototype.updateVerticalRatios = function(t) {
        return t;
      }),
      (i.prototype._updateVerticalRatios = function(e) {
        var i = this.responsiveDimensions.startSlideHeight * e.slideH,
          s = !1;
        return (
          this.sliderElement
            .find(".n2-ss-section-main-content")
            .addClass("n2-ss-section-main-content-calc")
            .each(function(e, n) {
              var r = t(n).outerHeight();
              r > i && ((s = !0), (i = r));
            })
            .removeClass("n2-ss-section-main-content-calc"),
          s &&
            ((e.slideH = i / this.responsiveDimensions.startSlideHeight),
            (e.h = Math.max(e.h, e.slideH))),
          e
        );
      }),
      (i.prototype.resizeVerticalElements = function(t, e, i) {
        for (var s = 0; s < this.verticalElements.length; s++) {
          var n = this.verticalElements[s];
          "undefined" == typeof t[n.ratioName] &&
            console.log("error with " + n.ratioName),
            n.resize(this.responsiveDimensions, t[n.ratioName], e, i);
        }
      }),
      (i.prototype.getDeviceMode = function() {
        return i._DeviceMode[this.deviceMode];
      }),
      (i.prototype.getDeviceModeOrientation = function() {
        return (
          i._DeviceMode[this.deviceMode] +
          i._DeviceOrientation[this.orientation]
        );
      }),
      (i.prototype.onResize = function(e) {
        this.slider.mainAnimation &&
        "playing" == this.slider.mainAnimation.getState()
          ? this.delayedResizeAdded ||
            ((this.delayedResizeAdded = !0),
            this.sliderElement.on(
              "mainAnimationComplete.responsive",
              t.proxy(this._onResize, this, e)
            ))
          : this._onResize(e);
      }),
      (i.prototype._onResize = function(t) {
        this.doResize(t), (this.delayedResizeAdded = !1);
      }),
      (i.prototype.doNormalizedResize = function() {
        this.normalizeTimeout && clearTimeout(this.normalizeTimeout),
          (this.normalizeTimeout = setTimeout(
            t.proxy(this.doResize, this),
            10
          ));
      }),
      (i.prototype._getOrientation = function() {
        return this.orientationMode == i.OrientationMode.SCREEN
          ? window.innerHeight <= window.innerWidth
            ? i.DeviceOrientation.LANDSCAPE
            : i.DeviceOrientation.PORTRAIT
          : this.orientationMode == i.OrientationMode.ADMIN_PORTRAIT
          ? i.DeviceOrientation.PORTRAIT
          : this.orientationMode == i.OrientationMode.ADMIN_LANDSCAPE
          ? i.DeviceOrientation.LANDSCAPE
          : void 0;
      }),
      (i.prototype._getDevice = function() {
        switch (this.parameters.basedOn) {
          case "combined":
            return this._getDeviceDevice(this._getDeviceScreenWidth());
          case "device":
            return this._getDeviceDevice(i.DeviceMode.DESKTOP);
          case "screen":
            return this._getDeviceScreenWidth();
        }
      }),
      (i.prototype._getDeviceScreenWidth = function() {
        var t = window.innerWidth;
        if (this.orientation == i.DeviceOrientation.PORTRAIT) {
          if (t < this.parameters.mobilePortraitScreenWidth)
            return i.DeviceMode.MOBILE;
          if (t < this.parameters.tabletPortraitScreenWidth)
            return i.DeviceMode.TABLET;
        } else {
          if (t < this.parameters.mobileLandscapeScreenWidth)
            return i.DeviceMode.MOBILE;
          if (t < this.parameters.tabletLandscapeScreenWidth)
            return i.DeviceMode.TABLET;
        }
        return i.DeviceMode.DESKTOP;
      }),
      (i.prototype._getDeviceAndOrientationByScreenWidth = function() {
        var t = window.innerWidth;
        return t < this.parameters.mobilePortraitScreenWidth
          ? [i.DeviceMode.MOBILE, i.DeviceOrientation.PORTRAIT]
          : t < this.parameters.mobileLandscapeScreenWidth
          ? [i.DeviceMode.MOBILE, i.DeviceOrientation.LANDSCAPE]
          : t < this.parameters.tabletPortraitScreenWidth
          ? [i.DeviceMode.TABLET, i.DeviceOrientation.PORTRAIT]
          : t < this.parameters.tabletLandscapeScreenWidth
          ? [i.DeviceMode.TABLET, i.DeviceOrientation.LANDSCAPE]
          : t < this.parameters.desktopPortraitScreenWidth
          ? [i.DeviceMode.DESKTOP, i.DeviceOrientation.PORTRAIT]
          : [i.DeviceMode.DESKTOP, i.DeviceOrientation.LANDSCAPE];
      }),
      (i.prototype._getDeviceDevice = function(t) {
        return n === !0
          ? i.DeviceMode.MOBILE
          : s && t != i.DeviceMode.MOBILE
          ? i.DeviceMode.TABLET
          : t;
      }),
      (i.prototype._getDeviceZoom = function(t) {
        var e;
        this.orientationMode == i.OrientationMode.ADMIN_PORTRAIT
          ? (e = i.DeviceOrientation.PORTRAIT)
          : this.orientationMode == i.OrientationMode.ADMIN_LANDSCAPE &&
            (e = i.DeviceOrientation.LANDSCAPE);
        var s = i.DeviceMode.DESKTOP;
        return (
          t - this.parameters.ratioToDevice[i._DeviceOrientation[e]].mobile <
          0.001
            ? (s = i.DeviceMode.MOBILE)
            : t -
                this.parameters.ratioToDevice[i._DeviceOrientation[e]].tablet <
                0.001 && (s = i.DeviceMode.TABLET),
          s
        );
      }),
      (i.prototype.doResize = function(e, s, n, r) {
        this.disableTransitions ||
          ((this.disableTransitions = !0),
          this.sliderElement.addClass("n2notransition"),
          this.disableTransitionsTimeout &&
            clearTimeout(this.disableTransitionsTimeout),
          (this.disableTransitionsTimeout = setTimeout(
            t.proxy(function() {
              this.sliderElement.removeClass("n2notransition"),
                (this.disableTransitions = !1);
            }, this),
            500
          ))),
          this.refreshMargin();
        var o;
        if (
          ("center" === this.slider.parameters.align &&
            ("fullpage" === this.parameters.type
              ? this.alignElement.css("maxWidth", "none")
              : ((o = this.responsiveDimensions.startWidth),
                this.staticSizes &&
                  (o +=
                    this.staticSizes.paddingLeft +
                    this.staticSizes.paddingRight),
                this.alignElement.css("maxWidth", o))),
          !this.slider.isAdmin && this.parameters.forceFull)
        ) {
          "none" !== this.parameters.forceFullOverflowX &&
            t(this.parameters.forceFullOverflowX).css("overflow-x", "hidden");
          var a = 0,
            l = 0;
          if ("" !== this.parameters.forceFullHorizontalSelector) {
            var h = this.sliderElement.closest(
              this.parameters.forceFullHorizontalSelector
            );
            h && h.length > 0 && ((a = h.width()), (l = h.offset().left));
          }
          var d,
            p =
              a > 0
                ? a
                : document.body.clientWidth ||
                  document.documentElement.clientWidth,
            c = this.containerElement.parent(),
            u = c.offset().left;
          (d = n2const.rtl.isRtl ? p - (u + c.outerWidth()) : u),
            this.containerElement
              .css(
                n2const.rtl.marginLeft,
                -d -
                  parseInt(c.css("paddingLeft")) -
                  parseInt(c.css("borderLeftWidth")) +
                  l
              )
              .width(p);
        }
        var m = this.containerElementPadding.width() / this.getOuterWidth(),
          f = !1,
          y = this.orientation,
          g = this.deviceMode,
          v = null,
          S = null;
        if (this.orientationMode === i.OrientationMode.SCREEN_WIDTH_ONLY) {
          var x = this._getDeviceAndOrientationByScreenWidth();
          (S = x[0]), (v = x[1]);
        } else v = this._getOrientation();
        if (
          (this.orientation !== v &&
            ((this.orientation = v),
            (f = !0),
            this.sliderElement.trigger("SliderOrientation", {
              lastOrientation: i._DeviceOrientation[y],
              orientation: i._DeviceOrientation[v]
            })),
          this.orientationMode !== i.OrientationMode.SCREEN_WIDTH_ONLY &&
            (S = this._getDevice(m)),
          this.deviceMode !== S &&
            ((this.deviceMode = S),
            this.sliderElement
              .removeClass("n2-ss-" + i._DeviceMode[g])
              .addClass("n2-ss-" + i._DeviceMode[S]),
            this.sliderElement.trigger("SliderDevice", {
              lastDevice: i._DeviceMode[g],
              device: i._DeviceMode[S]
            }),
            (f = !0)),
          !this.slider.isAdmin && "fullpage" === this.parameters.type)
        ) {
          var b = 0;
          if (
            window.matchMedia &&
            /Android|iPhone|iPad|iPod|BlackBerry/i.test(
              navigator.userAgent || navigator.vendor || window.opera
            )
          ) {
            var A,
              w = !1;
            e && "orientationchange" === e.type && (w = !0),
              (A = n2const.isIOS
                ? document.documentElement.clientHeight
                : window.innerHeight),
              window.matchMedia("(orientation: landscape)").matches
                ? ((b = Math.min(screen.width, A)),
                  90 != this.lastOrientation &&
                    ((w = !0), (this.lastOrientation = 90)))
                : ((b = Math.min(screen.height, A)),
                  0 != this.lastOrientation &&
                    ((w = !0), (this.lastOrientation = 0))),
              (b = window.n2ClientHeight || b);
            var E = t.now(),
              T = 100;
            /SamsungBrowser/i.test(navigator.userAgent) && (T = 150),
              !w &&
              Math.abs(b - this.lastClientHeight) < T &&
              E - this.lastClientHeightTime > 400
                ? (b = this.lastClientHeight)
                : ((this.lastClientHeight = b),
                  (this.lastClientHeightTime = E));
          } else
            b =
              window.n2ClientHeight ||
              document.documentElement.clientHeight ||
              document.body.clientHeight;
          n2const.isBot &&
            (b = Math.min(
              b,
              document.documentElement.clientWidth || document.body.clientWidth
            )),
            (this.parameters.maximumHeightRatio[
              this.getDeviceModeOrientation()
            ] = this.parameters.minimumHeightRatio =
              (b - this.getVerticalOffsetHeight()) /
              this.responsiveDimensions.startHeight);
        }
        if (f) {
          this.invalidateResponsiveState = !0;
          var D = this._normalizeMode(
              i._DeviceMode[g],
              i._DeviceOrientation[y]
            ),
            C = this._normalizeMode(
              i._DeviceMode[this.deviceMode],
              i._DeviceOrientation[this.orientation]
            );
          (D[0] === C[0] && D[1] === C[1]) ||
            ((this.normalizedMode = C[0] + C[1]),
            this.sliderElement.trigger("SliderDeviceOrientation", {
              lastDevice: D[0],
              lastOrientation: D[1],
              device: C[0],
              orientation: C[1]
            }));
        }
        var I =
          this.parameters.sliderWidthToDevice[this.normalizedMode] /
          this.parameters.sliderWidthToDevice.desktopPortrait;
        !this.parameters.downscale && I > m
          ? (m = I)
          : !this.parameters.upscale && m > I && (m = I),
          this._doResize(m, s, n, r),
          "center" === this.slider.parameters.align &&
            ((o = this.responsiveDimensions.slider.width),
            this.staticSizes &&
              (o +=
                this.staticSizes.paddingLeft + this.staticSizes.paddingRight),
            this.responsiveDimensions &&
              (o += this.responsiveDimensions.startSliderMarginhorizontal),
            this.alignElement.css("maxWidth", o));
      }),
      (i.prototype._normalizeMode = function(t, e) {
        return this.parameters.normalizedDeviceModes[t + e];
      }),
      (i.prototype.getNormalizedModeString = function() {
        var t = this._normalizeMode(
          i._DeviceMode[this.deviceMode],
          i._DeviceOrientation[this.orientation]
        );
        return t.join("");
      }),
      (i.prototype.getModeString = function() {
        return (
          i._DeviceMode[this.deviceMode] +
          i._DeviceOrientation[this.orientation]
        );
      }),
      (i.prototype.enabled = function(t, e) {
        return this.parameters.deviceModes[t + e];
      }),
      (i.prototype._doResize = function(e, i, s, n) {
        var r = { ratio: e, w: e, h: e, slideW: e, slideH: e, fontRatio: 1 };
        this._buildRatios(r, this.slider.parameters.dynamicHeight, s),
          (r.fontRatio = r.slideW);
        var o = !1;
        for (var a in r)
          if (r[a] != this.lastRawRatios[a]) {
            o = !0;
            break;
          }
        (this.invalidateResponsiveState || o) &&
          ((this.lastRawRatios = t.extend({}, r)),
          this.resizeHorizontalElements(r),
          this.finishResize(r, i, n));
      }),
      (i.prototype.finishResize = function(e, i, s) {
        this.loadDeferred.done(
          t.proxy(function() {
            var n = t.proxy(function() {
              (this.finishResize = this._finishResize),
                this.finishResize(e, i, s);
            }, this);
            (/OS X.*Version\/10\..*Safari/.exec(window.navigator.userAgent) &&
              /Apple/.exec(window.navigator.vendor)) ||
            /CriOS/.exec(window.navigator.userAgent)
              ? setTimeout(n, 200)
              : n();
          }, this)
        ),
          (this.invalidateResponsiveState = !1);
      }),
      (i.prototype._finishResize = function(t, e, i) {
        (this.invalidateResponsiveState = !1),
          (t = this.updateVerticalRatios(t)),
          this.resizeVerticalElements(t, e, i),
          (this.lastRatios = t),
          e
            ? (this.sliderElement.trigger("SliderAnimatedResize", [t, e, i]),
              e.eventCallback(
                "onComplete",
                function() {
                  this.triggerResize(t, e);
                },
                [],
                this
              ))
            : this.triggerResize(t, !1);
      }),
      (i.prototype.doVerticalResize = function() {
        var e = this.updateVerticalRatios(t.extend({}, this.lastRawRatios)),
          i = !1;
        for (var s in e)
          if (e[s] != this.lastRatios[s]) {
            i = !0;
            break;
          }
        i && this.finishVerticalResize(e);
      }),
      (i.prototype.finishVerticalResize = function(e) {
        this.loadDeferred.done(
          t.proxy(function() {
            (this.finishVerticalResize = this._finishVerticalResize),
              this.finishVerticalResize(e);
          }, this)
        );
      }),
      (i.prototype._finishVerticalResize = function(t) {
        this.resizeVerticalElements(t, !1, 0),
          (this.lastRatios = t),
          this.triggerResize(t, !1);
      }),
      (i.prototype.triggerResize = function(t, e) {
        this.sliderElement.trigger("SliderResize", [t, this, e]);
      }),
      (i.prototype._buildRatios = function(t, i, s) {
        var n = this.getDeviceModeOrientation();
        this.parameters.maximumSlideWidthRatio[n] > 0 &&
          t.slideW > this.parameters.maximumSlideWidthRatio[n] &&
          (t.slideW = this.parameters.maximumSlideWidthRatio[n]),
          (t.slideW = t.slideH = Math.min(t.slideW, t.slideH));
        var r = this.parameters.verticalRatioModifiers[n];
        if (((t.slideH *= r), "fullpage" === this.parameters.type))
          (t.h *= r),
            this.parameters.minimumHeightRatio > 0 &&
              (t.h = Math.max(t.h, this.parameters.minimumHeightRatio)),
            this.parameters.maximumHeightRatio[n] > 0 &&
              (t.h = Math.min(t.h, this.parameters.maximumHeightRatio[n])),
            this.slider.isAdmin
              ? this.parameters.constrainRatio
                ? ((t.slideH = Math.min(t.slideH, t.h)),
                  (t.slideH = t.slideW = Math.min(t.slideW, t.slideH)))
                : ((t.w = t.slideW), (t.h = t.slideH))
              : this.parameters.constrainRatio
              ? ((t.slideH = Math.min(t.slideH, t.h)),
                (t.slideH = t.slideW = Math.min(t.slideW, t.slideH)))
              : ((t.slideW = t.w),
                this.parameters.maximumSlideWidthRatio[n] > 0 &&
                  t.slideW > this.parameters.maximumSlideWidthRatio[n] &&
                  (t.slideW = this.parameters.maximumSlideWidthRatio[n]),
                (t.slideH = t.h));
        else if (
          ((t.h *= r),
          this.parameters.minimumHeightRatio > 0 &&
            (t.h = Math.max(t.h, this.parameters.minimumHeightRatio)),
          this.parameters.maximumHeightRatio[n] > 0 &&
            (t.h = Math.min(t.h, this.parameters.maximumHeightRatio[n])),
          (t.slideH = Math.min(t.slideH, t.h)),
          (t.slideW = t.slideH / r),
          "showcase" === this.slider.type &&
            ((t.slideW = Math.min(t.slideW, t.w)),
            (t.slideH = Math.min(t.slideW, t.slideH))),
          i)
        ) {
          var o;
          if (
            (s !== e && s.background.elements.image !== e
              ? (o = s.background.elements.image)
              : this.slider.currentSlide.background.elements.image !== e &&
                (o = this.slider.currentSlide.background.elements.image),
            o !== e && o.width > 0 && o.height > 0)
          ) {
            var a =
              (this.responsiveDimensions.startSlideWidth / o.width) *
              (o.height / this.responsiveDimensions.startSlideHeight);
            a > 0 && ((t.slideH *= a), (t.h *= a));
          }
        }
        this.sliderElement.triggerHandler("responsiveBuildRatios", [t]);
      }),
      (i.prototype.getVerticalOffsetHeight = function() {
        if (this.isFullScreen) return 0;
        for (var t = 0, e = 0; e < this.verticalOffsetSelectors.length; e++)
          t += this.verticalOffsetSelectors.eq(e).outerHeight();
        if (this.slider.widgets.$vertical)
          for (var e = 0; e < this.slider.widgets.$vertical.length; e++)
            t += this.slider.widgets.$vertical.eq(e).outerHeight();
        return t + this.parameters.decreaseSliderHeight;
      }),
      (i.prototype.addMargin = function(t, e) {
        this.widgetMargins[t].push(e),
          e.isVisible() &&
            (this._addMarginSize(t, e.getSize()),
            this.enabledWidgetMargins.push(e)),
          this.doNormalizedResize();
      }),
      (i.prototype.addStaticMargin = function(t, e) {
        "Bottom" != t &&
          "Top" != t &&
          (this.widgetStaticMargins ||
            (this.widgetStaticMargins = {
              Top: [],
              Right: [],
              Bottom: [],
              Left: []
            }),
          this.widgetStaticMargins[t].push(e),
          this.doNormalizedResize());
      }),
      (i.prototype.refreshMargin = function() {
        for (var e in this.widgetMargins)
          for (var i = this.widgetMargins[e], s = i.length - 1; s >= 0; s--) {
            var n = i[s];
            if (n.isVisible())
              -1 == t.inArray(n, this.enabledWidgetMargins) &&
                (this._addMarginSize(e, n.getSize()),
                this.enabledWidgetMargins.push(n));
            else {
              var r = t.inArray(n, this.enabledWidgetMargins);
              -1 != r &&
                (this._addMarginSize(e, -n.getSize()),
                this.enabledWidgetMargins.splice(r, 1));
            }
          }
        this.refreshStaticSizes();
      }),
      (i.prototype.refreshStaticSizes = function() {
        if (this.widgetStaticMargins) {
          var t = {
            paddingTop: 0,
            paddingRight: 0,
            paddingBottom: 0,
            paddingLeft: 0
          };
          for (var e in this.widgetStaticMargins)
            for (
              var i = this.widgetStaticMargins[e], s = i.length - 1;
              s >= 0;
              s--
            ) {
              var n = i[s];
              n.isVisible() && (t["padding" + e] += n.getSize());
            }
          for (var r in t) this.containerElementPadding.css(t);
          this.staticSizes = t;
        }
      }),
      (i.prototype._addMarginSize = function(t, e) {
        var i = null;
        switch (t) {
          case "Top":
          case "Bottom":
            i = this._sliderVertical;
            break;
          default:
            i = this._sliderHorizontal;
        }
        (i.data["margin" + t] += e),
          (this.responsiveDimensions["startSliderMargin" + t] += e);
      }),
      i
    );
  }),
  N2D("SmartSliderResponsiveElement", function(t, e) {
    function i(e, i, s, n, r) {
      (this._lastRatio = 1),
        (this.responsive = e),
        (this.ratioName = i),
        (this.element = s),
        (this._readyDeferred = t.Deferred()),
        "undefined" != typeof r ? (this.name = r) : (this.name = null),
        (this.data = {}),
        (this.helper = {
          parent: null,
          parentProps: null,
          fontSize: !1,
          centered: !1
        }),
        this._lateInit(n);
    }
    return (
      (i.prototype._lateInit = function(e) {
        (this._cssProperties = e),
          this.reloadDefault(),
          -1 != t.inArray("fontSize", e) &&
            ((this.data.fontSize = this.element.data("fontsize")),
            (this.helper.fontSize = {
              fontSize: this.element.data("fontsize"),
              desktopPortrait: this.element.data("minfontsizedesktopportrait"),
              desktopLandscape: this.element.data(
                "minfontsizedesktoplandscape"
              ),
              tabletPortrait: this.element.data("minfontsizetabletportrait"),
              tabletLandscape: this.element.data("minfontsizetabletlandscape"),
              mobilePortrait: this.element.data("minfontsizemobileportrait"),
              mobileLandscape: this.element.data("minfontsizemobilelandscape")
            }),
            this.responsive.sliderElement.on(
              "SliderDeviceOrientation",
              t.proxy(this.onModeChange, this)
            )),
          (this.resize = this._resize),
          this._readyDeferred.resolve();
      }),
      (i.prototype.reloadDefault = function() {
        for (var t = 0; t < this._cssProperties.length; t++) {
          var e = this._cssProperties[t];
          this.data[e] = parseInt(this.element.css(e));
        }
        if (this.name) {
          var i = this.responsive.responsiveDimensions;
          for (var s in this.data)
            i[
              "start" +
                N2Classes.StringHelper.capitalize(this.name) +
                N2Classes.StringHelper.capitalize(s)
            ] = this.data[s];
        }
      }),
      (i.prototype.ready = function(t) {
        this._readyDeferred.done(t);
      }),
      (i.prototype.resize = function(e, i) {
        this.ready(t.proxy(this.resize, this, e, i)), (this._lastRatio = i);
      }),
      (i.prototype._resize = function(t, e, i, s) {
        this.name && "undefined" == typeof t[this.name] && (t[this.name] = {});
        var n = {};
        for (var r in this.data) {
          var o = this.data[r] * e;
          "function" == typeof this[r + "Prepare"] &&
            (o = this[r + "Prepare"](o)),
            this.name && (t[this.name][r] = o),
            (n[r] = o);
        }
        if (i) i.to(this.element, s, n, 0);
        else if ((this.element.css(n), this.helper.centered)) {
          var a = this.getVerticalMargin(
              parseInt(
                (this.helper.parent.height() - this.element.height()) / 2
              )
            ),
            l = this.getHorizontalMargin(
              parseInt((this.helper.parent.width() - this.element.width()) / 2)
            );
          this.element.css({
            marginLeft: l,
            marginRight: l,
            marginTop: a,
            marginBottom: a
          });
        }
        this._lastRatio = e;
      }),
      (i.prototype.getHorizontalMargin = function(t) {
        return t;
      }),
      (i.prototype.getVerticalMargin = function(t) {
        return t;
      }),
      (i.prototype._refreshResize = function() {
        this.responsive.ready.done(
          t.proxy(function() {
            this._resize(
              this.responsive.responsiveDimensions,
              this.responsive.lastRatios[this.ratioName]
            );
          }, this)
        );
      }),
      (i.prototype.widthPrepare = function(t) {
        return Math.round(t);
      }),
      (i.prototype.heightPrepare = function(t) {
        return Math.round(t);
      }),
      (i.prototype.marginLeftPrepare = function(t) {
        return parseInt(t);
      }),
      (i.prototype.marginRightPrepare = function(t) {
        return parseInt(t);
      }),
      (i.prototype.lineHeightPrepare = function(t) {
        return t + "px";
      }),
      (i.prototype.borderLeftWidthPrepare = function(t) {
        return parseInt(t);
      }),
      (i.prototype.borderRightWidthPrepare = function(t) {
        return parseInt(t);
      }),
      (i.prototype.borderTopWidthPrepare = function(t) {
        return parseInt(t);
      }),
      (i.prototype.borderBottomWidthPrepare = function(t) {
        return parseInt(t);
      }),
      (i.prototype.fontSizePrepare = function(t) {
        var e = this.responsive.getNormalizedModeString();
        return t < this.helper.fontSize[e] ? this.helper.fontSize[e] : t;
      }),
      (i.prototype.setCentered = function() {
        (this.helper.parent = this.element.parent()),
          (this.helper.centered = !0);
      }),
      (i.prototype.unsetCentered = function() {
        this.helper.centered = !1;
      }),
      (i.prototype.onModeChange = function() {
        this.setFontSizeByMode();
      }),
      (i.prototype.setFontSizeByMode = function() {
        this.element.css(
          "fontSize",
          this.fontSizePrepare(this.data.fontSize * this._lastRatio)
        );
      }),
      i
    );
  }),
  N2D("FrontendItemAnimatedHeading", function(t, e) {
    function i(e, i) {
      return (
        (this.slider = i),
        (this.$el = t(e)),
        (this.$texts = this.$el.find(".n2-ss-animated-heading-i-text")),
        i.disableLayerAnimations
          ? (this.$texts.eq(0).css("position", "static"),
            void this.$texts.not(":eq(0)").css("display", "none"))
          : ((this.garbage = []),
            (this.$layer = this.$el.closest(".n2-ss-layer")),
            this.$el
              .siblings(
                ".n2-ss-animated-heading-before,.n2-ss-animated-heading-after"
              )
              .each(function() {
                for (
                  var e = t(this),
                    i = e.html().split(" "),
                    s = e.attr("class"),
                    n = [],
                    r = 0;
                  r < i.length;
                  r++
                )
                  n.push('<div class="' + s + '">' + i[r] + "</div>");
                e.replaceWith(n.join(" "));
              }),
            void this.start())
      );
    }
    var s = {
      fade: {
        fn: "animateWhole",
        fixedWidth: !0,
        data: {
          duration: 0.6,
          overlap: 0,
          ease: "easeInOutQuad",
          from: { opacity: 0 },
          current: { opacity: 1 },
          to: { opacity: 0 }
        }
      },
      slide: {
        fn: "animateWhole",
        fixedWidth: !0,
        data: {
          duration: 0.6,
          overlap: 0,
          ease: "easeInOutQuad",
          from: { opacity: 0, x: "100%" },
          current: { opacity: 1, x: "0%" },
          to: { opacity: 0, x: "-100%" }
        }
      },
      rotating: {
        fn: "animateWhole",
        fixedWidth: !0,
        data: {
          overflow: !0,
          duration: 0.6,
          overlap: 0.2,
          ease: "easeInOutQuad",
          transformOrigin: "50% 100% 0",
          from: { opacity: 0, rotationX: "-70deg" },
          current: { opacity: 1, rotationX: "0deg" },
          to: { opacity: 0, rotationX: "70deg" }
        }
      },
      "drop-in": {
        fn: "animateWhole",
        fixedWidth: !0,
        data: {
          overflow: !0,
          duration: 0.6,
          overlap: 0.3,
          ease: "easeInOutQuad",
          from: { opacity: 0, scale: 1.2 },
          current: { opacity: 1, scale: 1 },
          to: { opacity: 0, scale: 0.6 }
        }
      },
      "slide-down": {
        fn: "animateWhole",
        fixedWidth: !0,
        data: {
          duration: 0.6,
          overlap: 0.6,
          ease: "easeInOutQuad",
          from: { opacity: 0, y: "-100%" },
          current: { opacity: 1, y: "0%" },
          to: { opacity: 0, y: "100%" }
        }
      },
      typewriter1: {
        fn: "animateTypeWriter",
        data: {
          backspace: function(t) {
            this.timeline.staggerFromTo(
              t,
              0.1 * this.speedModifier,
              { display: "inline-block" },
              { display: "none", immediateRender: !1 },
              -0.1 * this.speedModifier,
              "+=" + this.showDuration
            );
          }
        }
      },
      typewriter2: {
        fn: "animateTypeWriter",
        data: {
          backspace: function(t, e) {
            this.timeline.set(
              e,
              {
                className: "+=n2-ss-animated-heading-i-selection",
                background: this.color
              },
              "+=" + this.showDuration
            ),
              this.timeline.set(e, { css: { color: "#" + this.color2 } }),
              this.timeline.set(
                e,
                {
                  className: "-=n2-ss-animated-heading-i-selection",
                  background: ""
                },
                "+=0.5"
              ),
              this.timeline.set(e, { clearProps: "color" }),
              this.timeline.set(t, { display: "none" });
          }
        }
      },
      chars: {
        fn: "animateChars",
        fixedWidth: !0,
        data: {
          duration: 0.4,
          stagger: 0.05,
          ease: "easeOutCubic",
          from: { scale: 0, opacity: 0 },
          current: { scale: 1, opacity: 1 },
          to: { scale: 0, opacity: 0 }
        }
      },
      chars2: {
        fn: "animateChars",
        fixedWidth: !0,
        data: {
          duration: 0.4,
          stagger: 0.05,
          ease: "easeOutCubic",
          from: { rotationY: "90deg", opacity: 0 },
          current: { rotationY: "0deg", opacity: 1 },
          to: { rotationY: "-90deg", opacity: 0 }
        }
      }
    };
    return (
      (i.prototype.onResize = function() {
        (this.size = { height: 0 }),
          this.currentType.fixedWidth &&
            !this.animateWidth &&
            (this.size.width = 0);
        for (var t = 0; t < this.$texts.length; t++) {
          var e = this.$texts
              .eq(t)
              .addClass("n2-ss-animated-heading-measure-width"),
            i = e.outerWidth() + 4,
            s = e.outerHeight();
          e.removeClass("n2-ss-animated-heading-measure-width"),
            e.data("width", i),
            e.data("height", s),
            (this.size.height = Math.max(this.size.height, s)),
            this.currentType.fixedWidth &&
              !this.animateWidth &&
              (this.size.width = Math.max(this.size.width, i));
        }
        this.currentType.fixedWidth &&
          this.animateWidth &&
          (this.size.width = this.$texts.eq(0).data("width")),
          this.$el.css(this.size);
      }),
      (i.prototype.start = function() {
        this.slider.started(t.proxy(this.started, this));
      }),
      (i.prototype.started = function() {
        (this.type = this.$el.data("animation-type") || "slide"),
          (this.color = this.$el.data("color") || "RGBA(255,255,255,1)"),
          (this.color2 = this.$el.data("color2") || "000000"),
          (this.currentType = s[this.type]),
          this.currentType.fixedWidth
            ? (this.animateWidth = 0 === this.$el.data("animate-width") ? 0 : 1)
            : (this.animateWidth = 0),
          (this.delay = (+this.$el.data("delay") || 0) / 1e3),
          (this.speedModifier =
            1 / (Math.max(+this.$el.data("speed") || 100, 0) / 100)),
          (this.showDuration =
            Math.max(+this.$el.data("show-duration") || 1500, 0) / 1e3),
          (this.loop = +this.$el.data("loop") || 0),
          this.$layer.on(
            "collectRelatedAnimations.animatedHeading",
            t.proxy(this.collectRelatedAnimations, this)
          ),
          this.slider.isAdmin &&
            this.slider.sliderElement.on(
              "SliderResizeHorizontal",
              t.proxy(function() {
                this.onResize();
              }, this)
            ),
          this.onResize();
      }),
      (i.prototype.collectRelatedAnimations = function(t, e, i, s) {
        1 === this.loop
          ? ((this.loopTimeline = new N2Classes.AnimationsLoopTimeline(
              this,
              0
            )),
            e.loop.push(this.loopTimeline))
          : e["in"].push(
              new N2Classes.AnimationsRelated(this, "extendTimeline", "refresh")
            );
      }),
      (i.prototype.initTimeline = function() {
        this.timeline && this.timeline.kill(),
          this.kill(),
          this.onResize(),
          (this.timeline = new NextendTimeline({ paused: 1 })),
          this[this.currentType.fn](this.currentType.data),
          this.timeline.delay(this.delay);
      }),
      (i.prototype.getLoopTimeline = function() {
        return this.initTimeline(), this.timeline;
      }),
      (i.prototype.extendTimeline = function(t, e, i, s) {
        this.initTimeline(), t.add(this.timeline, e), this.timeline.paused(!1);
      }),
      (i.prototype.refresh = function(t, e) {
        this.timeline.progress(0.9999).pause(0, !1);
      }),
      (i.prototype.getSplitTextChars = function(t) {
        var e = t.data("splitTextChars");
        return (
          e ||
            (new NextendSplitText(t[0], { type: "words,chars" }),
            t
              .contents()
              .filter(function() {
                return 3 === this.nodeType && !/\S/.test(this.nodeValue);
              })
              .replaceWith(
                '<div style="position: relative; display: inline-block;">&nbsp;</div>'
              ),
            (e = t.find(":not(:has(*))")),
            t.data("splitTextChars", e)),
          e
        );
      }),
      (i.prototype.animateChars = function(e) {
        this.$el.css("overflow", "hidden"),
          this.animateWidth &&
            this.timeline.set(this.$el, {
              width: this.$texts.eq(0).data("width"),
              roundProps: ["width"],
              rotationZ: "0.00001deg",
              immediateRender: !0,
              ease: N2Classes.Linear
            });
        var i = 0,
          s = this.$texts.length,
          n = s;
        this.loop && n++;
        for (var r = 0; n > r; r++) {
          var o = this.$texts.eq(s === r ? 0 : r),
            a = this.getSplitTextChars(o);
          if (
            (NextendTween.set(a, {
              transformPerspective: 1e3,
              "will-change": "transform, opacity"
            }),
            r > 0)
          ) {
            var l = this.timeline.totalDuration() - i;
            this.timeline.staggerFromTo(
              a,
              e.duration * this.speedModifier,
              t.extend({}, e.from),
              t.extend({ immediateRender: s > r, ease: e.ease }, e.current),
              e.stagger,
              l
            ),
              this.animateWidth &&
                this.timeline.to(
                  this.$el,
                  this.timeline.recent().duration(),
                  { width: o.data("width") },
                  l
                );
          }
          n - 1 > r &&
            (this.timeline.staggerTo(
              a,
              e.duration * this.speedModifier,
              t.extend({ ease: e.ease }, e.to),
              e.stagger,
              "+=" + this.showDuration
            ),
            (i = this.timeline.recent().duration()));
        }
        this.garbage.push(function() {
          this.animateWidth && this.$el.css("width", ""),
            this.$el.css("overflow", "");
        });
      }),
      (i.prototype.displayCursor = function() {
        var e = t('<div class="n2-ss-animated-heading-i-cursor"></div>')
            .css("background-color", this.color)
            .appendTo(this.$texts.parent()),
          i = new NextendTimeline({
            onComplete: function() {
              this.restart();
            }
          });
        i.fromTo(e, 0.1, { opacity: 0 }, { opacity: 1 }, "+=0.5"),
          i.fromTo(
            e,
            0.1,
            { opacity: 1 },
            { opacity: 0, immediateRender: !1 },
            "+=0.5"
          ),
          this.garbage.push(function() {
            i.kill(), e.remove();
          });
      }),
      (i.prototype.animateTypeWriter = function(t) {
        this.$texts.css("position", "relative");
        var e = this.$texts.length,
          i = e;
        this.loop && i++;
        for (var s = 0; i > s; s++) {
          var n = this.getSplitTextChars(this.$texts.eq(e === s ? 0 : s));
          s > 0 &&
            this.timeline.staggerFromTo(
              n,
              0.2 * this.speedModifier,
              { display: "none" },
              { display: "inline-block", immediateRender: e !== s },
              0.2 * this.speedModifier,
              "+=0.8"
            ),
            i - 1 > s && t.backspace.call(this, n, this.$texts.parent());
        }
        this.displayCursor();
      }),
      (i.prototype.animateWhole = function(e) {
        e.overflow
          ? this.$el.css("overflow", "")
          : this.$el.css("overflow", "hidden"),
          this.animateWidth &&
            this.timeline.set(this.$el, {
              width: this.$texts.eq(0).data("width"),
              immediateRender: !0
            }),
          (e.transformOrigin = e.transformOrigin || "50% 50% 0"),
          this.timeline.set(this.$texts, {
            transformOrigin: e.transformOrigin,
            transformPerspective: 1e3
          });
        var i = this.$texts.length,
          s = i;
        this.loop && s++;
        for (var n = 0; s > n; n++) {
          var r = this.$texts.eq(i === n ? 0 : n);
          if (n > 0) {
            var o = this.timeline.totalDuration();
            if (this.animateWidth) {
              var a = 0.4;
              this.timeline.to(
                this.$el,
                a,
                { width: r.data("width") },
                o - 0.2 * a
              ),
                (o += 0.8 * a);
            } else o -= e.overlap * this.speedModifier;
            this.timeline.fromTo(
              r,
              e.duration * this.speedModifier,
              t.extend({}, e.from),
              t.extend({ immediateRender: i > n, ease: e.ease }, e.current),
              o
            );
          }
          s - 1 > n &&
            this.timeline.to(
              r,
              e.duration * this.speedModifier,
              t.extend({ ease: e.ease }, e.to),
              "+=" + this.showDuration
            );
        }
        this.garbage.push(function() {
          this.animateWidth && this.$el.css("width", ""),
            this.$el.css("overflow", "");
        });
      }),
      (i.prototype.kill = function() {
        for (var t = 0; t < this.garbage.length; t++)
          this.garbage[t].call(this);
        this.garbage = [];
      }),
      i
    );
  }),
  N2D("FrontendItemAudio", function(t, e) {
    function i(e, i, n) {
      return (
        (this.loadDeferred = t.Deferred()),
        (this.slider = e),
        (this.id = i),
        (this.$node = t("#" + i)),
        (this.audio = this.$node.find("audio").get(0)),
        this.audio
          ? ((this.$layer = this.$node.parent()),
            (this.isStatic = this.$node.closest(".n2-ss-static-slide").length),
            (this.slide = this.slider.findSlideByElement(this.$node)),
            (this.isPaused = !1),
            (this.lastVolume = 1),
            (this.parameters = t.extend(
              { autoplay: 0, loop: 0, reset: 0, volume: 1, show: 1 },
              n
            )),
            1 === parseInt(this.parameters.autoplay) &&
              0 === parseInt(this.parameters.show) &&
              s.get(),
            t(this.audio).on({
              play: t.proxy(this.onPlay, this),
              pause: t.proxy(this.onPause, this),
              ended: t.proxy(this.onEnded, this),
              timeupdate: t.proxy(this.onTimeUpdate, this),
              volumechange: t.proxy(this.onVolumechange, this)
            }),
            void (this.audio.duration >= 0
              ? this.onReady()
              : this.audio.addEventListener(
                  "loadedmetadata",
                  t.proxy(this.onReady, this)
                )))
          : void this.loadDeferred.reject()
      );
    }
    function s() {
      (window.AudioContext = window.AudioContext || window.webkitAudioContext),
        window.AudioContext !== e &&
          ((this.interaction = new Promise(
            t.proxy(function(t, e) {
              this.interactionResolver = t;
            }, this)
          )),
          (this.context = new AudioContext()),
          (this.cache = {}),
          (this.currentSource = !1),
          this.interaction.then(t.proxy(this.ready, this)),
          this.playNothing(),
          setTimeout(
            t.proxy(function() {
              0 === this.context.currentTime
                ? this.userInteractionCatcher()
                : this.interactionResolver();
            }, this),
            100
          ));
    }
    function n(t, e) {
      (this.player = t),
        (this.context = t.context),
        (this.$node = e),
        (this.src = e.data("src")),
        (this.playing = 0),
        (this.source = null);
    }
    return (
      (i.prototype.safePlay = function() {
        this.safeCallback(
          t.proxy(function() {
            (this.promise = this.audio.play()),
              this.promise &&
                Promise !== e &&
                this.promise["catch"](
                  t.proxy(function(e) {
                    if (e.message.match("user denied permission")) {
                      var i = t("<div />")
                        .data(
                          "src",
                          t(this.audio)
                            .find("source")
                            .attr("src")
                        )
                        .on({
                          play: t.proxy(this.onPlay, this),
                          ended: t.proxy(this.onEnded, this)
                        });
                      (this.fallbackAudio = s.get().createAudio(i)),
                        (this.safePlay = this.safePlaySafari),
                        this.safePlay();
                    } else if (e.message.match("interact")) {
                      var n = ".ssLayerVideo" + this.counter;
                      t("body")
                        .off(n)
                        .one(
                          "click" + n + " touchend" + n,
                          t.proxy(function() {
                            t("body").off(n),
                              this.promise !== !1 && this.safePlay();
                          }, this)
                        );
                    }
                  }, this)
                );
          }, this)
        );
      }),
      (i.prototype.safePlaySafari = function() {
        s.get().play(this.fallbackAudio);
      }),
      (i.prototype.safePause = function() {
        this.safeCallback(
          t.proxy(function() {
            this.fallbackAudio === e
              ? this.audio.pause()
              : s.get().stop(this.fallbackAudio),
              (this.promise = !1);
          }, this)
        );
      }),
      (i.prototype.safeCallback = function(t) {
        this.promise && Promise !== e ? this.promise.then(t)["catch"](t) : t();
      }),
      (i.prototype.initAutoplay = function() {
        this.isStatic
          ? this.safePlay()
          : (this.slider.sliderElement.on(
              "mainAnimationComplete",
              t.proxy(function(e, i, s, n, r) {
                t.inArray(
                  this.slide,
                  this.slider.getVisibleSlides(this.slider.slides[n])
                ) >= 0 && this.safePlay();
              }, this)
            ),
            t.inArray(this.slide, this.slider.getVisibleSlides()) >= 0 &&
              this.safePlay());
      }),
      (i.prototype.onReady = function() {
        (this.$time = this.$node.find(".n2-ss-item-audio-time")),
          this.updateTime(),
          (this.audio.volume = this.parameters.volume),
          this.$node.find(".n2-ss-item-audio-play").on(
            "click",
            t.proxy(function() {
              this.safePlay();
            }, this)
          ),
          this.$node.find(".n2-ss-item-audio-pause").on(
            "click",
            t.proxy(function() {
              this.safePause();
            }, this)
          ),
          this.$node.find(".n2-ss-item-audio-mute").on(
            "click",
            t.proxy(function() {
              this.audio.volume = 0;
            }, this)
          ),
          this.$node.find(".n2-ss-item-audio-unmute").on(
            "click",
            t.proxy(function() {
              this.audio.volume = this.lastVolume;
            }, this)
          ),
          (this.$progress = this.$node
            .find(".n2-ss-item-audio-progress-container")
            .on(
              "mousedown",
              t.proxy(function(e) {
                e.preventDefault(),
                  e.stopPropagation(),
                  this.updateUITime(e),
                  t("body").on({
                    "mousemove.volume": t.proxy(function(t) {
                      t.preventDefault(),
                        t.stopPropagation(),
                        this.updateUITime(t);
                    }, this),
                    "mouseup.volume": t.proxy(function(e) {
                      e.preventDefault(),
                        e.stopPropagation(),
                        this.updateUITime(e),
                        t("body").off(".volume");
                    }, this),
                    "mouseleave.volume": t.proxy(function() {
                      t("body").off(".volume");
                    }, this)
                  });
              }, this)
            )),
          (this.$playhead = this.$progress.find(
            ".n2-ss-item-audio-progress-playhead"
          )),
          (this.$volume = this.$node
            .find(".n2-ss-item-audio-volume-container")
            .on(
              "mousedown",
              t.proxy(function(e) {
                e.preventDefault(),
                  e.stopPropagation(),
                  this.updateUIVolume(e),
                  t("body").on({
                    "mousemove.volume": t.proxy(function(t) {
                      t.preventDefault(),
                        t.stopPropagation(),
                        this.updateUIVolume(t);
                    }, this),
                    "mouseup.volume": t.proxy(function(e) {
                      e.preventDefault(),
                        e.stopPropagation(),
                        this.updateUIVolume(e),
                        t("body").off(".volume");
                    }, this),
                    "mouseleave.volume": t.proxy(function() {
                      t("body").off(".volume");
                    }, this)
                  });
              }, this)
            )),
          (this.$volumehead = this.$volume.find(
            ".n2-ss-item-audio-volumehead"
          )),
          1 == this.parameters.autoplay &&
            this.slider.visible(t.proxy(this.initAutoplay, this)),
          this.isStatic ||
            (this.slider.sliderElement.on(
              "mainAnimationStart",
              t.proxy(function(t, e, i, s, n) {
                s != this.slideIndex && this.safePause();
              }, this)
            ),
            parseInt(this.parameters.reset) &&
              this.slider.sliderElement.on(
                "mainAnimationComplete",
                t.proxy(function(t, e, i, s, n) {
                  s != this.slideIndex &&
                    this.audio.currentTime > 0 &&
                    (this.audio.currentTime = 0);
                }, this)
              )),
          this.loadDeferred.resolve();
      }),
      (i.prototype.updateTime = function() {
        this.$time.html(
          this.timeFormat(this.audio.currentTime) +
            " / " +
            this.timeFormat(this.audio.duration)
        );
      }),
      (i.prototype.onPlay = function() {
        (this.isPaused = !1),
          this.$node.attr("data-state", "playing"),
          requestAnimationFrame(t.proxy(this.refreshCurrentTime, this)),
          this.isStatic ||
            this.slider.sliderElement.trigger("mediaStarted", this.id),
          this.$layer.triggerHandler("n2play");
      }),
      (i.prototype.onPause = function() {
        (this.isPaused = !0),
          this.$node.attr("data-state", "paused"),
          this.$layer.triggerHandler("n2pause");
      }),
      (i.prototype.onEnded = function() {
        1 == this.parameters.loop
          ? ((this.audio.currentTime = 0), this.safePlay())
          : (this.isStatic ||
              this.slider.sliderElement.trigger("mediaEnded", this.id),
            this.$layer.triggerHandler("n2stop"));
      }),
      (i.prototype.onTimeUpdate = function() {
        this.updateTime(),
          this.$playhead.css(
            "width",
            (this.audio.currentTime / this.audio.duration) * 100 + "%"
          );
      }),
      (i.prototype.onVolumechange = function() {
        this.$volumehead.css("width", 100 * this.audio.volume + "%"),
          this.$node.attr("data-volume", this.audio.volume),
          0 != this.audio.volume && (this.lastVolume = this.audio.volume);
      }),
      (i.prototype.refreshCurrentTime = function() {
        this.$playhead.css(
          "width",
          (this.audio.currentTime / this.audio.duration) * 100 + "%"
        ),
          this.isPaused ||
            requestAnimationFrame(t.proxy(this.refreshCurrentTime, this));
      }),
      (i.prototype.updateUITime = function(t) {
        this.audio.currentTime =
          this.audio.duration *
          Math.max(
            0,
            Math.min(
              0.99,
              Math.round(t.pageX - this.$progress.offset().left) /
                this.$progress.width()
            )
          );
      }),
      (i.prototype.updateUIVolume = function(t) {
        this.audio.volume = Math.max(
          0,
          Math.min(
            1,
            Math.round(t.pageX - this.$volume.offset().left) /
              this.$volume.width()
          )
        );
      }),
      (i.prototype.timeFormat = function(t) {
        t = parseInt(t);
        var e = [],
          i = parseInt(t / 60);
        t -= 60 * i;
        var s = parseInt(i / 60);
        return (
          (i -= 60 * s),
          s > 0 && e.push(this.pad(s, 2, 0)),
          e.push(this.pad(i, 2, 0)),
          e.push(this.pad(t, 2, 0)),
          e.join(":")
        );
      }),
      (i.prototype.pad = function(t, e, i) {
        return (
          (i = i || "0"),
          (t += ""),
          t.length >= e ? t : new Array(e - t.length + 1).join(i) + t
        );
      }),
      (s.inst = null),
      (s.get = function() {
        return null === s.inst && (s.inst = new s()), s.inst;
      }),
      (s.prototype.createAudio = function(t) {
        return new n(this, t);
      }),
      (s.prototype.ready = function() {
        (this.play = this.afterReadyPlay),
          (this.stop = this.afterReadyStop),
          this.preparedAudio !== e && this.play(this.preparedAudio);
      }),
      (s.prototype.play = function(t) {
        this.preparedAudio = t;
      }),
      (s.prototype.stop = function(t) {
        t === this.preparedAudio && delete this.preparedAudio;
      }),
      (s.prototype.afterReadyPlay = function(t) {
        (this.currentAudio = t), t.play();
      }),
      (s.prototype.afterReadyStop = function(t) {
        this.currentAudio === t && t.stop();
      }),
      (s.prototype.userInteractionCatcher = function() {
        t("body > *").one(
          "click",
          t.proxy(function() {
            this.playNothing(),
              setTimeout(t.proxy(this.interactionResolver, this), 30);
          }, this)
        );
      }),
      (s.prototype.playNothing = function() {
        var t = this.context.createBuffer(2, 22050, 44100),
          e = this.context.createBufferSource();
        (e.buffer = t), e.connect(this.context.destination), e.start(0);
      }),
      (n.prototype.play = function() {
        return (
          this.$node.trigger("play"),
          this.loadMusic(this.src).then(
            t.proxy(function(t) {
              this.stop(),
                (this.playing = 1),
                (this.source = this.playBuffer(t));
            }, this)
          )
        );
      }),
      (n.prototype.stop = function() {
        1 === this.playing &&
          this.source &&
          (this.source.stop(0),
          (this.playing = 0),
          this.$node.trigger("ended"));
      }),
      (n.prototype.playBuffer = function(e) {
        var i = this.context.createBufferSource();
        return (
          (i.buffer = e),
          i.connect(this.context.destination),
          i.start(0),
          setTimeout(
            t.proxy(function() {
              this.$node.trigger("ended"), (this.playing = 0);
            }, this),
            1e3 * e.duration
          ),
          i
        );
      }),
      (n.prototype.loadMusic = function(i) {
        return (
          this._load === e &&
            (this._load = new Promise(
              t.proxy(function(e, s) {
                var n = new XMLHttpRequest();
                n.open("GET", i, !0),
                  (n.responseType = "arraybuffer"),
                  (n.onload = t.proxy(function() {
                    this.context.decodeAudioData(
                      n.response,
                      t.proxy(function(t) {
                        e(t);
                      }),
                      function(t) {
                        s(t);
                      }
                    );
                  }, this)),
                  n.send();
              }, this)
            )),
          this._load
        );
      }),
      i
    );
  }),
  N2D("FrontendItemCaption", function(t, e) {
    function i(e, i, s, n, r) {
      (this.startCSS = null),
        (this.slider = e),
        (this.mode = s),
        (this.direction = n),
        (this.scale = r),
        (this.node = t("#" + i)
          .on("mouseenter", t.proxy(this["in"], this))
          .on("mouseleave", t.proxy(this.out, this))),
        (this.image = this.node.find("img")),
        (this.content = this.node.find(".n2-ss-item-caption-content")),
        this["init" + s]();
    }
    return (
      (i.prototype.initSimple = function() {
        var e = { height: "auto" };
        switch (this.direction) {
          case "left":
            (e.bottom = 0),
              (e.left = "-100%"),
              (this.startCSS = { left: "-100%" });
            break;
          case "right":
            (e.bottom = 0),
              (e.right = "-100%"),
              (this.startCSS = { right: "-100%" });
            break;
          default:
            (e.left = 0),
              this.resizeSimple(),
              this.slider.sliderElement.on(
                "SliderResize",
                t.proxy(this.resizeSimple, this)
              ),
              (this._out = this._outSimple);
        }
        this.content.css(e);
      }),
      (i.prototype.resizeSimple = function() {
        var t = {};
        (t[this.direction] = -this.content.height()), this.content.css(t);
      }),
      (i.prototype._outSimple = function() {
        var t = {};
        (t[this.direction] = -this.content.height()), this.tweenContent(t);
      }),
      (i.prototype.initFull = function() {
        var t = {};
        switch (this.direction) {
          case "left":
            (t.bottom = 0),
              (t.left = "-100%"),
              (this.startCSS = { left: "-100%" });
            break;
          case "right":
            (t.bottom = 0),
              (t.right = "-100%"),
              (this.startCSS = { right: "-100%" });
            break;
          case "top":
            (t.left = 0), (t.top = "-100%"), (this.startCSS = { top: "-100%" });
            break;
          case "bottom":
            (t.left = 0),
              (t.bottom = "-100%"),
              (this.startCSS = { bottom: "-100%" });
        }
        this.content.css(t);
      }),
      (i.prototype.initFade = function() {
        this.content.css({ opacity: 0, left: 0, top: 0 }),
          (this._in = this._inFade),
          (this._out = this._outFade);
      }),
      (i.prototype._inFade = function() {
        this.tweenContent({ opacity: 1 });
      }),
      (i.prototype._outFade = function() {
        this.tweenContent({ opacity: 0 });
      }),
      (i.prototype["in"] = function() {
        this._in(), this.scale && this.tweenImage({ scale: 1.2 });
      }),
      (i.prototype._in = function() {
        var t = {};
        (t[this.direction] = 0), this.tweenContent(t);
      }),
      (i.prototype.out = function() {
        this._out(), this.scale && this.tweenImage({ scale: 1 });
      }),
      (i.prototype._out = function() {
        this.tweenContent(this.startCSS);
      }),
      (i.prototype.tweenContent = function(t) {
        NextendTween.to(this.content, 0.5, t);
      }),
      (i.prototype.tweenImage = function(t) {
        NextendTween.to(this.image, 0.5, t);
      }),
      i
    );
  }),
  N2D("FrontendItemCounter", function(t, e) {
    function i(e, i, s) {
      (this.slider = e),
        (this.data = s),
        (this.currentPercent = 0),
        (this.node = t(i).data("counter", this)),
        (this.$layer = this.node.closest(".n2-ss-layer")),
        this.start();
    }
    return (
      (i.prototype.start = function() {
        this.slider.started(t.proxy(this.started, this));
      }),
      (i.prototype.started = function() {
        (this.delay = (+this.data.delay || 0) / 1e3),
          this.data.displayMode &&
            (this.$display = this.node.find(this.data.display)),
          (this.$countingDiv = this.node.find(this.data.counting)),
          this.$layer.on(
            "collectRelatedAnimations.counter",
            t.proxy(this.collectRelatedAnimations, this)
          ),
          (this.timeline = new NextendTimeline({ paused: 1 }));
        var e = { percent: this.data.fromPercent };
        (this.currentPercent = this.data.fromPercent),
          this.timeline.to(
            e,
            this.data.duration / 1e3,
            this._animateData(e, this.data.toPercent)
          );
      }),
      (i.prototype.collectRelatedAnimations = function(t, e) {
        e["in"].push(
          new N2Classes.AnimationsRelated(this, "extendTimeline", "refresh")
        );
      }),
      (i.prototype.extendTimeline = function(t, e, i, s) {
        t.add(this.timeline, e + this.delay), this.timeline.paused(!1);
      }),
      (i.prototype.refresh = function(t, e) {
        this.timeline.progress(0.9999).pause(0, !1);
      }),
      (i.prototype._animateData = function(e, i, s) {
        return (
          (s = s || "easeOutExpo"),
          {
            percent: i,
            ease: s,
            onUpdate: t.proxy(function() {
              switch (
                ((this.currentPercent = e.percent), this.data.displayMode)
              ) {
                case "circle":
                  this.$display.attr(
                    "stroke-dashoffset",
                    (1 - e.percent) * this.data.c
                  );
                  break;
                case "width":
                  this.$display.css("width", 100 * e.percent + "%");
              }
              this.$countingDiv.html(
                this.data.pre +
                  (
                    this.data.min +
                    e.percent * (this.data.total - this.data.min)
                  ).toFixed(0) +
                  this.data.post
              );
            }, this)
          }
        );
      }),
      i
    );
  }),
  N2D("FrontendItemHighlightedHeading", function(t, e) {
    function i(e, i) {
      i.disableLayerAnimations ||
        ((this.slider = i),
        (this.$el = t(e)),
        (this.$layer = this.$el.closest(".n2-ss-layer")),
        this.$el
          .siblings(
            ".n2-ss-highlighted-heading-before,.n2-ss-highlighted-heading-after"
          )
          .each(function() {
            for (
              var e = t(this),
                i = e.html().split(" "),
                s = e.attr("class"),
                n = [],
                r = 0;
              r < i.length;
              r++
            )
              n.push('<div class="' + s + '">' + i[r] + "</div>");
            e.replaceWith(n.join(" "));
          }),
        this.start());
    }
    return (
      (i.prototype.start = function() {
        this.slider.started(t.proxy(this.started, this));
      }),
      (i.prototype.started = function() {
        (this.delay = (+this.$el.data("delay") || 0) / 1e3),
          (this.duration =
            Math.max(+this.$el.data("duration") || 1500, 1) / 1e3),
          (this.loop = +this.$el.data("loop") || 0);
        var e = +this.$el.data("loop-delay");
        isFinite(e) || (e = 2e3),
          (this.loopDelay = e / 1e3),
          (this.$paths = this.$el.find("path")),
          this.$layer.on(
            "collectRelatedAnimations.highlightedHeading",
            t.proxy(this.collectRelatedAnimations, this)
          ),
          (this.timeline = new NextendTimeline({ paused: 1 }));
        for (var i = 0; i < this.$paths.length; i++)
          this.animatePath(this.$paths[i], 0.6 * this.duration * i);
        this.loop &&
          this.loopDelay >= 0 &&
          (this.timeline.to(
            this.$paths,
            0.4,
            { opacity: 0 },
            "+=" + this.loopDelay
          ),
          this.timeline.set({}, {}, "+=0.4")),
          this.timeline.delay(this.delay);
      }),
      (i.prototype.collectRelatedAnimations = function(t, e, i, s) {
        1 === this.loop
          ? e.loop.push(new N2Classes.AnimationsLoopTimeline(this, 0))
          : e["in"].push(
              new N2Classes.AnimationsRelated(this, "extendTimeline", "refresh")
            );
      }),
      (i.prototype.extendTimeline = function(t, e, i, s) {
        t.add(this.timeline, e), this.timeline.paused(!1);
      }),
      (i.prototype.refresh = function(t, e) {
        this.timeline.progress(0.9999).pause(0, !1);
      }),
      (i.prototype.getLoopTimeline = function() {
        return this.timeline;
      }),
      (i.prototype.animatePath = function(t, e) {
        var i = Math.round(1.01 * (t.getTotalLength() || 2e3));
        this.timeline.fromTo(t, 0.1, { opacity: 0 }, { opacity: 1 }, e),
          this.timeline.fromTo(
            t,
            this.duration,
            { "stroke-dasharray": "0 " + i },
            { "stroke-dasharray": i + " " + i },
            e
          );
      }),
      i
    );
  }),
  N2D("FrontendItemHeadingSplitText", function(t, e) {
    function i(e, i, s, n, r, o, a, l) {
      if ((r || a) && !e.disableLayerAnimations) {
        (this.node = t("#" + i)), (this.slider = e), (this.splitText = !1);
        var h = this.node.find("a");
        h.length && (this.node = h),
          (this.$layer = this.node.closest(".n2-ss-layer")),
          this.start(s, n, r, o, a, l);
      }
    }
    var s = {
      opacity: 1,
      x: 0,
      y: 0,
      rotationX: 0,
      rotationY: 0,
      rotationZ: 0,
      scale: 1
    };
    return (
      (i.prototype.start = function(e, i, s, n, r, o) {
        this.slider.started(t.proxy(this.started, this, e, i, s, n, r, o));
      }),
      (i.prototype.started = function(e, i, n, r, o, a) {
        var l = { chars: 0, words: 0, lines: 0 };
        n
          ? ((this.splitTextIn = this.optimize(n.data, r)),
            (l[this.splitTextIn.mode] = 1))
          : (this.splitTextIn = !1),
          o
            ? ((this.splitTextOut = this.optimize(o.data, a)),
              (l[this.splitTextOut.mode] = 1))
            : (this.splitTextOut = !1),
          (this.modes = []);
        for (var h in l) l[h] && this.modes.push(h);
        if (
          (l.chars && !l.words && this.modes.push("words"),
          "words,chars" === l && (l = "chars"),
          this.$layer.on(
            "refreshTimeline.splitText",
            t.proxy(this.refreshTimeline, this)
          ),
          (this.splitText = new NextendSplitText(this.node, {
            type: this.modes.join(",")
          })),
          this.splitTextIn)
        ) {
          this.timelineIn = new NextendTimeline({ paused: 1 });
          var d = this.splitTextIn,
            p = { ease: d.ease };
          this._animate(
            this.timelineIn,
            d.mode,
            d.sort,
            d.duration,
            t.extend(!0, {}, d.from),
            t.extend(!0, p, s),
            d.stagger
          );
        } else this.timelineIn = !1;
        if (this.splitTextOut) {
          this.timelineOut = new NextendTimeline({ paused: 1 });
          var d = this.splitTextOut,
            p = { ease: d.ease };
          this.splitTextIn && (p.immediateRender = !1),
            this._animate(
              this.timelineOut,
              d.mode,
              d.sort,
              d.duration,
              t.extend(!0, {}, s),
              t.extend(!0, p, d.from),
              -d.stagger
            );
        } else this.timelineOut = !1;
        (this.timelineIn || this.timelineOut) &&
          this.$layer.on(
            "collectRelatedAnimations.splitText",
            t.proxy(this.collectRelatedAnimations, this)
          ),
          NextendTween.set(this.$layer, { perspective: 1e3 }),
          this.node.css("text-rendering", "auto");
        for (var h in l)
          l[h] &&
            NextendTween.set(this.splitText[h], {
              transformOrigin: e,
              backfaceVisibility: i
            });
      }),
      (i.prototype.collectRelatedAnimations = function(t, e) {
        this.timelineIn &&
          e["in"].push(
            new N2Classes.AnimationsRelated(
              this,
              "extendTimelineIn",
              "refreshIn"
            )
          ),
          this.timelineOut &&
            e.out.push(
              new N2Classes.AnimationsRelated(
                this,
                "extendTimelineOut",
                "refreshOut"
              )
            );
      }),
      (i.prototype.extendTimelineIn = function(t, e, i, s) {
        t.add(this.timelineIn, e + this.splitTextIn.delay),
          this.timelineIn.paused(!1);
      }),
      (i.prototype.refreshIn = function(t, e) {
        this.timelineIn.progress(0.9999).pause(0, !1);
      }),
      (i.prototype.extendTimelineOut = function(t, e, i, s) {
        t.add(this.timelineOut, e + this.splitTextOut.delay),
          this.timelineOut.paused(!1);
      }),
      (i.prototype.refreshOut = function(t, e) {
        this.timelineOut.progress(0.9999).pause(0, !1);
      }),
      (i.prototype._animate = function(e, i, s, n, r, o, a) {
        var l = t.extend([], this.splitText[i]),
          h = null;
        switch (s) {
          case "reversed":
            l.reverse();
            break;
          case "random":
            var d = function(t, e, i, s) {
              for (i = t.length; i; )
                (e = (Math.random() * i--) | 0),
                  (s = t[i]),
                  (t[i] = t[e]),
                  (t[e] = s);
            };
            d(l);
            break;
          case "side":
          case "center":
            var p = [];
            for (h = []; l.length > 1; ) p.push(l.shift()), h.push(l.pop());
            1 === l.length && p.push(l.shift()),
              (l = p),
              "center" === s && (l.reverse(), h.reverse());
            break;
          case "sideShifted":
          case "centerShifted":
            for (var p = []; l.length > 1; ) p.push(l.shift()), p.push(l.pop());
            1 === l.length && p.push(l.shift()),
              (l = p),
              "centerShifted" === s && l.reverse();
        }
        e.staggerFromTo(l, n, r, o, a),
          h && h.length && e.staggerFromTo(h, n, r, o, a);
      }),
      (i.prototype.optimize = function(t, e) {
        var i = {
          mode: t.mode,
          sort: t.sort,
          duration: t.duration,
          stagger: t.stagger,
          delay: e,
          from: {},
          ease: t.ease
        };
        return (
          1 != t.opacity && (i.from.opacity = t.opacity),
          1 != t.scale && (i.from.scale = t.scale),
          0 != t.x && (i.from.x = t.x),
          0 != t.y && (i.from.y = t.y),
          0 != t.rotationX && (i.from.rotationX = t.rotationX),
          0 != t.rotationY && (i.from.rotationY = t.rotationY),
          0 != t.rotationZ && (i.from.rotationZ = t.rotationZ),
          i
        );
      }),
      i
    );
  }),
  N2D("FrontendItemTransition", function(t, e) {
    function i(e, i, s) {
      (this.slider = e),
        n2const.isIE && (s = "Fade"),
        (this.animation = s),
        (this.node = t("#" + i)
          .on("mouseenter", t.proxy(this["in" + s], this))
          .on("mouseleave", t.proxy(this["out" + s], this))),
        (this.images = this.node.find("img")),
        (this.inner = this.node.find(".n2-ss-item-transition-inner")),
        this["init" + s]();
    }
    return (
      (i.prototype.initFade = function() {
        this.images.eq(1).css("opacity", 0);
      }),
      (i.prototype.inFade = function() {
        NextendTween.to(this.images.eq(1), 0.5, { opacity: 1 }),
          NextendTween.to(this.images.eq(0), 0.5, { opacity: 0 });
      }),
      (i.prototype.outFade = function() {
        NextendTween.to(this.images.eq(1), 0.5, { opacity: 0 }),
          NextendTween.to(this.images.eq(0), 0.5, { opacity: 1 });
      }),
      (i.prototype.initVerticalFlip = function() {
        NextendTween.set(this.inner, { perspective: 1e3 }),
          NextendTween.set(this.images.eq(0), {
            rotationX: 0,
            backfaceVisibility: "hidden"
          }),
          NextendTween.set(this.images.eq(1), {
            rotationX: 180,
            backfaceVisibility: "hidden"
          });
      }),
      (i.prototype.inVerticalFlip = function() {
        NextendTween.to(this.images.eq(0), 0.5, {
          rotationX: -180,
          backfaceVisibility: "hidden"
        }),
          NextendTween.to(this.images.eq(1), 0.5, {
            rotationX: 0,
            backfaceVisibility: "hidden"
          });
      }),
      (i.prototype.outVerticalFlip = function() {
        NextendTween.to(this.images.eq(0), 0.5, {
          rotationX: 0,
          backfaceVisibility: "hidden"
        }),
          NextendTween.to(this.images.eq(1), 0.5, {
            rotationX: 180,
            backfaceVisibility: "hidden"
          });
      }),
      (i.prototype.initHorizontalFlip = function() {
        NextendTween.set(this.inner, { perspective: 1e3 }),
          NextendTween.set(this.images.eq(0), {
            rotationY: 0,
            backfaceVisibility: "hidden"
          }),
          NextendTween.set(this.images.eq(1), {
            rotationY: 180,
            backfaceVisibility: "hidden"
          });
      }),
      (i.prototype.inHorizontalFlip = function() {
        NextendTween.to(this.images.eq(0), 0.5, {
          rotationY: -180,
          backfaceVisibility: "hidden"
        }),
          NextendTween.to(this.images.eq(1), 0.5, {
            rotationY: 0,
            backfaceVisibility: "hidden"
          });
      }),
      (i.prototype.outHorizontalFlip = function() {
        NextendTween.to(this.images.eq(0), 0.5, {
          rotationY: 0,
          backfaceVisibility: "hidden"
        }),
          NextendTween.to(this.images.eq(1), 0.5, {
            rotationY: 180,
            backfaceVisibility: "hidden"
          });
      }),
      i
    );
  }),
  N2D("FrontendItemVideo", function(t, e) {
    function i(e, i, n) {
      (this.state = { scroll: !1, slide: !1, play: !1, continuePlay: !1 }),
        (this.counter = s++),
        (this.slider = e),
        (this.playerId = i),
        (this.playerElement = t("#" + this.playerId)),
        (this.videoPlayer = this.playerElement.get(0)),
        (this.parameters = t.extend(
          { autoplay: 0, loop: 0, center: 0, reset: 0 },
          n
        )),
        (this.slide = e.findSlideByElement(this.videoPlayer));
      var r = this.playerElement.data("volume");
      0 === r
        ? ((this.videoPlayer.volume = 1), (this.videoPlayer.muted = !0))
        : ((this.videoPlayer.volume = r), (this.videoPlayer.muted = !1)),
        this.slider.sliderElement.on(
          "BeforeVisible",
          t.proxy(function() {
            this.videoPlayer.videoWidth > 0
              ? this.initVideoPlayer()
              : this.videoPlayer.addEventListener(
                  "loadedmetadata",
                  t.proxy(this.initVideoPlayer, this)
                );
          }, this)
        );
    }
    var s = 1;
    return (
      (i.prototype.initVideoPlayer = function() {
        1 === parseInt(this.parameters.center) &&
          (this.onResize(),
          this.slider.sliderElement.on(
            "SliderResize",
            t.proxy(this.onResize, this)
          ));
        var e = this.playerElement.parent();
        (this.isStatic = e.closest(".n2-ss-static-slide").length),
          this.playerElement
            .on(
              "playing",
              t.proxy(function() {
                this.isStatic ||
                  this.slider.sliderElement.trigger(
                    "mediaStarted",
                    this.playerId
                  ),
                  e.triggerHandler("n2play");
              }, this)
            )
            .on(
              "ended",
              t.proxy(function() {
                1 === parseInt(this.parameters.loop)
                  ? ((this.videoPlayer.currentTime = 0), this.safePlay())
                  : (this.isStatic ||
                      this.slider.sliderElement.trigger(
                        "mediaEnded",
                        this.playerId
                      ),
                    e.triggerHandler("n2stop"),
                    this.setState("play", !1));
              }, this)
            ),
          this.playerElement.on(
            "pause",
            t.proxy(function() {
              e.triggerHandler("n2pause"),
                this.state.continuePlay
                  ? (this.setState("continuePlay", !1),
                    this.setState("play", !0))
                  : this.setState("play", !1);
            }, this)
          ),
          (this.isStatic ||
            -1 !==
              t.inArray(
                this.slide,
                this.slider.getVisibleSlides(this.slider.currentSlide)
              )) &&
            this.setState("slide", !0, !0),
          1 === parseInt(this.parameters.autoplay) &&
            this.slider.visible(t.proxy(this.initAutoplay, this)),
          this.isStatic ||
            (this.slider.sliderElement.on(
              "mainAnimationStart",
              t.proxy(function(e, i, s, n, r) {
                -1 ===
                t.inArray(
                  this.slide,
                  this.slider.getVisibleSlides(this.slider.slides[n])
                )
                  ? this.setState("slide", !1, !0)
                  : this.setState("slide", !0, !0);
              }, this)
            ),
            parseInt(this.parameters.reset) &&
              this.slider.sliderElement.on(
                "mainAnimationComplete",
                t.proxy(function(e, i, s, n, r) {
                  this.videoPlayer.currentTime > 0 &&
                    -1 ===
                      t.inArray(
                        this.slide,
                        this.slider.getVisibleSlides(this.slider.slides[n])
                      ) &&
                    (this.videoPlayer.currentTime = 0);
                }, this)
              )),
          "" !== this.parameters["scroll-pause"]
            ? N2Classes.ScrollTracker.add(
                this.playerElement,
                this.parameters["scroll-pause"],
                t.proxy(function() {
                  this.setState("scroll", !0, !0);
                }, this),
                t.proxy(function() {
                  this.setState("continuePlay", !0),
                    this.setState("scroll", !1, !0);
                }, this)
              )
            : this.setState("scroll", !0, !0);
      }),
      (i.prototype.onResize = function() {
        var t = this.playerElement.parent(),
          e = t.width(),
          i = t.height(),
          s = this.videoPlayer.videoWidth / this.videoPlayer.videoHeight,
          n = { width: e, height: i, marginTop: 0 };
        (n[n2const.rtl.marginLeft] = 0),
          e / i > s
            ? ((n.height = e * s), (n.marginTop = (i - n.height) / 2))
            : ((n.width = i * s),
              (n[n2const.rtl.marginLeft] = (e - n.width) / 2)),
          this.playerElement.css(n);
      }),
      (i.prototype.initAutoplay = function() {
        this.isStatic
          ? (this.setState("play", !0), this.setState("slide", !0, !0))
          : (this.slider.sliderElement.on(
              "mainAnimationComplete",
              t.proxy(function(e, i, s, n, r) {
                t.inArray(
                  this.slide,
                  this.slider.getVisibleSlides(this.slider.slides[n])
                ) >= 0 && this.playerElement.is(":visible")
                  ? (this.setState("play", !0),
                    setTimeout(
                      t.proxy(function() {
                        this.setState("slide", !0, !0);
                      }, this),
                      100
                    ))
                  : this.setState("slide", !1, !0);
              }, this)
            ),
            t.inArray(this.slide, this.slider.getVisibleSlides()) >= 0 &&
              (this.setState("play", !0), this.setState("slide", !0, !0)));
      }),
      (i.prototype.setState = function(t, e, i) {
        (i = i || !1),
          (this.state[t] = e),
          i &&
            (this.state.play && this.state.slide && this.state.scroll
              ? this.safePlay()
              : this.safePause());
      }),
      (i.prototype.safePlay = function() {
        this.safeCallback(
          t.proxy(function() {
            (this.promise = this.videoPlayer.play()),
              this.promise &&
                Promise !== e &&
                this.promise["catch"](
                  t.proxy(function(e) {
                    if (e.message.match("interact")) {
                      var i = ".ssLayerVideo" + this.counter;
                      t("body")
                        .off(i)
                        .one(
                          "click" + i + " touchend" + i,
                          t.proxy(function() {
                            t("body").off(i),
                              this.promise !== !1 && this.safePlay();
                          }, this)
                        );
                    }
                  }, this)
                );
          }, this)
        );
      }),
      (i.prototype.safePause = function() {
        this.safeCallback(
          t.proxy(function() {
            this.videoPlayer.pause(), (this.promise = !1);
          }, this)
        );
      }),
      (i.prototype.safeCallback = function(t) {
        this.promise && Promise !== e ? this.promise.then(t)["catch"](t) : t();
      }),
      i
    );
  }),
  N2D("FrontendItemVimeo", function(t, e) {
    function i(e, i, s, n, r, o) {
      (this.state = { scroll: !1, slide: !1, play: !1, continuePlay: !1 }),
        (this.readyDeferred = t.Deferred()),
        (this.slider = e),
        (this.playerId = i),
        (this.$playerElement = t("#" + this.playerId)),
        (this.$cover = this.$playerElement.find(".n2-ss-layer-player-cover")),
        (this.start = o),
        (this.parameters = t.extend(
          {
            vimeourl: "//vimeo.com/144598279",
            autoplay: "0",
            reset: "0",
            title: "1",
            byline: "1",
            portrait: "0",
            loop: "0",
            color: "00adef",
            volume: "-1"
          },
          n
        )),
        navigator.userAgent.toLowerCase().indexOf("android") > -1 &&
          (this.parameters.autoplay = 0),
        1 === parseInt(this.parameters.autoplay) || !r || n2const.isMobile
          ? this.ready(t.proxy(this.initVimeoPlayer, this))
          : this.ready(
              t.proxy(function() {
                this.$playerElement.on(
                  "click.vimeo n2click.vimeo",
                  t.proxy(function(t) {
                    this.$playerElement.off(".vimeo"),
                      t.preventDefault(),
                      t.stopPropagation(),
                      this.initVimeoPlayer(),
                      this.safePlay();
                  }, this)
                );
              }, this)
            );
    }
    return (
      (i.vimeoDeferred = null),
      (i.prototype.ready = function(e) {
        null === i.vimeoDeferred &&
          (i.vimeoDeferred = t.getScript(
            "https://player.vimeo.com/api/player.js"
          )),
          i.vimeoDeferred.done(e);
      }),
      (i.prototype.initVimeoPlayer = function() {
        var e = t(
          '<iframe allow="autoplay; encrypted-media" id="' +
            this.playerId +
            '-frame" src="https://player.vimeo.com/video/' +
            this.parameters.vimeocode +
            "?autoplay=0&_video&title=" +
            this.parameters.title +
            "&byline=" +
            this.parameters.byline +
            "&background=" +
            this.parameters.background +
            "&portrait=" +
            this.parameters.portrait +
            "&color=" +
            this.parameters.color +
            "&loop=" +
            this.parameters.loop +
            ("-1" == this.parameters.quality
              ? ""
              : "&quality=" + this.parameters.quality) +
            '" style="position: absolute; top:0; left: 0; width: 100%; height: 100%;" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'
        );
        this.$playerElement.prepend(e),
          (this.isStatic = e.closest(".n2-ss-static-slide").length),
          (this.player = new Vimeo.Player(e[0], { autoplay: !0 })),
          (this.promise = this.player.ready()),
          this.promise.then(t.proxy(this.onReady, this));
      }),
      (i.prototype.onReady = function() {
        var e = parseFloat(this.parameters.volume);
        e >= 0 && this.setVolume(e),
          (this.slide = this.slider.findSlideByElement(this.$playerElement));
        var i = this.$playerElement.closest(".n2-ss-layer");
        this.$cover.length &&
          (n2const.isMobile && this.$cover.css("pointer-events", "none"),
          i.one(
            "n2play",
            t.proxy(function() {
              NextendTween.to(this.$cover, 0.3, {
                opacity: 0,
                onComplete: t.proxy(function() {
                  this.$cover.remove();
                }, this)
              });
            }, this)
          )),
          this.player.on(
            "play",
            t.proxy(function() {
              this.isStatic ||
                this.slider.sliderElement.trigger(
                  "mediaStarted",
                  this.playerId
                ),
                i.triggerHandler("n2play");
            }, this)
          ),
          this.player.on(
            "pause",
            t.proxy(function() {
              i.triggerHandler("n2pause"),
                this.state.continuePlay
                  ? (this.setState("continuePlay", !1),
                    this.setState("play", !0))
                  : this.setState("play", !1);
            }, this)
          ),
          this.player.on(
            "ended",
            t.proxy(function() {
              this.isStatic ||
                this.slider.sliderElement.trigger("mediaEnded", this.playerId),
                i.triggerHandler("n2stop"),
                this.setState("play", !1);
            }, this)
          ),
          this.isStatic ||
            this.slider.sliderElement.on(
              "mainAnimationStart",
              t.proxy(function(e, i, s, n, r) {
                -1 ==
                t.inArray(
                  this.slide,
                  this.slider.getVisibleSlides(this.slider.slides[n])
                )
                  ? (parseInt(this.parameters.reset) && this.reset(),
                    this.setState("slide", !1, !0))
                  : this.setState("slide", !0, !0);
              }, this)
            ),
          "" !== this.parameters["scroll-pause"]
            ? N2Classes.ScrollTracker.add(
                this.$playerElement,
                this.parameters["scroll-pause"],
                t.proxy(function() {
                  this.setState("scroll", !0, !0);
                }, this),
                t.proxy(function() {
                  this.setState("continuePlay", !0),
                    this.setState("scroll", !1, !0);
                }, this)
              )
            : this.setState("scroll", !0, !0),
          (this.isStatic ||
            -1 !==
              t.inArray(
                this.slide,
                this.slider.getVisibleSlides(this.slider.currentSlide)
              )) &&
            this.setState("slide", !0, !0),
          1 === parseInt(this.parameters.autoplay) &&
            this.slider.visible(t.proxy(this.initAutoplay, this)),
          this.readyDeferred.resolve();
      }),
      (i.prototype.initAutoplay = function() {
        this.isStatic
          ? (this.setState("play", !0), this.setState("slide", !0, !0))
          : (this.slider.sliderElement.on(
              "mainAnimationComplete",
              t.proxy(function(e, i, s, n, r) {
                t.inArray(
                  this.slide,
                  this.slider.getVisibleSlides(this.slider.slides[n])
                ) >= 0
                  ? (this.setState("play", !0), this.setState("slide", !0, !0))
                  : this.setState("slide", !1, !0);
              }, this)
            ),
            t.inArray(this.slide, this.slider.getVisibleSlides()) >= 0 &&
              (this.setState("play", !0), this.setState("slide", !0, !0)));
      }),
      (i.prototype.setState = function(t, e, i) {
        (i = i || !1),
          (this.state[t] = e),
          i &&
            (this.state.play && this.state.slide && this.state.scroll
              ? this.play()
              : this.pause());
      }),
      (i.prototype.play = function() {
        this.slider.sliderElement.trigger("mediaStarted", this.playerId),
          0 != this.start && this.safeSetCurrentTime(this.start),
          this.safePlay(),
          this.player
            .getCurrentTime()
            .then(
              t.proxy(function(t) {
                t < this.start &&
                  0 != this.start &&
                  this.safeSetCurrentTime(this.start),
                  this.safePlay();
              }, this)
            )
            ["catch"](
              t.proxy(function(t) {
                this.safePlay();
              }, this)
            );
      }),
      (i.prototype.pause = function() {
        this.safePause();
      }),
      (i.prototype.reset = function() {
        this.safeSetCurrentTime(this.start);
      }),
      (i.prototype.setVolume = function(e) {
        this.safeCallback(
          t.proxy(function() {
            this.promise = this.player.setVolume(e);
          }, this)
        );
      }),
      (i.prototype.safeSetCurrentTime = function(e) {
        this.safeCallback(
          t.proxy(function() {
            this.promise = this.player.setCurrentTime(e);
          }, this)
        );
      }),
      (i.prototype.safePlay = function() {
        this.safeCallback(
          t.proxy(function() {
            (this.promise = this.player.getPaused()),
              this.safeCallback(
                t.proxy(function(t) {
                  t && (this.promise = this.player.play());
                }, this)
              );
          }, this)
        );
      }),
      (i.prototype.safePause = function() {
        this.safeCallback(
          t.proxy(function() {
            (this.promise = this.player.getPaused()),
              this.safeCallback(
                t.proxy(function(t) {
                  t || (this.promise = this.player.pause());
                }, this)
              );
          }, this)
        );
      }),
      (i.prototype.safeCallback = function(t) {
        this.promise && Promise !== e ? this.promise.then(t)["catch"](t) : t();
      }),
      i
    );
  }),
  N2D("FrontendItemYouTube", function(t, e) {
    function i(e, i, s, n) {
      (this.state = { scroll: !1, slide: !1, play: !1, continuePlay: !1 }),
        (this.readyDeferred = t.Deferred()),
        (this.slider = e),
        (this.playerId = i),
        (this.$playerElement = t("#" + this.playerId)),
        (this.$cover = this.$playerElement.find(".n2-ss-layer-player-cover")),
        (this.parameters = t.extend(
          {
            youtubeurl: "//www.youtube.com/watch?v=MKmIwHAFjSU",
            youtubecode: "MKmIwHAFjSU",
            center: 0,
            autoplay: "1",
            related: "1",
            volume: "-1",
            loop: 0,
            modestbranding: 1,
            reset: 0,
            query: [],
            playsinline: 0
          },
          s
        )),
        1 === parseInt(this.parameters.autoplay) || !n || n2const.isMobile
          ? this.ready(t.proxy(this.initYoutubePlayer, this))
          : this.$playerElement.on(
              "click.youtube n2click.youtube",
              t.proxy(function(e) {
                this.$playerElement.off(".youtube"),
                  e.preventDefault(),
                  e.stopPropagation(),
                  this.ready(
                    t.proxy(function() {
                      this.readyDeferred.done(
                        t.proxy(function() {
                          this.play();
                        }, this)
                      ),
                        this.initYoutubePlayer();
                    }, this)
                  );
              }, this)
            );
    }
    return (
      (i.YTDeferred = null),
      (i.prototype.ready = function(s) {
        null === i.YTDeferred &&
          ((i.YTDeferred = t.Deferred()),
          window.YT === e && t.getScript("https://www.youtube.com/iframe_api"),
          (function(t) {
            var i = function() {
              window.YT !== e && window.YT.loaded
                ? t.resolve()
                : setTimeout(i, 100);
            };
            i();
          })(i.YTDeferred)),
          i.YTDeferred.done(s);
      }),
      (i.prototype.initYoutubePlayer = function() {
        var e = this.$playerElement.closest(".n2-ss-layer");
        this.$cover.length &&
          (n2const.isMobile && this.$cover.css("pointer-events", "none"),
          e.one(
            "n2play",
            t.proxy(function() {
              NextendTween.to(this.$cover, 0.3, {
                opacity: 0,
                onComplete: t.proxy(function() {
                  this.$cover.remove();
                }, this)
              });
            }, this)
          )),
          (this.isStatic = this.$playerElement.closest(
            ".n2-ss-static-slide"
          ).length);
        var i = {
          enablejsapi: 1,
          origin: window.location.protocol + "//" + window.location.host,
          wmode: "opaque",
          rel: this.parameters.related,
          start: this.parameters.start,
          modestbranding: this.parameters.modestbranding,
          playsinline: this.parameters.playsinline
        };
        if (1 === parseInt(this.parameters.autoplay))
          if (navigator.userAgent.toLowerCase().indexOf("android") > -1)
            this.parameters.volume = 0;
          else if (n2const.isIOS) {
            this.parameters.autoplay = 0;
            try {
              "playsInline" in document.createElement("video") &&
                ((this.parameters.autoplay = 1),
                (this.parameters.volume = 0),
                (i.playsinline = 1));
            } catch (s) {}
          }
        n2const.isIOS &&
          this.parameters.controls &&
          (i.use_native_controls = 1),
          1 == this.parameters.center && (i.controls = 0),
          1 != this.parameters.controls && ((i.autohide = 1), (i.controls = 0)),
          +(
            navigator.platform.toUpperCase().indexOf("MAC") >= 0 &&
            navigator.userAgent.search("Firefox") > -1
          ) && (i.html5 = 1);
        for (var n in this.parameters.query)
          this.parameters.query.hasOwnProperty(n) &&
            (i[n] = this.parameters.query[n]);
        var r = {
          videoId: this.parameters.youtubecode,
          wmode: "opaque",
          playerVars: i,
          events: {
            onReady: t.proxy(this.onReady, this),
            onStateChange: t.proxy(function(t) {
              switch (t.data) {
                case YT.PlayerState.PLAYING:
                  this.isStatic ||
                    this.slider.sliderElement.trigger(
                      "mediaStarted",
                      this.playerId
                    ),
                    e.triggerHandler("n2play");
                  break;
                case YT.PlayerState.PAUSED:
                  e.triggerHandler("n2pause"),
                    this.state.continuePlay
                      ? (this.setState("continuePlay", !1),
                        this.setState("play", !0))
                      : this.setState("play", !1);
                  break;
                case YT.PlayerState.ENDED:
                  1 == this.parameters.loop
                    ? (this.player.seekTo(0), this.player.playVideo())
                    : (this.isStatic ||
                        this.slider.sliderElement.trigger(
                          "mediaEnded",
                          this.playerId
                        ),
                      e.triggerHandler("n2stop"),
                      this.setState("play", !1));
              }
            }, this)
          }
        };
        this.parameters["privacy-enhanced"] &&
          (r.host = "https://www.youtube-nocookie.com"),
          (this.player = new YT.Player(this.playerId + "-frame", r)),
          (this.slide = this.slider.findSlideByElement(this.$playerElement)),
          1 == this.parameters.center &&
            (this.$playerElement.parent().css("overflow", "hidden"),
            this.onResize(),
            this.slider.sliderElement.on(
              "SliderResize",
              t.proxy(this.onResize, this)
            ));
      }),
      (i.prototype.onReady = function() {
        var e = parseFloat(this.parameters.volume);
        e > 0 ? this.setVolume(e) : -1 !== e && this.player.mute(),
          (this.isStatic ||
            -1 !==
              t.inArray(
                this.slide,
                this.slider.getVisibleSlides(this.slider.currentSlide)
              )) &&
            this.setState("slide", !0, !0),
          1 == this.parameters.autoplay &&
            this.slider.visible(t.proxy(this.initAutoplay, this)),
          this.isStatic ||
            (this.slider.sliderElement.on(
              "mainAnimationStart",
              t.proxy(function(e, i, s, n) {
                -1 ==
                t.inArray(
                  this.slide,
                  this.slider.getVisibleSlides(this.slider.slides[n])
                )
                  ? this.setState("slide", !1, !0)
                  : this.setState("slide", !0, !0);
              }, this)
            ),
            parseInt(this.parameters.reset) &&
              this.slider.sliderElement.on(
                "mainAnimationComplete",
                t.proxy(function(e, i, s, n) {
                  -1 ==
                    t.inArray(
                      this.slide,
                      this.slider.getVisibleSlides(this.slider.slides[n])
                    ) && this.player.seekTo(0);
                }, this)
              )),
          this.readyDeferred.resolve(),
          "" !== this.parameters["scroll-pause"]
            ? N2Classes.ScrollTracker.add(
                this.$playerElement,
                this.parameters["scroll-pause"],
                t.proxy(function() {
                  this.setState("scroll", !0, !0);
                }, this),
                t.proxy(function() {
                  this.setState("continuePlay", !0),
                    this.setState("scroll", !1, !0);
                }, this)
              )
            : this.setState("scroll", !0, !0);
      }),
      (i.prototype.onResize = function() {
        var t = 100,
          e = this.$playerElement.parent(),
          i = e.width(),
          s = e.height() + t,
          n = 16 / 9,
          r = { width: i, height: s, marginTop: 0 };
        (r[n2const.rtl.marginLeft] = 0),
          i / s > n
            ? ((r.height = i * n), (r.marginTop = (s - r.height) / 2))
            : ((r.width = s * n),
              (r[n2const.rtl.marginLeft] = (i - r.width) / 2)),
          this.$playerElement.css(r);
      }),
      (i.prototype.initAutoplay = function() {
        this.isStatic
          ? (this.setState("play", !0), this.setState("slide", !0, !0))
          : (this.slider.sliderElement.on(
              "mainAnimationComplete",
              t.proxy(function(e, i, s, n) {
                t.inArray(
                  this.slide,
                  this.slider.getVisibleSlides(this.slider.slides[n])
                ) >= 0
                  ? (this.setState("play", !0), this.setState("slide", !0, !0))
                  : this.setState("slide", !1, !0);
              }, this)
            ),
            t.inArray(this.slide, this.slider.getVisibleSlides()) >= 0 &&
              (this.setState("play", !0), this.setState("slide", !0, !0)));
      }),
      (i.prototype.setState = function(t, e, i) {
        (i = i || !1),
          (this.state[t] = e),
          i &&
            (this.state.play && this.state.slide && this.state.scroll
              ? this.play()
              : this.pause());
      }),
      (i.prototype.play = function() {
        this.isStopped() &&
          (this.slider.sliderElement.trigger("mediaStarted", this.playerId),
          this.player.playVideo());
      }),
      (i.prototype.pause = function() {
        this.isStopped() || this.player.pauseVideo();
      }),
      (i.prototype.stop = function() {
        this.player.stopVideo();
      }),
      (i.prototype.isStopped = function() {
        var t = this.player.getPlayerState();
        switch (t) {
          case -1:
          case 0:
          case 2:
          case 5:
            return !0;
          default:
            return !1;
        }
      }),
      (i.prototype.setVolume = function(t) {
        this.player.setVolume(100 * t);
      }),
      i
    );
  }),
  N2D("smartslider-frontend"));
